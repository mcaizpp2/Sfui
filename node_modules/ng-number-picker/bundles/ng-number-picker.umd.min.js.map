{"version":3,"sources":["ng://ng-number-picker/lib/number-picker.service.ts","ng://ng-number-picker/lib/number-picker.component.ts","ng://ng-number-picker/lib/number-picker.module.ts"],"names":["NumberPickerService","this","min","max","step","pickStartAfter","pickTimer","precision","value","Injectable","NumberPickerComponent","numberPickerService","eventHolder","countInterval","isInputFocused","size","customClass","mouseWheel","arrowKeys","inputReadOnly","showUpButton","showDownButton","valueChange","EventEmitter","minReached","maxReached","pickStarted","pickStoped","pickUpStarted","pickUpStoped","pickDownStarted","pickDownStoped","prototype","ngOnInit","initPicker","isHorizontal","buttonsOrientation","onFocus","event","preventDefault","stopPropagation","onBlur","onMouseWheel","wheelUp","delta","deltaY","detail","afterMouseWheels","onPickStarted","onIncrease","onDecrease","onPickStoped","onValueChange","parseVal","emit","canDecrease","round","canIncrease","onMouseDown","increase","afterMouseDown","isArrowUpDown","keyCode","isArowUp","loopPick","_this","setTimeout","setInterval","onMouseUp","afterMouseUp","onKeyDown","onKeyUp","afterPick","up","isLeftClick","which","clearTimers","clearTimeout","clearInterval","afterArrowKeysPressed","start","parseFloat","getPrecision","exec","String","length","Math","pow","witch","placeholder","undefined","Component","args","selector","template","Input","Output","NumberPickerModule","NgModule","imports","CommonModule","FormsModule","providers","declarations","exports"],"mappings":"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","sourcesContent":["import { Injectable } from '@angular/core';\nimport { buttonsOrientationType, sizeType } from './number-picker.config';\nimport { CustomClasses } from './number-picker.config';\n\n@Injectable()\nexport class NumberPickerService {\n  /**\n   * Min picker value\n   */\n  min = 0;\n  /**\n   * Max picker value\n   */\n  max = 100;\n  /**\n   * Pick step value\n   */\n  step = 1;\n  /**\n   * Delay for start picking values\n   */\n  pickStartAfter = 500;\n  /**\n   * Delay betweens each pick\n   */\n  pickTimer = 100;\n  /**\n   * value precision\n   */\n  precision = 1;\n  /**\n   * Inital picker value\n   */\n  value = null;\n}\n","import { Component, OnInit, Input, Output, EventEmitter, HostListener } from '@angular/core';\nimport { buttonsOrientationType, sizeType, CustomClasses } from './number-picker.config';\nimport { NumberPickerService } from './number-picker.service';\n\n@Component({\n  selector: 'ng-number-picker',\n  template: `\n  <div class=\"input-group mb-3 input-{{size}} {{customClass.container}}\">\n  <!-- Horizontal decrease button orientation -->\n  <div class=\"input-group-prepend\" *ngIf=\"isHorizontal() && showDownButton\">\n    <span class=\"input-group-text decrease {{customClass.down}}\" (click)=\"onDecrease($event)\"\n    (mouseup)=\"onMouseUp($event, false)\" (mousedown)=\"onMouseDown($event, false)\">-</span>\n  </div>\n  <!-- Input prefix -->\n  <div *ngIf=\"prefix\" class=\"input-group-prepend\">\n    <span class=\"input-group-text {{customClass.prefix}}\">{{prefix}}</span>\n  </div>\n  <input type=\"number\" class=\"form-control\" name=\"input-spin-val\"\n  [(ngModel)]=\"value\"\n  [readOnly]=\"inputReadOnly\"\n  (blur)=\"onBlur($event)\"\n  (focus)=\"onFocus($event)\"\n  (mousewheel)=\"mouseWheel && onMouseWheel($event)\"\n  (keyup)=\"arrowKeys && onKeyUp($event)\"\n  (keydown)=\"arrowKeys && onKeyDown($event)\"\n  (keydown.arrowup)=\"arrowKeys && onIncrease($event)\"\n  (keydown.arrowdown)=\"arrowKeys && onDecrease($event)\"\n  (change)=\"onValueChange($event)\"\n  [placeholder]=\"placeholder\"\n  >\n  <!-- Input postfix -->\n  <div *ngIf=\"postfix\" class=\"input-group-prepend\">\n    <span class=\"input-group-text {{customClass.postfix}}\" [style.borderLeft]=\"'0'\">{{postfix}}</span>\n  </div>\n  <!-- Horizontal increase button orientation -->\n  <div class=\"input-group-prepend\" *ngIf=\"isHorizontal() && showUpButton\">\n    <span class=\"input-group-text increase {{customClass.up}}\" [style.borderLeft]=\"(!postfix) ? '0' : ''\" (click)=\"onIncrease($event)\"\n    (mouseup)=\"onMouseUp($event)\" (mousedown)=\"onMouseDown($event)\">+</span>\n  </div>\n  <!-- Vertical buttons orientation -->\n  <div class=\"input-group-append\" *ngIf=\"!isHorizontal()\">\n    <span class=\"input-group-text vertical p-0\">\n      <span *ngIf=\"showUpButton\" class=\"{{customClass.up}}\" (click)=\"onIncrease($event)\" (mouseup)=\"onMouseUp($event)\"\n      (mousedown)=\"onMouseDown($event)\">+</span>\n      <span *ngIf=\"showDownButton\" class=\"{{customClass.down}}\" (click)=\"onDecrease($event)\" (mouseup)=\"onMouseUp($event, false)\"\n      (mousedown)=\"onMouseDown($event, false)\">-</span>\n    </span>\n  </div>\n</div>\n  `,\n  styleUrls: ['./number-picker.css']\n})\nexport class NumberPickerComponent implements OnInit {\n  private precision: number;\n  private eventHolder = null;\n  private countInterval = null;\n  private isInputFocused = false;\n\n  @Input() min: number;\n  @Input() max: number;\n  @Input() step: number;\n  @Input() value: number;\n  @Input() pickStartAfter: number;\n  @Input() pickTimer: number;\n  @Input() prefix: string;\n  @Input() postfix: string;\n  @Input() placeholder: string;\n  @Input() buttonsOrientation: buttonsOrientationType;\n  @Input() size: sizeType = 'md';\n  @Input() customClass: CustomClasses = {};\n  @Input() mouseWheel = false;\n  @Input() arrowKeys = true;\n  @Input() inputReadOnly = false;\n  @Input() showUpButton = true;\n  @Input() showDownButton = true;\n  @Output() valueChange: EventEmitter<number> = new EventEmitter();\n  @Output() minReached: EventEmitter<boolean> = new EventEmitter();\n  @Output() maxReached: EventEmitter<boolean> = new EventEmitter();\n  @Output() pickStarted: EventEmitter<boolean> = new EventEmitter();\n  @Output() pickStoped: EventEmitter<boolean> = new EventEmitter();\n  @Output() pickUpStarted: EventEmitter<boolean> = new EventEmitter();\n  @Output() pickUpStoped: EventEmitter<boolean> = new EventEmitter();\n  @Output() pickDownStarted: EventEmitter<boolean> = new EventEmitter();\n  @Output() pickDownStoped: EventEmitter<boolean> = new EventEmitter();\n\n  constructor(private numberPickerService: NumberPickerService) { }\n\n  ngOnInit() {\n    this.initPicker();\n  }\n\n  isHorizontal(): boolean {\n    return (this.buttonsOrientation !== 'v' && this.buttonsOrientation !== 'vertical');\n  }\n\n  onFocus(event: FocusEvent) {\n    event.preventDefault();\n    event.stopPropagation();\n    this.isInputFocused = true;\n  }\n\n  onBlur(event: Event) {\n    event.preventDefault();\n    event.stopPropagation();\n    this.isInputFocused = false;\n  }\n\n  onMouseWheel(event: MouseWheelEvent) {\n    if (this.isInputFocused) {\n      event.preventDefault();\n      let wheelUp = null;\n      let delta = null;\n\n      if (event.deltaY) {\n        delta = event.deltaY / 60;\n      }\n      if (event.detail) {\n        delta = -event.detail / 2;\n      }\n      if (delta !== null) {\n        wheelUp = delta > 0;\n      }\n\n      this.afterMouseWheels(wheelUp, event);\n      event.stopPropagation();\n    }\n  }\n\n  private afterMouseWheels(wheelUp: any, event: WheelEvent) {\n    this.onPickStarted(wheelUp);\n    if (wheelUp) {\n      this.onIncrease(event);\n    } else {\n      this.onDecrease(event);\n    }\n    this.onPickStoped(wheelUp);\n  }\n\n  onValueChange(event: Event) {\n    if (this.value > this.max) {\n      this.value = this.max;\n    } else if (this.value < this.min) {\n      this.value = this.min;\n    }\n    if (this.parseVal(this.value)) {\n      this.valueChange.emit(this.value);\n    }\n  }\n\n  onDecrease(event: MouseEvent | MouseWheelEvent | KeyboardEvent) {\n    event.preventDefault();\n    if (this.canDecrease()) {\n      this.value = this.round((this.value > this.min) ? this.value -= this.step : this.value);\n      this.valueChange.emit(this.value);\n    } else {\n      this.minReached.emit(true);\n    }\n    event.stopPropagation();\n  }\n\n  onIncrease(event: MouseEvent | MouseWheelEvent | KeyboardEvent) {\n    event.preventDefault();\n    if (this.canIncrease()) {\n      this.value = this.round((this.value < this.max) ? this.value += this.step : this.value);\n      this.valueChange.emit(this.value);\n    } else {\n      this.maxReached.emit(true);\n    }\n    event.stopPropagation();\n  }\n\n  onMouseDown(event: MouseEvent, increase: boolean = true) {\n    this.afterMouseDown(increase, event);\n  }\n\n  private isArrowUpDown(keyCode: number): boolean {\n    return keyCode === 38 || keyCode === 40;\n  }\n\n  private isArowUp(keyCode: number): boolean {\n    return keyCode === 38;\n  }\n\n  private loopPick(increase: boolean, event: MouseEvent | KeyboardEvent) {\n    this.onPickStarted(increase);\n    this.eventHolder = setTimeout(() => {\n      this.countInterval = setInterval(() => {\n        if (increase) {\n          this.onIncrease(event);\n        } else {\n          this.onDecrease(event);\n        }\n      }, this.pickTimer);\n    }, this.pickStartAfter);\n  }\n\n  onMouseUp(event: MouseEvent, increase: boolean = true) {\n    this.afterMouseUp(increase, event);\n  }\n\n  onKeyDown(event: KeyboardEvent) {\n    if (this.isArrowUpDown(event.keyCode)) {\n      event.preventDefault();\n      if (!this.eventHolder) {\n        this.loopPick(this.isArowUp(event.keyCode), event);\n      }\n    }\n    event.stopPropagation();\n  }\n\n  onKeyUp(event: KeyboardEvent) {\n    if (this.isArrowUpDown(event.keyCode)) {\n      event.preventDefault();\n      this.afterPick(this.isArowUp(event.keyCode));\n    }\n    event.stopPropagation();\n  }\n\n  private afterMouseDown(up: boolean, event: MouseEvent) {\n    event.preventDefault();\n    if (this.isLeftClick(event.which)) {\n      this.loopPick(up, event);\n    }\n    event.stopPropagation();\n  }\n\n  private afterMouseUp(up: boolean, event: MouseEvent) {\n    event.preventDefault();\n    this.afterPick(up);\n    event.stopPropagation();\n  }\n\n  private afterPick(up: boolean) {\n    this.onPickStoped(up);\n    this.clearTimers();\n  }\n\n  private clearTimers() {\n    clearTimeout(this.eventHolder);\n    clearInterval(this.countInterval);\n    this.eventHolder = null;\n    this.countInterval = null;\n  }\n\n  private afterArrowKeysPressed(up: boolean, event: KeyboardEvent, start: boolean) {\n    if (start) {\n      this.loopPick(up, event);\n    } else {\n      this.afterPick(up);\n    }\n  }\n\n  private parseVal(value: string | number) {\n    if (typeof value === 'number') {\n      return value;\n    }\n\n    return parseFloat(value);\n  }\n\n  private getPrecision(step: number): number {\n    return /\\d*$/.exec(String(step))[0].length;\n  }\n\n  private round(value: number): number {\n    return Math.round(value * Math.pow(10, this.precision)) / Math.pow(10, this.precision);\n  }\n\n  private canIncrease(): boolean {\n    const canIncrease = (this.value <= this.max - this.step);\n    if (!canIncrease) {\n      this.value = this.max;\n    }\n    return canIncrease;\n  }\n\n  private canDecrease(): boolean {\n    const canDecrease = (this.value >= this.min + this.step);\n    if (!canDecrease) {\n      this.value = this.min;\n    }\n    return canDecrease;\n  }\n\n  private onPickStarted(increase: boolean) {\n    if (increase) {\n      if (this.canIncrease()) {\n        this.pickStarted.emit(true);\n        this.pickUpStarted.emit(true);\n      }\n    } else {\n      if (this.canDecrease()) {\n        this.pickStarted.emit(true);\n        this.pickDownStarted.emit(true);\n      }\n    }\n  }\n\n  private onPickStoped(increase: boolean) {\n    if (increase) {\n      if (this.canIncrease()) {\n        this.pickUpStoped.emit(true);\n        this.pickStoped.emit(true);\n      }\n    } else {\n      if (this.canDecrease()) {\n        this.pickDownStoped.emit(true);\n        this.pickStoped.emit(true);\n      }\n    }\n  }\n\n  private isLeftClick(witch: number): boolean {\n    return witch === 1;\n  }\n\n  private initPicker(): void {\n    this.min = this.parseVal(this.min) || this.numberPickerService.min;\n    this.max = this.parseVal(this.max) || this.numberPickerService.max;\n    this.step = this.parseVal(this.step) || this.numberPickerService.step;\n    this.value = this.parseVal(this.value) || this.numberPickerService.value;\n    this.pickStartAfter = this.parseVal(this.pickStartAfter) || this.numberPickerService.pickStartAfter;\n    this.pickTimer = this.parseVal(this.pickTimer) || this.numberPickerService.pickTimer;\n    this.precision = this.getPrecision(this.step) || this.numberPickerService.precision;\n    this.value = this.round(this.value);\n    this.placeholder = this.placeholder !== undefined ? this.placeholder : '';\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { NumberPickerComponent } from './number-picker.component';\nimport { CommonModule } from '@angular/common';\nimport { NumberPickerService } from './number-picker.service';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule\n  ],\n  providers: [NumberPickerService],\n  declarations: [NumberPickerComponent],\n  exports: [NumberPickerComponent]\n})\nexport class NumberPickerModule { }\n"]}