import { ElementRef, EventEmitter, NgZone, OnDestroy, Renderer2, TemplateRef } from '@angular/core';
import { NgxFileDropEntry } from './ngx-file-drop-entry';
import * as ɵngcc0 from '@angular/core';
export declare class NgxFileDropComponent implements OnDestroy {
    private zone;
    private renderer;
    accept: string;
    directory: boolean;
    multiple: boolean;
    dropZoneLabel: string;
    dropZoneClassName: string;
    contentClassName: string;
    disabled: boolean;
    showBrowseBtn: boolean;
    browseBtnClassName: string;
    browseBtnLabel: string;
    onFileDrop: EventEmitter<NgxFileDropEntry[]>;
    onFileOver: EventEmitter<any>;
    onFileLeave: EventEmitter<any>;
    contentTemplate: TemplateRef<any>;
    fileSelector: ElementRef;
    isDraggingOverDropZone: boolean;
    private globalDraggingInProgress;
    private globalDragStartListener;
    private globalDragEndListener;
    private files;
    private numOfActiveReadEntries;
    private helperFormEl;
    private fileInputPlaceholderEl;
    private dropEventTimerSubscription;
    private _disabled;
    constructor(zone: NgZone, renderer: Renderer2);
    ngOnDestroy(): void;
    onDragOver(event: Event): void;
    onDragLeave(event: Event): void;
    dropFiles(event: DragEvent): void;
    openFileSelector: (event?: MouseEvent) => void;
    /**
     * Processes the change event of the file input and adds the given files.
     * @param Event event
     */
    uploadFiles(event: Event): void;
    private checkFiles;
    private traverseFileTree;
    /**
     * Clears any added files from the file input element so the same file can subsequently be added multiple times.
     */
    private resetFileInput;
    /**
     * Get a cached HTML form element as a helper element to clear the file input element.
     */
    private getHelperFormElement;
    /**
     * Get a cached HTML div element to be used as placeholder for the file input element when clearing said element.
     */
    private getFileInputPlaceholderElement;
    private canGetAsEntry;
    private isDropzoneDisabled;
    private addToQueue;
    private preventAndStop;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<NgxFileDropComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<NgxFileDropComponent, "ngx-file-drop", never, { "accept": "accept"; "directory": "directory"; "multiple": "multiple"; "dropZoneLabel": "dropZoneLabel"; "dropZoneClassName": "dropZoneClassName"; "contentClassName": "contentClassName"; "showBrowseBtn": "showBrowseBtn"; "browseBtnClassName": "browseBtnClassName"; "browseBtnLabel": "browseBtnLabel"; "disabled": "disabled"; }, { "onFileDrop": "onFileDrop"; "onFileOver": "onFileOver"; "onFileLeave": "onFileLeave"; }, ["contentTemplate"], never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmd4LWZpbGUtZHJvcC5jb21wb25lbnQuZC50cyIsInNvdXJjZXMiOlsibmd4LWZpbGUtZHJvcC5jb21wb25lbnQuZC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBOztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FBQ0EiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBFbGVtZW50UmVmLCBFdmVudEVtaXR0ZXIsIE5nWm9uZSwgT25EZXN0cm95LCBSZW5kZXJlcjIsIFRlbXBsYXRlUmVmIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcbmltcG9ydCB7IE5neEZpbGVEcm9wRW50cnkgfSBmcm9tICcuL25neC1maWxlLWRyb3AtZW50cnknO1xyXG5leHBvcnQgZGVjbGFyZSBjbGFzcyBOZ3hGaWxlRHJvcENvbXBvbmVudCBpbXBsZW1lbnRzIE9uRGVzdHJveSB7XHJcbiAgICBwcml2YXRlIHpvbmU7XHJcbiAgICBwcml2YXRlIHJlbmRlcmVyO1xyXG4gICAgYWNjZXB0OiBzdHJpbmc7XHJcbiAgICBkaXJlY3Rvcnk6IGJvb2xlYW47XHJcbiAgICBtdWx0aXBsZTogYm9vbGVhbjtcclxuICAgIGRyb3Bab25lTGFiZWw6IHN0cmluZztcclxuICAgIGRyb3Bab25lQ2xhc3NOYW1lOiBzdHJpbmc7XHJcbiAgICBjb250ZW50Q2xhc3NOYW1lOiBzdHJpbmc7XHJcbiAgICBkaXNhYmxlZDogYm9vbGVhbjtcclxuICAgIHNob3dCcm93c2VCdG46IGJvb2xlYW47XHJcbiAgICBicm93c2VCdG5DbGFzc05hbWU6IHN0cmluZztcclxuICAgIGJyb3dzZUJ0bkxhYmVsOiBzdHJpbmc7XHJcbiAgICBvbkZpbGVEcm9wOiBFdmVudEVtaXR0ZXI8Tmd4RmlsZURyb3BFbnRyeVtdPjtcclxuICAgIG9uRmlsZU92ZXI6IEV2ZW50RW1pdHRlcjxhbnk+O1xyXG4gICAgb25GaWxlTGVhdmU6IEV2ZW50RW1pdHRlcjxhbnk+O1xyXG4gICAgY29udGVudFRlbXBsYXRlOiBUZW1wbGF0ZVJlZjxhbnk+O1xyXG4gICAgZmlsZVNlbGVjdG9yOiBFbGVtZW50UmVmO1xyXG4gICAgaXNEcmFnZ2luZ092ZXJEcm9wWm9uZTogYm9vbGVhbjtcclxuICAgIHByaXZhdGUgZ2xvYmFsRHJhZ2dpbmdJblByb2dyZXNzO1xyXG4gICAgcHJpdmF0ZSBnbG9iYWxEcmFnU3RhcnRMaXN0ZW5lcjtcclxuICAgIHByaXZhdGUgZ2xvYmFsRHJhZ0VuZExpc3RlbmVyO1xyXG4gICAgcHJpdmF0ZSBmaWxlcztcclxuICAgIHByaXZhdGUgbnVtT2ZBY3RpdmVSZWFkRW50cmllcztcclxuICAgIHByaXZhdGUgaGVscGVyRm9ybUVsO1xyXG4gICAgcHJpdmF0ZSBmaWxlSW5wdXRQbGFjZWhvbGRlckVsO1xyXG4gICAgcHJpdmF0ZSBkcm9wRXZlbnRUaW1lclN1YnNjcmlwdGlvbjtcclxuICAgIHByaXZhdGUgX2Rpc2FibGVkO1xyXG4gICAgY29uc3RydWN0b3Ioem9uZTogTmdab25lLCByZW5kZXJlcjogUmVuZGVyZXIyKTtcclxuICAgIG5nT25EZXN0cm95KCk6IHZvaWQ7XHJcbiAgICBvbkRyYWdPdmVyKGV2ZW50OiBFdmVudCk6IHZvaWQ7XHJcbiAgICBvbkRyYWdMZWF2ZShldmVudDogRXZlbnQpOiB2b2lkO1xyXG4gICAgZHJvcEZpbGVzKGV2ZW50OiBEcmFnRXZlbnQpOiB2b2lkO1xyXG4gICAgb3BlbkZpbGVTZWxlY3RvcjogKGV2ZW50PzogTW91c2VFdmVudCkgPT4gdm9pZDtcclxuICAgIC8qKlxyXG4gICAgICogUHJvY2Vzc2VzIHRoZSBjaGFuZ2UgZXZlbnQgb2YgdGhlIGZpbGUgaW5wdXQgYW5kIGFkZHMgdGhlIGdpdmVuIGZpbGVzLlxyXG4gICAgICogQHBhcmFtIEV2ZW50IGV2ZW50XHJcbiAgICAgKi9cclxuICAgIHVwbG9hZEZpbGVzKGV2ZW50OiBFdmVudCk6IHZvaWQ7XHJcbiAgICBwcml2YXRlIGNoZWNrRmlsZXM7XHJcbiAgICBwcml2YXRlIHRyYXZlcnNlRmlsZVRyZWU7XHJcbiAgICAvKipcclxuICAgICAqIENsZWFycyBhbnkgYWRkZWQgZmlsZXMgZnJvbSB0aGUgZmlsZSBpbnB1dCBlbGVtZW50IHNvIHRoZSBzYW1lIGZpbGUgY2FuIHN1YnNlcXVlbnRseSBiZSBhZGRlZCBtdWx0aXBsZSB0aW1lcy5cclxuICAgICAqL1xyXG4gICAgcHJpdmF0ZSByZXNldEZpbGVJbnB1dDtcclxuICAgIC8qKlxyXG4gICAgICogR2V0IGEgY2FjaGVkIEhUTUwgZm9ybSBlbGVtZW50IGFzIGEgaGVscGVyIGVsZW1lbnQgdG8gY2xlYXIgdGhlIGZpbGUgaW5wdXQgZWxlbWVudC5cclxuICAgICAqL1xyXG4gICAgcHJpdmF0ZSBnZXRIZWxwZXJGb3JtRWxlbWVudDtcclxuICAgIC8qKlxyXG4gICAgICogR2V0IGEgY2FjaGVkIEhUTUwgZGl2IGVsZW1lbnQgdG8gYmUgdXNlZCBhcyBwbGFjZWhvbGRlciBmb3IgdGhlIGZpbGUgaW5wdXQgZWxlbWVudCB3aGVuIGNsZWFyaW5nIHNhaWQgZWxlbWVudC5cclxuICAgICAqL1xyXG4gICAgcHJpdmF0ZSBnZXRGaWxlSW5wdXRQbGFjZWhvbGRlckVsZW1lbnQ7XHJcbiAgICBwcml2YXRlIGNhbkdldEFzRW50cnk7XHJcbiAgICBwcml2YXRlIGlzRHJvcHpvbmVEaXNhYmxlZDtcclxuICAgIHByaXZhdGUgYWRkVG9RdWV1ZTtcclxuICAgIHByaXZhdGUgcHJldmVudEFuZFN0b3A7XHJcbn1cclxuIl19