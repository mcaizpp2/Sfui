{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///node_modules/moment/locale sync ^\\.\\/.*$","webpack:///src/app/AgGrid/CellEditors/state-editor/state-editor.component.ts","webpack:///src/app/AgGrid/CellEditors/state-editor/state-editor.component.html","webpack:///src/app/AgGrid/Filters/txt-dis-filter/txt-dis-filter.component.ts","webpack:///src/app/AgGrid/Filters/txt-dis-filter/txt-dis-filter.component.html","webpack:///src/app/AgGrid/btn-render/btn-render.component.ts","webpack:///src/app/AgGrid/btn-render/btn-render.component.html","webpack:///src/app/AgGrid/checkbox-cell-component.ts","webpack:///src/app/AgGrid/checkbox-cell.component.html","webpack:///src/app/AgGrid/router-link-two/router-link-two.component.ts","webpack:///src/app/AgGrid/router-link-two/router-link-two.component.html","webpack:///src/app/AgGrid/router-link/router-link.component.ts","webpack:///src/app/AgGrid/router-link/router-link.component.html","webpack:///src/app/Bl/admin-values-bl.ts","webpack:///src/app/Bl/cleansing-bl.ts","webpack:///src/app/Bl/comparebl.ts","webpack:///src/app/Bl/encoder-bl.ts","webpack:///src/app/Bl/location-bl.ts","webpack:///src/app/Bl/lookup-bl.ts","webpack:///src/app/Bl/maintenance-bl.ts","webpack:///src/app/Bl/manager-bl.ts","webpack:///src/app/Bl/mapping-bl.ts","webpack:///src/app/Bl/paging-bl.ts","webpack:///src/app/Data/admin-values-service.ts","webpack:///src/app/Data/api-base.ts","webpack:///src/app/Data/authentication-service.ts","webpack:///src/app/Data/cleansing-service.ts","webpack:///src/app/Data/compare-service.ts","webpack:///src/app/Data/encorder-service.ts","webpack:///src/app/Data/location-service.ts","webpack:///src/app/Data/lookupservice.ts","webpack:///src/app/Data/maintenance-service.ts","webpack:///src/app/Data/manager.service.ts","webpack:///src/app/Data/mapping-service.ts","webpack:///src/app/Data/paging-service.ts","webpack:///src/app/Data/userservice.ts","webpack:///src/app/Format/ngb-date-parser-formatter.ts","webpack:///src/app/Models/Dtos/Cleansing/join-criteria.ts","webpack:///src/app/Models/Dtos/Cleansing/join-modal-dto.ts","webpack:///src/app/Models/Dtos/Cleansing/map-lkp-dto.ts","webpack:///src/app/Models/Dtos/Cleansing/menu-option.ts","webpack:///src/app/Models/Dtos/Cleansing/operation-param.ts","webpack:///src/app/Models/Dtos/Cleansing/operation-type-dto.ts","webpack:///src/app/Models/Dtos/LkpSprinkler.ts","webpack:///src/app/Models/Dtos/account-dto.ts","webpack:///src/app/Models/Dtos/bdlg-class-dto.ts","webpack:///src/app/Models/Dtos/col-map-dto.ts","webpack:///src/app/Models/Dtos/conversion-dto.ts","webpack:///src/app/Models/Dtos/encoder-dto.ts","webpack:///src/app/Models/Dtos/field-dto.ts","webpack:///src/app/Models/Dtos/loc-updates-dto.ts","webpack:///src/app/Models/Dtos/map-header-dto.ts","webpack:///src/app/Models/Dtos/mapping-val-dto.ts","webpack:///src/app/Models/Dtos/occupancy-lkp-dto.ts","webpack:///src/app/Models/Dtos/paging-dto.ts","webpack:///src/app/Models/Dtos/str-lookup-dto.ts","webpack:///src/app/Models/Dtos/test-term.ts","webpack:///src/app/Models/Dtos/user-dto.ts","webpack:///src/app/Models/Dtos/work-sheet-dtos.ts","webpack:///src/app/Models/Enums/MatchedEnum.ts","webpack:///src/app/Models/Enums/field-types.ts","webpack:///src/app/Models/Enums/join-type-enum.ts","webpack:///src/app/Models/Enums/message-type.ts","webpack:///src/app/Models/Enums/severity.enum.ts","webpack:///src/app/Models/Enums/status.enum.ts","webpack:///src/app/Models/Enums/value-type-enum.ts","webpack:///src/app/Models/Requests/add-operation-request.ts","webpack:///src/app/Models/Requests/authenticate-request.ts","webpack:///src/app/Models/Requests/change-pwd-request.ts","webpack:///src/app/Models/Requests/cleanse-export-request.ts","webpack:///src/app/Models/Requests/cleanse-request.ts","webpack:///src/app/Models/Requests/commit-request.ts","webpack:///src/app/Models/Requests/commit-values-request.ts","webpack:///src/app/Models/Requests/compare-request.ts","webpack:///src/app/Models/Requests/create-encoder-request.ts","webpack:///src/app/Models/Requests/delete-user-request.ts","webpack:///src/app/Models/Requests/delete-values-request.ts","webpack:///src/app/Models/Requests/files-request.ts","webpack:///src/app/Models/Requests/get-cleansed-mgr-request.ts","webpack:///src/app/Models/Requests/loc-updates-request.ts","webpack:///src/app/Models/Requests/manager-request.ts","webpack:///src/app/Models/Requests/new-cleansed-request.ts","webpack:///src/app/Models/Requests/paging-request.ts","webpack:///src/app/Models/Requests/replay-request.ts","webpack:///src/app/Models/Requests/save-conversion-mappings-request.ts","webpack:///src/app/Models/Requests/stage-request.ts","webpack:///src/app/Models/Requests/update-sprinkler-request.ts","webpack:///src/app/Models/Requests/update-value-request.ts","webpack:///src/app/Models/chk-message.ts","webpack:///src/app/Models/map-criteria.ts","webpack:///src/app/Models/notification-message.ts","webpack:///src/app/Pipes/to-matrix.pipe.ts","webpack:///src/app/Services/auth-guard.ts","webpack:///src/app/Services/conversion.service.ts","webpack:///src/app/Services/mediator.service.ts","webpack:///src/app/Services/message-service.ts","webpack:///src/app/Services/signal-rservice.ts","webpack:///src/app/SmartyPants/main/main.component.ts","webpack:///src/app/SmartyPants/main/main.component.html","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/bl/user-bl.ts","webpack:///src/app/components/Admin/changed-values/changed-values.component.html","webpack:///src/app/components/Admin/changed-values/changed-values.component.ts","webpack:///src/app/components/Admin/mi/mi.component.html","webpack:///src/app/components/Admin/mi/mi.component.ts","webpack:///src/app/components/Admin/users/users.component.html","webpack:///src/app/components/Admin/users/users.component.ts","webpack:///src/app/components/Ctrls/Cleansing/Component/join/join.component.ts","webpack:///src/app/components/Ctrls/Cleansing/Component/join/join.component.html","webpack:///src/app/components/Ctrls/Cleansing/map-lkp/map-lkp.component.ts","webpack:///src/app/components/Ctrls/Cleansing/map-lkp/map-lkp.component.html","webpack:///src/app/components/Ctrls/numeric-ctrl/numeric-ctrl.component.ts","webpack:///src/app/components/Ctrls/numeric-ctrl/numeric-ctrl.component.html","webpack:///src/app/components/Templates/encoders/encoders.component.ts","webpack:///src/app/components/Templates/encoders/encoders.component.html","webpack:///src/app/components/Templates/view-encoders/view-encoders.component.html","webpack:///src/app/components/Templates/view-encoders/view-encoders.component.ts","webpack:///src/app/components/bar/bar.component.ts","webpack:///src/app/components/bar/bar.component.html","webpack:///src/app/components/change-pwd/change-pwd.component.html","webpack:///src/app/components/change-pwd/change-pwd.component.ts","webpack:///src/app/components/cleanse-mgr/cleanse-mgr.component.html","webpack:///src/app/components/cleanse-mgr/cleanse-mgr.component.ts","webpack:///src/app/components/cleanse/cleanse.component.html","webpack:///src/app/components/cleanse/cleanse.component.ts","webpack:///src/app/components/compare/compare.component.html","webpack:///src/app/components/compare/compare.component.ts","webpack:///src/app/components/context-menu/context-menu.component.ts","webpack:///src/app/components/context-menu/context-menu.component.html","webpack:///src/app/components/import/import.component.html","webpack:///src/app/components/import/import.component.ts","webpack:///src/app/components/login/login.component.ts","webpack:///src/app/components/login/login.component.html","webpack:///src/app/components/manager/manager.component.html","webpack:///src/app/components/manager/manager.component.ts","webpack:///src/app/components/mapping-new/mapping-new.component.html","webpack:///src/app/components/mapping-new/mapping-new.component.ts","webpack:///src/app/components/mapping/mapping.component.html","webpack:///src/app/components/mapping/mapping.component.ts","webpack:///src/app/components/pager/pager.component.ts","webpack:///src/app/components/pager/pager.component.html","webpack:///src/app/components/toast-msg/toast-msg.component.ts","webpack:///src/app/components/toast-msg/toast-msg.component.html","webpack:///src/app/components/top/top.component.ts","webpack:///src/app/components/top/top.component.html","webpack:///src/app/components/wizard/assumptions/assumptions.component.ts","webpack:///src/app/components/wizard/assumptions/assumptions.component.html","webpack:///src/app/components/wizard/locations/locations.component.html","webpack:///src/app/components/wizard/locations/locations.component.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts","webpack:///crypto (ignored)?d9a4","webpack:///fs (ignored)","webpack:///crypto (ignored)","webpack:///stream (ignored)"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","map","webpackContext","webpackContextResolve","__webpack_require__","o","webpackContextKeys","Object","StateEditorComponent","_lookupBl","LoadLookups","params","_params","value","values","states","States","find","x","Selected","GetLocationLookups","lookupsResponse","status","selector","templateUrl","styleUrls","TxtDisFilterComponent","text","valueGetter","model","BtnRenderComponent","data","zipPath","HasVisibleLink","loadValId","sprinklerValsId","state","label","onClick","CheckBoxCellComponent","_mediatorService","reconciled","api","refreshCells","chkMsg","LocId","locId","Checked","emit","RouterLinkTwoComponent","hasLocations","RouterLinkComponent","cleansedMgrId","AdminValuesBl","_adminValueService","Get","response","sprinklerValsDto","DeleteSprinkler","CommitSprinkler","valueId","valueType","deleteValRequest","ValueType","ValueId","CommitValue","DeleteValue","updateValRequest","Value","UpdateValue","updateSprinklerRequest","SprinklerValue","UpdateSprinklerValue","providedIn","CleansingBl","_cleansingService","name","userId","file","newCleansedRequest","Imported","New","cleanseMgrId","show","cleanLoadRequest","CleanseMgrId","Show","Load","LoadOperations","operationType","menuOption","componentTwoIdx","workSheetTwoIdx","mapColIdx","valueColIdx","joins","opParam","WorkSheetId","Component","ComponentName","WorkSheet","ComponentId","ColIdx","RowIdx","Joins","ComponentTwoId","WorkSheetTwoId","MapColIdx","ValueColIdx","addOperationRequest","OperationsType","CleansedMgrId","OperationsParam","AddOperation","pagingDto","request","RecFirst","RecLast","operationId","DeleteOperation","copyFromId","user","replayRequest","CopyFromId","Name","UserId","Replay","cleanseExportRequest","User","Export","CompareBl","_compareService","GetFiles","getWorkSheetsRequest","GetWorkSheets","compareRequest","Compare","EncoderBl","_encoderService","clientId","client","encoder","defaultEncoder","Encoder","Create","LocationBl","_locationService","convId","GetMappedConversion","MapLocations","numberOfRecords","retrieveMultiple","RetrieveMultiple2","conversionId","parseType","GetProgress","locations","fieldType","addToLoadVals","summaryDto","lst","forEach","push","LocationId","FieldId","AddToLoadVals","SegmentId","segmentId","locUpdatesRequest","ConvId","LocationUpdates","SummaryDto","DeleteProgress","LookupBl","_lookupService","ImportGet","GetUserLookups","MaintenanceBl","_maintenanceService","stageRequest","Stage","commitRequest","Commit","GetTestTerms","DeleteloadVal","ManagerBl","_managerService","DeleteLocations","pagingRequest","account","managerRequest","Account","Status","workSheet","UploadFile","conversion","SaveImport","Download","GetSummary","MappingBl","_mappingService","mapHeaders","conversionDto","mapped","filter","selected","fieldId","Mapped","ConversionDto","SaveMappings","GetValidations","addColRequest","AddColumn","PagingBl","_pagingService","JSON","stringify","Filters","PageCommon","cleansedMgrRequest","Page","API_URL","apiUrl","AdminValuesService","_http","_toastr","get","toPromise","ProcessResponse","sprinkler","requestPayLoad","headers","set","post","formData","FormData","append","put","ApiBase","showMsg","message","title","positionClass","titleClass","AuthenticationService","_currentUserSubject","parse","localStorage","getItem","_currentUser","asObservable","authenticateRequest","key","Hex","encryptKey","iv","encrypted","encrypt","Pwd","padding","NoPadding","toString","changePwd","setItem","next","_firstTimeUser","removeItem","changePwdRequest","EXCEL_TYPE","CleansingService","Blob","type","CompareService","droppedFile","EncorderService","LocationService","rowCount","locNumCtr","result","i","ob","pipe","res","datas","console","log","LookupService","MaintenanceService","ManagerService","toast","downloadResource","blob","url","window","URL","createObjectURL","navigator","msSaveOrOpenBlob","a","document","createElement","href","download","body","appendChild","click","removeChild","revokeObjectURL","uri","responseType","conversionPayLoad","MappingService","PagingService","Userservice","deleteUserRequest","userDto","padNumber","isNumber","slice","isNaN","toInteger","parseInt","NgbDateFormatter","dateParts","trim","split","length","year","month","day","date","stringDate","JoinCriteria","assign","JoinModalDto","MapLkpDto","CompNames","MenuOption","OperationParam","OperationTypeDto","SprinklerTypeDto","AccountDto","BldgClassDto","BuildingClassLkpDto","ColMapDto","ConversionFileDto","EncoderDto","FieldDto","LocUpdatesDto","MapHeaderDto","MappingValDto","OccupancyLkpDto","PagingDto","StrLookupDto","LookupDto","ComponentLkpDto","TestTerm","UserDto","UserInfo","WorkSheetDto","MatchedEnum","FieldTypes","JoinTypeEnum","SignalrMessageType","Severity","ValueTypeEnum","AddOperationRequest","AuthenticateRequest","ChangePwdRequest","CleanseExportRequest","CleanLoadRequest","CommitRequest","CommitValuesRequest","CompareRequest","CreateEncoderRequest","DeleteUserRequest","DeleteValuesRequest","GetWorkSheetsRequest","GetCleansedMgrRequest","LocUpdatesRequest","ManagerRequest","NewCleansedRequest","PagingRequest","ReplayRequest","SaveConversionMappingsRequest","StageRequest","UpdateSprinklerRequest","UpdateValueRequest","ChkMessage","MapCriteria","NotificationMessage","messages","ToMatrixPipe","arr","n","rows","Array","from","Math","ceil","_","s","idx","AuthGuard","_router","_authenticationService","route","currentUser","currentUserValue","navigate","queryParams","returnUrl","ConversionService","_conversion","edit","_file","MediatorService","Notify","ConvFailed","Progressed","Refresh","Complete","MessageService","Loading","subject","SignalRService","failMsg","progressMsg","completeMsg","userName","signalrUrl","_connection","configureLogging","Information","withAutomaticReconnect","withUrl","build","start","err","error","register","on","parameter","invoke","MainComponent","routes","AppRoutingModule","forRoot","imports","AppComponent","_signalrService","RefreshUser","initSignalr","connect","RegisterForSignalr","messageSubscription","subscribe","msg","Publish","convFailSubscription","ConvFail","progressSubscription","ProgressSend","completeSubscription","CompleteSend","appRoutes","path","pathMatch","component","canActivate","AppModule","provide","useClass","withComponents","toastComponent","timeOut","declarations","providers","bootstrap","entryComponents","UserBl","_userService","DefaultPwd","ChangePwd","DeleteUser","add","pwd","Save","defaultPwd","ChangedValuesComponent","_adminValuesBl","_modalService","_messagingService","RowSelection","SprinklerColumnDefs","headerName","field","width","headerClass","resizable","cellRendererFramework","cellRendererParams","SelectedSprinkler","ConfirmSprinklerCommit","bind","UpdateSprinkler","ConfirmSprinklerDelete","StateColumnDefs","SelectedValue","ConfirmValuesCommit","State","_selectedValuesId","ConfirmValuesDelete","StreetColumnDefs","Street","LoadingMsg","SprinklerTypes","unknown","yes","no","SprinklerOptions","getRowStyle","node","rowIndex","background","StateOptions","StreetOptions","SprinklerValues","sprinklerValues","StateValues","stateValues","StreetValues","streetValues","_gridApi","setDomLayout","_stateGridApi","_streetGridApi","dismissAll","AgStateCommit","AgStreetCommit","forEachNode","rowNode","index","selectedState","setRowData","splice","open","confirmSprinklerCommitElement","ariaLabelledBy","confirmSprinklerElement","sprinklerElement","valueElement","confirmValuesCommitElement","confirmValuesElement","selectedStreet","originalValue","replacementValue","UpdateStreetAgGrid","UpdateStateAgGrid","selectedSprinkler","sprinklerValue","onSprinklerGridReady","onStateGridReady","onStreetGridReady","MiComponent","_maintenanceBl","_formBuilder","ColumnDefs","editable","types","scheme","onCellClicked","_selectedLoadValToDelete","ConfirmLoadValDelete","TestTermsColumnDefs","cellRenderer","eIconGui","matched","True","innerHTML","False","confirmElement","GetWords","Options","rowClassRules","isAdded","isAddedTerm","TestOptions","TermForm","group","required","buildingClass","occupancy","getSelectedRows","GridSelected","GridLoadValSelected","termToAdd","controls","TestTerms","testTermsId","loadTypeId","terms","Na","answer","answerId","_testGridApi","termElement","FieldType","ShowCommit","ShowTestTerms","Occupancy","BuildingClass","Terms","term","grdTerm","localTerms","setData","flashCells","rowNodes","force","suppressFlash","loadType","_allTerms","addToTerms","DeleteLoadVal","_locationLookups","testTerms","getWordsResponse","LoadVals","loadVals","HasLoaded","UsersComponent","_lookUpBl","_userBl","Users","pinned","UserForm","userType","getUser","lookupResponse","loadUsers","Clients","clients","UserTypes","userTypes","users","SelectedUser","Operation","userElement","setFormValues","GridUserSelected","ctrls","setValue","loggedInUser","userTypeId","_add","_reset","ConfirmTitle","Question","Reset","Delete","Cancel","Add","ResetPwd","JoinComponent","JoinComplete","_joinModalDto","_components","joinType","JoinModal","JoinType","components","GetComponents","HandleMerge","HandleJoin","componentOneRow","componentOneHeaders","SetCompNames","componentTwoRow","componentTwoHeaders","CompTwoWsIdx","componentOptions","workSheetId","CompTwoIdx","compIdx","AddJoinType","ignore","Id","unshift","IsMerge","AddMergeType","joinId","JoinCompId","compTwo","componentOne","componentId","componentTwo","compTwoHeaders","compOneHeaders","joinCriteria","CompOne","CompOneWs","CompTwo","CompTwoWs","ComponentOneHeaders","ComponentTwoHeaders","SelectedJoinType","compOneSelected","CompOneSelected","CompOneDisplay","HandleJoinType","JoinVisible","foundIdx","findIndex","Close","row","cells","cell","headerLkp","colIdx","cellValue","CompTwoChange","MapLkpComponent","MapComplete","MapModalDto","MapVisible","CompTwoNames","NumericCtrlComponent","valueChange","Mapping","priority","Down","EncodersComponent","ViewEncodersComponent","_encoderBl","NoRowsTemplate","initGrid","NewForm","encoderId","newElement","Encoders","encoders","BarComponent","ChangePwdComponent","_route","_returnUrl","snapshot","PwdForm","password","confirm","validator","checkPasswords","pass","confirmPass","notSame","OnSubmit","CleanseMgrComponent","_cleansingBl","_pagingBl","st","received","format","cleansedMgrDto","uploader","disableMultipart","autoUpload","method","itemAlias","initPager","replayId","replayResponse","replayElement","TypeId","Current","RecsPerPage","PageInit","PageCleansed","Paging","GetNew","setFormValuesCommon","CleansedMgrs","cleansedMgrs","event","PageChanged","CleanseComponent","contextMenuPosition","y","FilePath","Processed","Components","_cleanseMgrId","LoadValidations","preventDefault","clientX","clientY","AssignMenuOptions","undefined","rowOptions","contextMenu","menu","focusFirstItem","openMenu","selectedColOption","columnOptions","selectedComponentOptions","onModalCommon","ModalHeader","OperationType","selectedCol","CompOneColIdx","CreateCompNames","mapElement","comp","selectedComponent","CleanedDtos","cl","cmp","modalHeader","joinElement","joinComp","joinTypes","Left","Right","JoinTypes","CompOneFields","CompTwoFields","joinModal","ProcessJoinOperation","mapModalDto","t","mapCriteria","LookupComponentId","MapIdx","MapColumn","ValueIdx","ValueColumn","ProcessMapOperation","componentName","columnOption","ColumnMenuOptions","ColumnMenuOptionsNull","ComponentMenuOptions","ComponentMenuOptionsNull","RowMenuOptions","RowMenuOptionsNull","AddOrigin","visible","RemoveComponent","Join","Union","AddHeader","addOrigin","remove","join","union","addHeader","RemoveRow","SetHeader","removeRow","setHeader","rowIdx","Remove","Split","Map","ProcessOperation","compTwoWsIdx","compTwoIdx","mapCritera","compTwoWs","Validations","valElement","wsName","cleanseDto","com","Operations","operations","cleaned","cleanedDtos","processed","cleansed","SetComponents","validations","op","ws","cd","c","col","val","rowType","getElementById","style","operationsId","CloseOpHistory","exportResponse","ShowOpHistory","CompareComponent","_compareBl","Errors","DroppedWorkSheets","ProcessedWorkSheets","ShowResults","isBuildingMatch","isOccupancyMatch","addEventListener","constructFormBuilder","loadLookups","filterType","setFilterModel","pagination","paginationPageSize","cacheBlockSize","FileForm","fileOne","files","fileEntry","isFile","ext","toLowerCase","ReadXl","reader","FileReader","onload","bstr","target","wb","sheets","SheetNames","readAsBinaryString","ConversionFilesDto","conversionFiles","FileOne","WorkSheetForm","DroppedWs","ProcessedWs","_processFileName","filePath","CleanedFileName","getWorksheetsResponse","workSheets","processedWs","droppedWs","startIdx","ProcessedFile","AccountName","accountName","StartIdx","compareResponse","BldgClassMatched","totalBldgMatched","BldgClassNotMatched","totalBldgNotMatched","OccupancyMatched","totalOccupancyMatched","OccupancyNotMatched","totalOccupancyNotMatched","CompareResults","compareResults","Dropped","ContextMenuComponent","ImportComponent","_conversionService","_managerBl","WorkSheets","IsEdit","AddFields","ConstructFormBuilder","ImportForm","workSheetName","currency","currencyId","accountNum","inceptNormal","Date","incept","ngIncept","FormatNgDate","expiryNormal","expiry","ngExpiry","totalTiv","userText1","userDef1","policyDeductible","policyLimit","getFullYear","getMonth","getDate","GetImportLookup","Currencies","currencies","Currency","Num","Inception","Expiry","Tiv","UsrDef1","UsrTxt1","Deductible","Limit","mapNew","worksheet","accNum","inception","transform","tiv","usrTxt","usrDef","deductible","limit","uploadResponse","fileName","saveConversion","saveAccount","Set","saveConversionResponse","LoginComponent","LoginForm","username","Login","Subject","ManagerComponent","_conversions","SelectedPage","Pages","InProgress","Completed","Failed","_convId","contentElement","SetClickedRow","SelectedRow","conv","Select","PageConversions","managerResponse","conversions","Filter","Import","MappingNewComponent","_mappingBl","GeoCode","SelectedSuggestion","IsCollapsed","MapDisabled","_hasMappingsChanged","geoCode","conversionMappingsResponse","_allValidations","colMapResponse","MappingHeaders","SampleData","sampleData","suggestionsNew","displayField","header","Suggestions","Headers","ConfigValidations","severity","High","Medium","warningCtr","errorCtr","selectMappings","fil","duplicate","reduce","p","sl","av","hasField","warningType","d","ValTxt","valFields","multipleHeaders","mh","exists","fields","combination","ctr","mlNames","mappingValId","valText","sug","newAdd","CreateNewHeaderDto","IncrementMappings","SelectedAdd","colName","headerDto","AddToSampleData","headerVal","SaveMapping","rmsFieldMappingsDto","mapHeaderDto","found","AddSuggestion","SaveFields","MappingComponent","suggestions","column","columnMappings","Mappings","replace","colHeaderDto","colCtr","suggestion","PagerComponent","PagingChanged","_paging","SendPagingDto","_typeId","current","totalPages","first","CalRecFirst","recsPerPage","recLast","CalcRecLast","recFirst","total","ToastMsgComponent","toastrService","toastPackage","stopPropagation","triggerAction","opacity","animations","preserveWhitespaces","TopComponent","_messageService","toastr","Router","Progress","_isRunning","load","html","createMessageHtml","enableHtml","closeButton","isLogged","isAdmin","logout","_interval","clearInterval","setInterval","stop","_closeInterval","messageHtml","messageType","AssumptionsComponent","LocationsComponent","_locationBl","_mediatorSerice","ngZone","HasCompleted","Occupancies","OccupancyCopies","BuildingClassCopies","IsUnknown","_reconciled","SummaryBtn","ProgressPercent","ParsingStarted","colId","bldgClass","occupancyType","_progSub","unsubscribe","run","progress","ProgressTxt","complete","sub","Success","GetMapped","Countries","countries","Sprinklers","sprinklers","lstBuildingClass","bldg","lkpType","occupancies","occ","content","windowClass","_selectedCol","CustomLocName","locNameElement","Apply","SelectedStateId","colDef","_selectedRowData","LoadStateValues","stateElement","loadState","txtElement","loadStreet","loadOccupancyValues","occElement","FieldInput","occupancyOrig","SameValCtr","SelectedTxt","loadBuildingValues","buildingElement","loadLocName","loadCounty","loadCountries","countryElement","loadSprinkler","SelectedSprinklerId","Locations","sprinklerInput","ModalTitle","Sprinkler","address","country","isoCode","SelectedCountryId","countryId","Country","streetName","locName","LocName","county","County","filtered","stateCode","SelectedOccupancyTypeId","LocsWithNoOccupancyCtr","SelectedBuildingId","buildingOrig","stateFilter","className","savedFilterModel","getFilterModel","BuildingInput","ApplyValue","OccupancyInput","forAllLocations","forUnknown","applyStreetName","applyCountry","applyState","applyOccInput","applyOcc","applyBuildingInput","applyBuilding","applyCounty","applyLocName","applySprinkler","locs","applyCommon","forAllLocation","applyToAll","stateCodeDto","StCode","sprinklerDto","alreadyReconciled","includes","Reconcile","defaultFilter","HasReconciled","UpdateLocations","ReconcileComplete","initSummary","summary","agGrid_UpdateLocs","filterInput","txt","selectedOccupancyRating","ratingType","selectedBuildingRating","distinctInputs","disType","ratingFilter","rating","occupancyScore","buildingScore","CloseModal","unknownFilter","selectedDisOccupancy","building","selectedDisBuilding","selectedDisSprinkler","selectedOccupancy","selectedBuilding","origFilter","resetFilters","_gridColumnApi","columnApi","resizeColumns","allColumnIds","getAllColumns","autoSizeColumns","ParsingHeader","loadElement","backdrop","keyboard","progressTimer","getMappedConversionResponse","CountryTxt","assumptions","Assumptions","Confidence","confidence","Get2","TotalTiv","tp","round","summaryResponse","mapLocationsResponse","summaryCtr","count","loc","getRowNode","uniqueId","CloseOccupancy","onOccChange","onOccTxtChanged","ApplyOccInputValue","CloseBuilding","onBuildingChange","onBuildingTxtChanged","ApplyBuildingInputValue","ViewAssumptions","CustomName","ViewSummary","environment","production","bootstrapModule"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","var map = {\n\t\"./af\": \"./node_modules/moment/locale/af.js\",\n\t\"./af.js\": \"./node_modules/moment/locale/af.js\",\n\t\"./ar\": \"./node_modules/moment/locale/ar.js\",\n\t\"./ar-dz\": \"./node_modules/moment/locale/ar-dz.js\",\n\t\"./ar-dz.js\": \"./node_modules/moment/locale/ar-dz.js\",\n\t\"./ar-kw\": \"./node_modules/moment/locale/ar-kw.js\",\n\t\"./ar-kw.js\": \"./node_modules/moment/locale/ar-kw.js\",\n\t\"./ar-ly\": \"./node_modules/moment/locale/ar-ly.js\",\n\t\"./ar-ly.js\": \"./node_modules/moment/locale/ar-ly.js\",\n\t\"./ar-ma\": \"./node_modules/moment/locale/ar-ma.js\",\n\t\"./ar-ma.js\": \"./node_modules/moment/locale/ar-ma.js\",\n\t\"./ar-sa\": \"./node_modules/moment/locale/ar-sa.js\",\n\t\"./ar-sa.js\": \"./node_modules/moment/locale/ar-sa.js\",\n\t\"./ar-tn\": \"./node_modules/moment/locale/ar-tn.js\",\n\t\"./ar-tn.js\": \"./node_modules/moment/locale/ar-tn.js\",\n\t\"./ar.js\": \"./node_modules/moment/locale/ar.js\",\n\t\"./az\": \"./node_modules/moment/locale/az.js\",\n\t\"./az.js\": \"./node_modules/moment/locale/az.js\",\n\t\"./be\": \"./node_modules/moment/locale/be.js\",\n\t\"./be.js\": \"./node_modules/moment/locale/be.js\",\n\t\"./bg\": \"./node_modules/moment/locale/bg.js\",\n\t\"./bg.js\": \"./node_modules/moment/locale/bg.js\",\n\t\"./bm\": \"./node_modules/moment/locale/bm.js\",\n\t\"./bm.js\": \"./node_modules/moment/locale/bm.js\",\n\t\"./bn\": \"./node_modules/moment/locale/bn.js\",\n\t\"./bn.js\": \"./node_modules/moment/locale/bn.js\",\n\t\"./bo\": \"./node_modules/moment/locale/bo.js\",\n\t\"./bo.js\": \"./node_modules/moment/locale/bo.js\",\n\t\"./br\": \"./node_modules/moment/locale/br.js\",\n\t\"./br.js\": \"./node_modules/moment/locale/br.js\",\n\t\"./bs\": \"./node_modules/moment/locale/bs.js\",\n\t\"./bs.js\": \"./node_modules/moment/locale/bs.js\",\n\t\"./ca\": \"./node_modules/moment/locale/ca.js\",\n\t\"./ca.js\": \"./node_modules/moment/locale/ca.js\",\n\t\"./cs\": \"./node_modules/moment/locale/cs.js\",\n\t\"./cs.js\": \"./node_modules/moment/locale/cs.js\",\n\t\"./cv\": \"./node_modules/moment/locale/cv.js\",\n\t\"./cv.js\": \"./node_modules/moment/locale/cv.js\",\n\t\"./cy\": \"./node_modules/moment/locale/cy.js\",\n\t\"./cy.js\": \"./node_modules/moment/locale/cy.js\",\n\t\"./da\": \"./node_modules/moment/locale/da.js\",\n\t\"./da.js\": \"./node_modules/moment/locale/da.js\",\n\t\"./de\": \"./node_modules/moment/locale/de.js\",\n\t\"./de-at\": \"./node_modules/moment/locale/de-at.js\",\n\t\"./de-at.js\": \"./node_modules/moment/locale/de-at.js\",\n\t\"./de-ch\": \"./node_modules/moment/locale/de-ch.js\",\n\t\"./de-ch.js\": \"./node_modules/moment/locale/de-ch.js\",\n\t\"./de.js\": \"./node_modules/moment/locale/de.js\",\n\t\"./dv\": \"./node_modules/moment/locale/dv.js\",\n\t\"./dv.js\": \"./node_modules/moment/locale/dv.js\",\n\t\"./el\": \"./node_modules/moment/locale/el.js\",\n\t\"./el.js\": \"./node_modules/moment/locale/el.js\",\n\t\"./en-au\": \"./node_modules/moment/locale/en-au.js\",\n\t\"./en-au.js\": \"./node_modules/moment/locale/en-au.js\",\n\t\"./en-ca\": \"./node_modules/moment/locale/en-ca.js\",\n\t\"./en-ca.js\": \"./node_modules/moment/locale/en-ca.js\",\n\t\"./en-gb\": \"./node_modules/moment/locale/en-gb.js\",\n\t\"./en-gb.js\": \"./node_modules/moment/locale/en-gb.js\",\n\t\"./en-ie\": \"./node_modules/moment/locale/en-ie.js\",\n\t\"./en-ie.js\": \"./node_modules/moment/locale/en-ie.js\",\n\t\"./en-il\": \"./node_modules/moment/locale/en-il.js\",\n\t\"./en-il.js\": \"./node_modules/moment/locale/en-il.js\",\n\t\"./en-in\": \"./node_modules/moment/locale/en-in.js\",\n\t\"./en-in.js\": \"./node_modules/moment/locale/en-in.js\",\n\t\"./en-nz\": \"./node_modules/moment/locale/en-nz.js\",\n\t\"./en-nz.js\": \"./node_modules/moment/locale/en-nz.js\",\n\t\"./en-sg\": \"./node_modules/moment/locale/en-sg.js\",\n\t\"./en-sg.js\": \"./node_modules/moment/locale/en-sg.js\",\n\t\"./eo\": \"./node_modules/moment/locale/eo.js\",\n\t\"./eo.js\": \"./node_modules/moment/locale/eo.js\",\n\t\"./es\": \"./node_modules/moment/locale/es.js\",\n\t\"./es-do\": \"./node_modules/moment/locale/es-do.js\",\n\t\"./es-do.js\": \"./node_modules/moment/locale/es-do.js\",\n\t\"./es-us\": \"./node_modules/moment/locale/es-us.js\",\n\t\"./es-us.js\": \"./node_modules/moment/locale/es-us.js\",\n\t\"./es.js\": \"./node_modules/moment/locale/es.js\",\n\t\"./et\": \"./node_modules/moment/locale/et.js\",\n\t\"./et.js\": \"./node_modules/moment/locale/et.js\",\n\t\"./eu\": \"./node_modules/moment/locale/eu.js\",\n\t\"./eu.js\": \"./node_modules/moment/locale/eu.js\",\n\t\"./fa\": \"./node_modules/moment/locale/fa.js\",\n\t\"./fa.js\": \"./node_modules/moment/locale/fa.js\",\n\t\"./fi\": \"./node_modules/moment/locale/fi.js\",\n\t\"./fi.js\": \"./node_modules/moment/locale/fi.js\",\n\t\"./fil\": \"./node_modules/moment/locale/fil.js\",\n\t\"./fil.js\": \"./node_modules/moment/locale/fil.js\",\n\t\"./fo\": \"./node_modules/moment/locale/fo.js\",\n\t\"./fo.js\": \"./node_modules/moment/locale/fo.js\",\n\t\"./fr\": \"./node_modules/moment/locale/fr.js\",\n\t\"./fr-ca\": \"./node_modules/moment/locale/fr-ca.js\",\n\t\"./fr-ca.js\": \"./node_modules/moment/locale/fr-ca.js\",\n\t\"./fr-ch\": \"./node_modules/moment/locale/fr-ch.js\",\n\t\"./fr-ch.js\": \"./node_modules/moment/locale/fr-ch.js\",\n\t\"./fr.js\": \"./node_modules/moment/locale/fr.js\",\n\t\"./fy\": \"./node_modules/moment/locale/fy.js\",\n\t\"./fy.js\": \"./node_modules/moment/locale/fy.js\",\n\t\"./ga\": \"./node_modules/moment/locale/ga.js\",\n\t\"./ga.js\": \"./node_modules/moment/locale/ga.js\",\n\t\"./gd\": \"./node_modules/moment/locale/gd.js\",\n\t\"./gd.js\": \"./node_modules/moment/locale/gd.js\",\n\t\"./gl\": \"./node_modules/moment/locale/gl.js\",\n\t\"./gl.js\": \"./node_modules/moment/locale/gl.js\",\n\t\"./gom-deva\": \"./node_modules/moment/locale/gom-deva.js\",\n\t\"./gom-deva.js\": \"./node_modules/moment/locale/gom-deva.js\",\n\t\"./gom-latn\": \"./node_modules/moment/locale/gom-latn.js\",\n\t\"./gom-latn.js\": \"./node_modules/moment/locale/gom-latn.js\",\n\t\"./gu\": \"./node_modules/moment/locale/gu.js\",\n\t\"./gu.js\": \"./node_modules/moment/locale/gu.js\",\n\t\"./he\": \"./node_modules/moment/locale/he.js\",\n\t\"./he.js\": \"./node_modules/moment/locale/he.js\",\n\t\"./hi\": \"./node_modules/moment/locale/hi.js\",\n\t\"./hi.js\": \"./node_modules/moment/locale/hi.js\",\n\t\"./hr\": \"./node_modules/moment/locale/hr.js\",\n\t\"./hr.js\": \"./node_modules/moment/locale/hr.js\",\n\t\"./hu\": \"./node_modules/moment/locale/hu.js\",\n\t\"./hu.js\": \"./node_modules/moment/locale/hu.js\",\n\t\"./hy-am\": \"./node_modules/moment/locale/hy-am.js\",\n\t\"./hy-am.js\": \"./node_modules/moment/locale/hy-am.js\",\n\t\"./id\": \"./node_modules/moment/locale/id.js\",\n\t\"./id.js\": \"./node_modules/moment/locale/id.js\",\n\t\"./is\": \"./node_modules/moment/locale/is.js\",\n\t\"./is.js\": \"./node_modules/moment/locale/is.js\",\n\t\"./it\": \"./node_modules/moment/locale/it.js\",\n\t\"./it-ch\": \"./node_modules/moment/locale/it-ch.js\",\n\t\"./it-ch.js\": \"./node_modules/moment/locale/it-ch.js\",\n\t\"./it.js\": \"./node_modules/moment/locale/it.js\",\n\t\"./ja\": \"./node_modules/moment/locale/ja.js\",\n\t\"./ja.js\": \"./node_modules/moment/locale/ja.js\",\n\t\"./jv\": \"./node_modules/moment/locale/jv.js\",\n\t\"./jv.js\": \"./node_modules/moment/locale/jv.js\",\n\t\"./ka\": \"./node_modules/moment/locale/ka.js\",\n\t\"./ka.js\": \"./node_modules/moment/locale/ka.js\",\n\t\"./kk\": \"./node_modules/moment/locale/kk.js\",\n\t\"./kk.js\": \"./node_modules/moment/locale/kk.js\",\n\t\"./km\": \"./node_modules/moment/locale/km.js\",\n\t\"./km.js\": \"./node_modules/moment/locale/km.js\",\n\t\"./kn\": \"./node_modules/moment/locale/kn.js\",\n\t\"./kn.js\": \"./node_modules/moment/locale/kn.js\",\n\t\"./ko\": \"./node_modules/moment/locale/ko.js\",\n\t\"./ko.js\": \"./node_modules/moment/locale/ko.js\",\n\t\"./ku\": \"./node_modules/moment/locale/ku.js\",\n\t\"./ku.js\": \"./node_modules/moment/locale/ku.js\",\n\t\"./ky\": \"./node_modules/moment/locale/ky.js\",\n\t\"./ky.js\": \"./node_modules/moment/locale/ky.js\",\n\t\"./lb\": \"./node_modules/moment/locale/lb.js\",\n\t\"./lb.js\": \"./node_modules/moment/locale/lb.js\",\n\t\"./lo\": \"./node_modules/moment/locale/lo.js\",\n\t\"./lo.js\": \"./node_modules/moment/locale/lo.js\",\n\t\"./lt\": \"./node_modules/moment/locale/lt.js\",\n\t\"./lt.js\": \"./node_modules/moment/locale/lt.js\",\n\t\"./lv\": \"./node_modules/moment/locale/lv.js\",\n\t\"./lv.js\": \"./node_modules/moment/locale/lv.js\",\n\t\"./me\": \"./node_modules/moment/locale/me.js\",\n\t\"./me.js\": \"./node_modules/moment/locale/me.js\",\n\t\"./mi\": \"./node_modules/moment/locale/mi.js\",\n\t\"./mi.js\": \"./node_modules/moment/locale/mi.js\",\n\t\"./mk\": \"./node_modules/moment/locale/mk.js\",\n\t\"./mk.js\": \"./node_modules/moment/locale/mk.js\",\n\t\"./ml\": \"./node_modules/moment/locale/ml.js\",\n\t\"./ml.js\": \"./node_modules/moment/locale/ml.js\",\n\t\"./mn\": \"./node_modules/moment/locale/mn.js\",\n\t\"./mn.js\": \"./node_modules/moment/locale/mn.js\",\n\t\"./mr\": \"./node_modules/moment/locale/mr.js\",\n\t\"./mr.js\": \"./node_modules/moment/locale/mr.js\",\n\t\"./ms\": \"./node_modules/moment/locale/ms.js\",\n\t\"./ms-my\": \"./node_modules/moment/locale/ms-my.js\",\n\t\"./ms-my.js\": \"./node_modules/moment/locale/ms-my.js\",\n\t\"./ms.js\": \"./node_modules/moment/locale/ms.js\",\n\t\"./mt\": \"./node_modules/moment/locale/mt.js\",\n\t\"./mt.js\": \"./node_modules/moment/locale/mt.js\",\n\t\"./my\": \"./node_modules/moment/locale/my.js\",\n\t\"./my.js\": \"./node_modules/moment/locale/my.js\",\n\t\"./nb\": \"./node_modules/moment/locale/nb.js\",\n\t\"./nb.js\": \"./node_modules/moment/locale/nb.js\",\n\t\"./ne\": \"./node_modules/moment/locale/ne.js\",\n\t\"./ne.js\": \"./node_modules/moment/locale/ne.js\",\n\t\"./nl\": \"./node_modules/moment/locale/nl.js\",\n\t\"./nl-be\": \"./node_modules/moment/locale/nl-be.js\",\n\t\"./nl-be.js\": \"./node_modules/moment/locale/nl-be.js\",\n\t\"./nl.js\": \"./node_modules/moment/locale/nl.js\",\n\t\"./nn\": \"./node_modules/moment/locale/nn.js\",\n\t\"./nn.js\": \"./node_modules/moment/locale/nn.js\",\n\t\"./oc-lnc\": \"./node_modules/moment/locale/oc-lnc.js\",\n\t\"./oc-lnc.js\": \"./node_modules/moment/locale/oc-lnc.js\",\n\t\"./pa-in\": \"./node_modules/moment/locale/pa-in.js\",\n\t\"./pa-in.js\": \"./node_modules/moment/locale/pa-in.js\",\n\t\"./pl\": \"./node_modules/moment/locale/pl.js\",\n\t\"./pl.js\": \"./node_modules/moment/locale/pl.js\",\n\t\"./pt\": \"./node_modules/moment/locale/pt.js\",\n\t\"./pt-br\": \"./node_modules/moment/locale/pt-br.js\",\n\t\"./pt-br.js\": \"./node_modules/moment/locale/pt-br.js\",\n\t\"./pt.js\": \"./node_modules/moment/locale/pt.js\",\n\t\"./ro\": \"./node_modules/moment/locale/ro.js\",\n\t\"./ro.js\": \"./node_modules/moment/locale/ro.js\",\n\t\"./ru\": \"./node_modules/moment/locale/ru.js\",\n\t\"./ru.js\": \"./node_modules/moment/locale/ru.js\",\n\t\"./sd\": \"./node_modules/moment/locale/sd.js\",\n\t\"./sd.js\": \"./node_modules/moment/locale/sd.js\",\n\t\"./se\": \"./node_modules/moment/locale/se.js\",\n\t\"./se.js\": \"./node_modules/moment/locale/se.js\",\n\t\"./si\": \"./node_modules/moment/locale/si.js\",\n\t\"./si.js\": \"./node_modules/moment/locale/si.js\",\n\t\"./sk\": \"./node_modules/moment/locale/sk.js\",\n\t\"./sk.js\": \"./node_modules/moment/locale/sk.js\",\n\t\"./sl\": \"./node_modules/moment/locale/sl.js\",\n\t\"./sl.js\": \"./node_modules/moment/locale/sl.js\",\n\t\"./sq\": \"./node_modules/moment/locale/sq.js\",\n\t\"./sq.js\": \"./node_modules/moment/locale/sq.js\",\n\t\"./sr\": \"./node_modules/moment/locale/sr.js\",\n\t\"./sr-cyrl\": \"./node_modules/moment/locale/sr-cyrl.js\",\n\t\"./sr-cyrl.js\": \"./node_modules/moment/locale/sr-cyrl.js\",\n\t\"./sr.js\": \"./node_modules/moment/locale/sr.js\",\n\t\"./ss\": \"./node_modules/moment/locale/ss.js\",\n\t\"./ss.js\": \"./node_modules/moment/locale/ss.js\",\n\t\"./sv\": \"./node_modules/moment/locale/sv.js\",\n\t\"./sv.js\": \"./node_modules/moment/locale/sv.js\",\n\t\"./sw\": \"./node_modules/moment/locale/sw.js\",\n\t\"./sw.js\": \"./node_modules/moment/locale/sw.js\",\n\t\"./ta\": \"./node_modules/moment/locale/ta.js\",\n\t\"./ta.js\": \"./node_modules/moment/locale/ta.js\",\n\t\"./te\": \"./node_modules/moment/locale/te.js\",\n\t\"./te.js\": \"./node_modules/moment/locale/te.js\",\n\t\"./tet\": \"./node_modules/moment/locale/tet.js\",\n\t\"./tet.js\": \"./node_modules/moment/locale/tet.js\",\n\t\"./tg\": \"./node_modules/moment/locale/tg.js\",\n\t\"./tg.js\": \"./node_modules/moment/locale/tg.js\",\n\t\"./th\": \"./node_modules/moment/locale/th.js\",\n\t\"./th.js\": \"./node_modules/moment/locale/th.js\",\n\t\"./tl-ph\": \"./node_modules/moment/locale/tl-ph.js\",\n\t\"./tl-ph.js\": \"./node_modules/moment/locale/tl-ph.js\",\n\t\"./tlh\": \"./node_modules/moment/locale/tlh.js\",\n\t\"./tlh.js\": \"./node_modules/moment/locale/tlh.js\",\n\t\"./tr\": \"./node_modules/moment/locale/tr.js\",\n\t\"./tr.js\": \"./node_modules/moment/locale/tr.js\",\n\t\"./tzl\": \"./node_modules/moment/locale/tzl.js\",\n\t\"./tzl.js\": \"./node_modules/moment/locale/tzl.js\",\n\t\"./tzm\": \"./node_modules/moment/locale/tzm.js\",\n\t\"./tzm-latn\": \"./node_modules/moment/locale/tzm-latn.js\",\n\t\"./tzm-latn.js\": \"./node_modules/moment/locale/tzm-latn.js\",\n\t\"./tzm.js\": \"./node_modules/moment/locale/tzm.js\",\n\t\"./ug-cn\": \"./node_modules/moment/locale/ug-cn.js\",\n\t\"./ug-cn.js\": \"./node_modules/moment/locale/ug-cn.js\",\n\t\"./uk\": \"./node_modules/moment/locale/uk.js\",\n\t\"./uk.js\": \"./node_modules/moment/locale/uk.js\",\n\t\"./ur\": \"./node_modules/moment/locale/ur.js\",\n\t\"./ur.js\": \"./node_modules/moment/locale/ur.js\",\n\t\"./uz\": \"./node_modules/moment/locale/uz.js\",\n\t\"./uz-latn\": \"./node_modules/moment/locale/uz-latn.js\",\n\t\"./uz-latn.js\": \"./node_modules/moment/locale/uz-latn.js\",\n\t\"./uz.js\": \"./node_modules/moment/locale/uz.js\",\n\t\"./vi\": \"./node_modules/moment/locale/vi.js\",\n\t\"./vi.js\": \"./node_modules/moment/locale/vi.js\",\n\t\"./x-pseudo\": \"./node_modules/moment/locale/x-pseudo.js\",\n\t\"./x-pseudo.js\": \"./node_modules/moment/locale/x-pseudo.js\",\n\t\"./yo\": \"./node_modules/moment/locale/yo.js\",\n\t\"./yo.js\": \"./node_modules/moment/locale/yo.js\",\n\t\"./zh-cn\": \"./node_modules/moment/locale/zh-cn.js\",\n\t\"./zh-cn.js\": \"./node_modules/moment/locale/zh-cn.js\",\n\t\"./zh-hk\": \"./node_modules/moment/locale/zh-hk.js\",\n\t\"./zh-hk.js\": \"./node_modules/moment/locale/zh-hk.js\",\n\t\"./zh-mo\": \"./node_modules/moment/locale/zh-mo.js\",\n\t\"./zh-mo.js\": \"./node_modules/moment/locale/zh-mo.js\",\n\t\"./zh-tw\": \"./node_modules/moment/locale/zh-tw.js\",\n\t\"./zh-tw.js\": \"./node_modules/moment/locale/zh-tw.js\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"./node_modules/moment/locale sync recursive ^\\\\.\\\\/.*$\";","import { Component, OnInit, AfterViewInit, ViewChild } from '@angular/core';\r\nimport { LookupBl } from '../../../Bl/lookup-bl';\r\nimport { StateDto } from '../../../Models/Dtos/state-dto';\r\n\r\n@Component({\r\n  selector: 'app-state-editor',\r\n  templateUrl: './state-editor.component.html',\r\n  styleUrls: ['./state-editor.component.css']\r\n})\r\n\r\nexport class StateEditorComponent  implements OnInit, AfterViewInit{\r\n    private _params : any;\r\n    public States :StateDto[];\r\n\r\n    public Selected : number;\r\n    constructor(private _lookupBl : LookupBl)\r\n    {\r\n\r\n    }\r\n\r\n    async ngOnInit()\r\n    {\r\n      await this.LoadLookups();\r\n    }\r\n    async ngAfterViewInit() {}\r\n\r\n      isPopup() {\r\n        return true;\r\n      }\r\n    \r\n    async agInit(params: any) {\r\n        this._params = params;\r\n        var value = params.values[0];\r\n        await this.LoadLookups();\r\n       \r\n    }\r\n\r\n    getValue() {\r\n      var states = this.States.find(x=> x.id == this.Selected);\r\n\r\n      return states.code;\r\n    }\r\n\r\n    private async LoadLookups()\r\n    {\r\n      var lookupsResponse = await this._lookupBl.GetLocationLookups();\r\n\r\n      if (lookupsResponse.status == true)\r\n      {\r\n        this.States = lookupsResponse.states;\r\n\r\n        if (this.States)\r\n        {\r\n          var states = this.States.find(x=> x.code == this._params.value);\r\n          this.Selected = states.id;\r\n        }\r\n\r\n      }\r\n\r\n    }\r\n  }\r\n","<form>\r\n<table class=\"tblWidth\">\r\n    <tr>\r\n    <th></th>\r\n    <th></th>\r\n    </tr>\r\n    <tr>\r\n    <td></td>\r\n    <td>\r\n\r\n      <ng-select class=\"selectStyle customMed\"\r\n      #i\r\n      [items]=\"States\"\r\n      class=\"stateWidth\"\r\n      bindLabel=\"Name\"\r\n      [(ngModel)]=\"Selected\"\r\n      placeholder=\"Please select a State\"\r\n      bindValue=\"StateId\"\r\n      clearable=\"true\"\r\n      name=\"stateLookup\"\r\n      clearAllText=\"Clear\">\r\n      </ng-select>\r\n      </td>\r\n      </tr>\r\n</table>\r\n</form>\r\n","import {Component, OnInit, TemplateRef, ViewChild, ViewContainerRef} from \"@angular/core\";\r\n\r\nimport {IAfterGuiAttachedParams, IDoesFilterPassParams, IFilterParams, RowNode} from \"ag-grid-community\";\r\nimport {IFilterAngularComp} from \"ag-grid-angular\";\r\n\r\n@Component({\r\n  selector: 'app-txt-dis-filter',\r\n  templateUrl: './txt-dis-filter.component.html',\r\n  styleUrls: ['./txt-dis-filter.component.css']\r\n})\r\nexport class TxtDisFilterComponent implements OnInit, IFilterAngularComp {\r\n  private params: IFilterParams;\r\n  private valueGetter: (rowNode: RowNode) => any;\r\n  public text: string = ''; \r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n  \r\n  isFilterActive(): boolean {\r\n    return true;\r\n  }\r\n  agInit(params: IFilterParams): void {\r\n      this.params = params;\r\n      this.valueGetter = params.valueGetter;\r\n  }\r\n\r\n  doesFilterPass(params: IDoesFilterPassParams): boolean {\r\n    return true;\r\n  }\r\n\r\n  getModel(): any {\r\n    return '';\r\n  }\r\n\r\n  setModel(model: any): void {\r\n    \r\n    debugger;\r\n  }\r\n\r\n}\r\n","<div style=\"width:280px; padding:6px\">\r\n<div style=\"width:220px\">\r\n    <input type=\"text\" class=\"txt\" placeholder=\"Search\"/>\r\n</div>\r\n\r\n<div>\r\n    <ul>\r\n        <li><label for=\"chk1\"><input type=\"checkbox\" name=\"chk1\" id=\"chk1\">First</label></li>\r\n        <li><label for=\"chk2\"><input type=\"checkbox\" name=\"chk2\" id=\"chk2\">Second</label></li>\r\n        <li><label for=\"chk3\"><input type=\"checkbox\" name=\"chk3\" id=\"chk3\">Third</label></li>\r\n        <li><label for=\"chk4\"><input type=\"checkbox\" name=\"chk4\" id=\"chk4\">Fourth</label></li>\r\n        <li><label for=\"chk5\"><input type=\"checkbox\" name=\"chk5\" id=\"chk5\">Fifth</label></li>\r\n        <li><label for=\"chk6\"><input type=\"checkbox\" name=\"chk6\" id=\"chk6\">Sixth</label></li>\r\n        <li><label for=\"chk7\"><input type=\"checkbox\" name=\"chk7\" id=\"chk7\">Seventh</label></li>\r\n       </ul>\r\n\r\n</div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { AgRendererComponent } from 'ag-grid-angular';\r\n\r\n@Component({\r\n  selector: 'app-btn-render',\r\n  templateUrl: './btn-render.component.html',\r\n  styleUrls: ['./btn-render.component.css']\r\n})\r\nexport class BtnRenderComponent implements AgRendererComponent {\r\n\r\n  params: any;\r\n  HasVisibleLink : boolean;\r\n\r\n  constructor() { }\r\n\r\n  agInit(params: any): void {\r\n    this.params = params;\r\n\r\n    if (params.data.zipPath)\r\n    {\r\n      this.HasVisibleLink = true;\r\n    }\r\n    if (params.data.loadValId)\r\n    {\r\n      this.HasVisibleLink = true;\r\n    }\r\n\r\n    if (params.data.sprinklerValsId)\r\n    {\r\n      this.HasVisibleLink = true;\r\n    }\r\n\r\n    if (params.data.id)\r\n    {\r\n      this.HasVisibleLink = true;\r\n    }\r\n\r\n    if (params.data.state && params.label == \"Commit\")\r\n    {\r\n      this.HasVisibleLink = false;\r\n    }\r\n  }\r\n\r\n  refresh(params: any): boolean {\r\n    return false;\r\n  }\r\n\r\n  onClick()\r\n  {\r\n    this.params.onClick(this.params.data);\r\n  }\r\n\r\n}\r\n","<button class=\"btn btn-info btn-square btn-sm margLeft\" *ngIf=\"HasVisibleLink\" (click)=\"onClick()\">{{params.label}}</button>\r\n           \r\n","import { ElementRef, Component} from '@angular/core';\r\nimport { AgRendererComponent} from 'ag-grid-angular';\r\nimport { IAfterGuiAttachedParams } from 'ag-grid-community';\r\nimport { ChkMessage } from '../Models/chk-message';\r\nimport { MediatorService } from '../Services/mediator.service';\r\n\r\n@Component({\r\n    selector: 'checkbox-cell',\r\n    templateUrl: './checkbox-cell.component.html',\r\n    styleUrls: ['./checkbox-cell.component.css']\r\n  })\r\n  export class CheckBoxCellComponent implements AgRendererComponent {\r\n  \r\n    public params: any;\r\n\r\n    constructor(private _mediatorService : MediatorService)\r\n    {\r\n\r\n    }\r\n  \r\n    agInit(params: any): void {\r\n      this.params = params;\r\n    }\r\n  \r\n    afterGuiAttached(params?: IAfterGuiAttachedParams): void {\r\n    }\r\n  \r\n    refresh(params: any): boolean {\r\n      params.data.reconciled = params.value\r\n      \r\n      params.api.refreshCells(params);\r\n\r\n      var chkMsg = new ChkMessage({LocId : params.data.locId, Checked : params.value});\r\n\r\n      this._mediatorService.Checked.emit(chkMsg);\r\n\r\n      return false;\r\n    }\r\n  }","<!--input type=\"checkbox\" [(ngModel)]=\"params.value\" (change)=\"this.refresh(this.params)\">-->\r\n\r\n<div class=\"checkbox chk\" style=\"padding-top:6px;\">\r\n    <input type=\"checkbox\" id=\"c2\" name=\"cb2\" [(ngModel)]=\"params.value\" (change)=\"this.refresh(this.params)\">\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { AgRendererComponent } from 'ag-grid-angular';\r\n\r\n@Component({\r\n  selector: 'app-router-link-two',\r\n  templateUrl: './router-link-two.component.html',\r\n  styleUrls: ['./router-link-two.component.css']\r\n})\r\nexport class RouterLinkTwoComponent implements AgRendererComponent  {\r\n\r\n  params: any;\r\n  HasVisibleLink : boolean;\r\n\r\n  agInit(params: any): void {\r\n    this.params = params;\r\n\r\n    if (params.data.hasLocations)\r\n    {\r\n      this.HasVisibleLink = true;\r\n    }\r\n  }\r\n\r\n  refresh(params: any): boolean {\r\n    return false;\r\n  }\r\n\r\n  onClick()\r\n  {\r\n    this.params.onClick(this.params.data);\r\n  }\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","<a [routerLink]=\"\" *ngIf=\"HasVisibleLink\" (click)=\"onClick()\" >{{params.label}}</a>\r\n\r\n","import { Component } from '@angular/core';\r\nimport { AgRendererComponent } from 'ag-grid-angular';\r\n\r\n@Component({\r\n  selector: 'app-router-link',\r\n  templateUrl: './router-link.component.html',\r\n  styleUrls: ['./router-link.component.css']\r\n})\r\nexport class RouterLinkComponent implements AgRendererComponent {\r\n  params: any;\r\n  HasVisibleLink : boolean;\r\n\r\n  agInit(params: any): void {\r\n\r\n    this.params = params;\r\n\r\n    if (params.data.zipPath)\r\n    {\r\n      this.HasVisibleLink = true;\r\n    }\r\n    if (params.data.loadValId)\r\n    {\r\n      this.HasVisibleLink = true;\r\n    }\r\n\r\n    if (params.data.cleansedMgrId)\r\n    {\r\n      this.HasVisibleLink = true;\r\n    }\r\n  }\r\n\r\n  refresh(params: any): boolean {\r\n    return false;\r\n  }\r\n\r\n  onClick()\r\n  {\r\n    this.params.onClick(this.params.data);\r\n  }\r\n}\r\n","\r\n<a [routerLink]=\"\" *ngIf=\"HasVisibleLink\" (click)=\"onClick()\" >{{params.label}}</a>\r\n","import { Injectable } from \"@angular/core\";\r\nimport { AdminValuesService } from \"../Data/admin-values-service\";\r\nimport { SprinklerValsDto } from \"../Models/Dtos/sprinkler-dto\";\r\nimport { ValDto } from \"../Models/Dtos/state-dto\";\r\nimport { ValueTypeEnum } from \"../Models/Enums/value-type-enum\";\r\nimport { DeleteValuesRequest } from \"../Models/Requests/delete-values-request\";\r\nimport { UpdateSprinklerRequest } from \"../Models/Requests/update-sprinkler-request\";\r\nimport { UpdateValueRequest } from \"../Models/Requests/update-value-request\";\r\nimport { AdminValuesResponse } from \"../Models/Response/admin-values-response\";\r\nimport { DeleteSprinklerResponse } from \"../Models/Response/delete-sprinkler-response\";\r\nimport { DeleteValuesResponse } from \"../Models/Response/delete-values-response\";\r\nimport { UpdateSprinklerResponse } from \"../Models/Response/update-sprinkler-response\";\r\nimport { UpdateValueResponse } from \"../Models/Response/update-value-response\";\r\nimport { CommitResponse } from \"../Models/Response/commit-response\";\r\nimport { CommitValuesRequest } from \"../Models/Requests/commit-values-request\";\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n  })\r\nexport class AdminValuesBl {\r\n    constructor(private _adminValueService : AdminValuesService) {\r\n    }\r\n    \r\n    public async Get() : Promise<AdminValuesResponse>\r\n    {\r\n        var response = await this._adminValueService.Get();\r\n        return response;\r\n    }\r\n\r\n    public async DeleteSprinkler(sprinklerValsDto : SprinklerValsDto) : Promise<DeleteSprinklerResponse>\r\n    {\r\n        var response = await this._adminValueService.DeleteSprinkler(sprinklerValsDto);\r\n        return response;\r\n    }\r\n\r\n    public async CommitSprinkler(sprinklerValsDto : SprinklerValsDto) : Promise<CommitResponse>\r\n    {\r\n        var response = await this._adminValueService.CommitSprinkler(sprinklerValsDto);\r\n        return response;\r\n    }\r\n\r\n    public async CommitValue(valueId : number, valueType : ValueTypeEnum) : Promise<CommitResponse>\r\n    {\r\n        var deleteValRequest = new CommitValuesRequest({\r\n            ValueType: valueType,\r\n            ValueId : valueId\r\n        });\r\n        var response = await this._adminValueService.CommitValue(deleteValRequest);\r\n        return response;\r\n    }\r\n\r\n    public async DeleteValue(valueId : number, valueType : ValueTypeEnum) : Promise<DeleteValuesResponse>\r\n    {\r\n        var deleteValRequest = new DeleteValuesRequest({\r\n            ValueType: valueType,\r\n            ValueId : valueId\r\n        });\r\n        var response = await this._adminValueService.DeleteValue(deleteValRequest);\r\n        return response;\r\n    }\r\n\r\n    public async UpdateValue(value: ValDto, valueType : ValueTypeEnum) : Promise<UpdateValueResponse>\r\n    {\r\n        var updateValRequest = new UpdateValueRequest({\r\n            ValueType: valueType,\r\n            Value : value\r\n        });\r\n\r\n        var response = await this._adminValueService.UpdateValue(updateValRequest);\r\n        return response;\r\n    }\r\n\r\n    public async UpdateSprinkler(sprinklerValsDto : SprinklerValsDto) : Promise<UpdateSprinklerResponse>\r\n    {\r\n        var updateSprinklerRequest = new UpdateSprinklerRequest\r\n        ({\r\n            SprinklerValue : sprinklerValsDto\r\n        });\r\n\r\n        return await this._adminValueService.UpdateSprinklerValue(updateSprinklerRequest);\r\n    }\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { CleansingService } from \"../Data/cleansing-service\";\r\nimport { CleanLoadRequest } from \"../Models/Requests/cleanse-request\";\r\nimport { CleanLoadResponse } from \"../Models/Response/cleanse-response\";\r\nimport { GetCleansedMgrRequest } from \"../Models/Requests/get-cleansed-mgr-request\";\r\nimport { GetCleansedMgrResponse } from \"../Models/Response/get-cleansed-mgr-response\";\r\nimport { NewCleansedResponse } from \"../Models/Response/new-cleansed-response\";\r\nimport { NewCleansedRequest } from \"../Models/Requests/new-cleansed-request\";\r\nimport { Status } from \"../Models/Enums/status.enum\";\r\nimport { PagingDto } from \"../Models/Dtos/paging-dto\";\r\nimport { AddOperationResponse } from \"../Models/Response/add-operation-response\";\r\nimport { AddOperationRequest } from \"../Models/Requests/add-operation-request\";\r\nimport { OperationParam } from \"../Models/Dtos/Cleansing/operation-param\";\r\nimport { OperationTypeDto } from \"../Models/Dtos/Cleansing/operation-type-dto\";\r\nimport { OperationsResponse } from \"../Models/Response/operations-response\";\r\nimport { DeleteOperationResponse } from \"../Models/Response/delete-operation-response\";\r\nimport { JoinCriteria } from \"../Models/Dtos/Cleansing/join-criteria\";\r\nimport { CleanseExportResponse } from \"../Models/Response/cleanse-export-response\";\r\nimport { UserDto } from \"../Models/Dtos/user-dto\";\r\nimport { CleanseExportRequest } from \"../Models/Requests/cleanse-export-request\";\r\nimport { MenuOption } from \"../Models/Dtos/Cleansing/menu-option\";\r\nimport { ReplayResponse } from \"../Models/Response/replay-response\";\r\nimport  { ReplayRequest } from \"../Models/Requests/replay-request\";\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n  })\r\nexport class CleansingBl {\r\n\r\n    constructor(private _cleansingService : CleansingService) {}\r\n\r\n    public async New(name : string, userId : number, file : File) : Promise<NewCleansedResponse>\r\n    {\r\n        var newCleansedRequest = new NewCleansedRequest ({\r\n            name : name,\r\n            userId : userId,\r\n            status : Status.Imported\r\n        });\r\n        \r\n        var response = await this._cleansingService.New(newCleansedRequest, file);\r\n\r\n        return response;\r\n    }\r\n\r\n    public async Load(cleanseMgrId : number, show : boolean = true) : Promise<CleanLoadResponse>\r\n    {\r\n        var cleanLoadRequest = new CleanLoadRequest \r\n        ({\r\n            CleanseMgrId : cleanseMgrId,\r\n            Show : show\r\n        });\r\n\r\n        var response = await this._cleansingService.Load(cleanLoadRequest);\r\n\r\n        return response;\r\n    }\r\n    public async LoadOperations(cleanseMgrId : number) : Promise<OperationsResponse>\r\n    {\r\n        var response = await this._cleansingService.LoadOperations(cleanseMgrId);\r\n\r\n        return response;\r\n    }\r\n\r\n    public async AddOperation(cleansedMgrId : number, operationType : OperationTypeDto, menuOption : MenuOption, componentTwoIdx : number, workSheetTwoIdx : number, mapColIdx : number, valueColIdx : number, joins : JoinCriteria[] = null) : Promise<AddOperationResponse>\r\n    {\r\n        var opParam = new OperationParam({\r\n\r\n            WorkSheetId : menuOption.WorkSheetId,\r\n            Component : menuOption.ComponentName,\r\n            WorkSheet : menuOption.WorkSheet,\r\n            ComponentId : menuOption.ComponentId,  \r\n            ColIdx : menuOption.ColIdx,\r\n            RowIdx : menuOption.RowIdx,\r\n            Joins : joins,\r\n            ComponentTwoId : componentTwoIdx,\r\n            WorkSheetTwoId : workSheetTwoIdx,\r\n            MapColIdx : mapColIdx,\r\n            ValueColIdx : valueColIdx\r\n        });\r\n \r\n        var addOperationRequest = new AddOperationRequest\r\n        ({ \r\n            OperationsType : operationType, \r\n            CleansedMgrId : cleansedMgrId,\r\n            OperationsParam : opParam\r\n        });\r\n\r\n        var response = await this._cleansingService.AddOperation(addOperationRequest)\r\n\r\n        return response;\r\n    }\r\n\r\n    public async Get(pagingDto : PagingDto, userId : number) : Promise<GetCleansedMgrResponse>\r\n    {\r\n        var request = new GetCleansedMgrRequest({\r\n            userId : userId,\r\n            RecFirst : pagingDto.RecFirst,\r\n            RecLast : pagingDto.RecLast\r\n        });\r\n        \r\n        var response = await this._cleansingService.Get(request);\r\n\r\n        return response;\r\n    }\r\n\r\n    public async DeleteOperation(operationId : number) : Promise<DeleteOperationResponse>\r\n    {\r\n        var response = await this._cleansingService.DeleteOperation(operationId);\r\n\r\n        return response;\r\n    }\r\n\r\n    public async Replay(cleanseMgrId : number, copyFromId : number,  name : string, file : File, user : UserDto) : Promise<ReplayResponse>\r\n    {\r\n        var replayRequest = new ReplayRequest\r\n        ({\r\n           CleanseMgrId : cleanseMgrId,\r\n           CopyFromId : copyFromId,\r\n           Name : name,\r\n           UserId : user.userId\r\n        });\r\n\r\n        var response = await this._cleansingService.Replay(replayRequest, file);\r\n\r\n        return response;\r\n    }\r\n\r\n    public async Export(cleanseMgrId : number, user : UserDto) : Promise<CleanseExportResponse>\r\n    {\r\n        var cleanseExportRequest = new CleanseExportRequest\r\n        ({\r\n            User : user,\r\n            CleanseMgrId : cleanseMgrId\r\n        });\r\n        \r\n        var response = await this._cleansingService.Export(cleanseExportRequest);\r\n\r\n        return response;\r\n    }\r\n}\r\n","import { CompareService } from '../Data/compare-service';\r\nimport { FilesResponse } from '../Models/Response/files-response';\r\nimport { Injectable } from \"@angular/core\";\r\nimport { GetWorkSheetsRequest } from '../Models/Requests/files-request';\r\nimport { GetWorkSheetsResponse } from '../Models/response/get-work-sheets-response';\r\nimport { CompareRequest } from '../Models/Requests/compare-request';\r\nimport { CompareResponse} from '../Models/Response/compare-response';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n  })\r\nexport class CompareBl {\r\n\r\n    constructor(private _compareService : CompareService) {}\r\n\r\n    public async Get() : Promise<FilesResponse>\r\n    {\r\n        var response = await this._compareService.GetFiles();\r\n\r\n        return response;\r\n    }\r\n\r\n    public async GetWorkSheets(getWorkSheetsRequest : GetWorkSheetsRequest) : Promise<GetWorkSheetsResponse>\r\n    {\r\n        var response = await this._compareService.GetWorkSheets(getWorkSheetsRequest);\r\n\r\n        return response;\r\n    }\r\n\r\n    public async Compare(compareRequest  :CompareRequest, file : File) : Promise<CompareResponse>\r\n    {\r\n        debugger;\r\n        var response = await this._compareService.Compare(compareRequest, file);\r\n\r\n        return response;\r\n    }\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { EncorderService } from \"../Data/encorder-service\";\r\nimport { ClientDto } from \"../Models/Dtos/client-dto\";\r\nimport { EncoderDto } from \"../Models/Dtos/encoder-dto\";\r\nimport { CreateEncoderRequest } from \"../Models/Requests/create-encoder-request\";\r\nimport { CreateEncoderResponse } from \"../Models/Response/create-template-response\";\r\nimport { GetEncoderResponse } from \"../Models/Response/get-encoder-response\";\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n  })\r\nexport class EncoderBl {\r\n    constructor(private _encoderService : EncorderService)\r\n    {\r\n    }\r\n\r\n    public async Get(clientId : number) : Promise<GetEncoderResponse>\r\n    {\r\n        var response = await this._encoderService.Get(clientId);\r\n\r\n        return response;\r\n    }\r\n\r\n    public async Create(name :string, client : ClientDto) : Promise<CreateEncoderResponse>\r\n    {\r\n        var encoder = new EncoderDto({\r\n            client : client,\r\n            name : name,\r\n            defaultEncoder : false\r\n        })\r\n\r\n        var request = new CreateEncoderRequest({\r\n            Encoder : encoder,\r\n            encoder : encoder\r\n        });\r\n\r\n        return await this._encoderService.Create(request);\r\n    }\r\n    \r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { LocationService } from \"../Data/location-service\";\r\nimport { LocationsMappedResponse } from \"../models/Response/locations-mapped-response\";\r\nimport { Observable } from \"rxjs\";\r\nimport { LocationUpdatesResponse } from \"../Models/Response/location-updates-response\";\r\nimport { LocationDto } from \"../Models/Dtos/location-dto\";\r\nimport { ExportResponse } from \"../models/Response/export-response\";\r\nimport { FieldTypes } from \"../Models/Enums/field-types\";\r\nimport { LocUpdatesDto } from \"../Models/Dtos/loc-updates-dto\";\r\nimport { LocUpdatesRequest } from \"../Models/Requests/loc-updates-request\";\r\nimport { SummaryDto } from '../Models/Dtos/summary-dto';\r\nimport { ProgressResponse } from \"../Models/Response/progress-response\";\r\nimport { GetMappedConversionResponse } from \"../Models/Response/get-mapped-conversion-response\";\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n  })\r\nexport class LocationBl {\r\n\r\n    constructor(private _locationService : LocationService) {}\r\n\r\n    public async GetMapped(convId : number) : Promise<GetMappedConversionResponse>\r\n    {\r\n      var response = await this._locationService.GetMappedConversion(convId);\r\n\r\n      return response;\r\n    }\r\n\r\n    public async MapLocations(convId : number) : Promise<LocationsMappedResponse>\r\n    {\r\n        var response = await this._locationService.MapLocations(convId);\r\n\r\n        return response;\r\n    }\r\n\r\n    public Get(convId : number, numberOfRecords : number) : Observable<LocationDto[][]>\r\n    {\r\n      return this._locationService.retrieveMultiple(convId, numberOfRecords);\r\n    }\r\n\r\n    public async Get2(convId : number, numberOfRecords : number)\r\n    {\r\n      return await this._locationService.RetrieveMultiple2(convId, numberOfRecords);\r\n    }\r\n\r\n    public Export(convId : number) : Promise<ExportResponse>\r\n    {\r\n        return this._locationService.Export(convId);\r\n    }\r\n\r\n    public GetProgress(conversionId : number, parseType : number) : Observable<ProgressResponse>\r\n    {\r\n      return this._locationService.GetProgress(conversionId, parseType);\r\n    }\r\n\r\n\r\n\r\n    public async UpdateLocations(convId : number, locations : LocationDto[],  value : string,  fieldType : FieldTypes, addToLoadVals : boolean = false,summaryDto : SummaryDto) : Promise<LocationUpdatesResponse>\r\n    {\r\n      var lst : LocUpdatesDto[] = [];\r\n      locations.forEach(x=>\r\n      {\r\n        lst.push(new LocUpdatesDto({ LocationId : x.locId, Value: value, \r\n          FieldId : fieldType, AddToLoadVals : addToLoadVals,\r\n        SegmentId : x.segmentId }));\r\n      });\r\n\r\n       let locUpdatesRequest = new LocUpdatesRequest({ ConvId : convId, LocationUpdates : lst, SummaryDto : summaryDto });\r\n        locUpdatesRequest.ConvId = convId;\r\n        locUpdatesRequest.LocationUpdates = lst;\r\n\r\n       return await this._locationService.LocationUpdates(locUpdatesRequest);\r\n    }\r\n\r\n    public async DeleteProgress(convId : number, parseType : number)\r\n    {\r\n      await this._locationService.DeleteProgress(convId, parseType);\r\n    }\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { ImportLookupResponse } from \"../Models/Response/import-lookup-response\";\r\nimport { LookupService } from \"../Data/lookupservice\";\r\nimport { LocationLookupsResponse } from \"../Models/Response/location-lookups-response\";\r\nimport {UserLookupsResponse } from \"../Models/Response/user-lookups-response\";\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n  })\r\nexport class LookupBl {\r\n\r\n    constructor(private _lookupService : LookupService)\r\n    {\r\n        \r\n    }\r\n\r\n    public async GetImportLookup() : Promise<ImportLookupResponse>\r\n    {\r\n        var response = await this._lookupService.ImportGet();\r\n\r\n        return response;\r\n    }\r\n\r\n    public async GetLocationLookups() : Promise<LocationLookupsResponse>\r\n    {\r\n        var response = await this._lookupService.GetLocationLookups();\r\n        \r\n        return response;\r\n    }\r\n\r\n    public async GetUserLookups(userId : number) : Promise<UserLookupsResponse>\r\n    {\r\n        var response = await this._lookupService.GetUserLookups(userId);\r\n\r\n        return response;\r\n    }\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { MaintenanceService } from \"../Data/maintenance-service\";\r\nimport { LoadValsDto } from \"../Models/Dtos/load-vals-dto\";\r\nimport { StageRequest } from \"../Models/Requests/stage-request\";\r\nimport { CommitRequest } from \"../Models/Requests/commit-request\";\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n  })\r\nexport class MaintenanceBl {\r\n\r\n    constructor(private _maintenanceService : MaintenanceService)\r\n    {\r\n    }\r\n\r\n    public async Get()\r\n    {\r\n        var response = await this._maintenanceService.Get();\r\n\r\n        return response;\r\n    }\r\n\r\n    public async Stage(stageRequest : StageRequest)\r\n    {\r\n        var response = await this._maintenanceService.Stage(stageRequest);\r\n\r\n        return response;\r\n    }\r\n\r\n    public async Commit(commitRequest : CommitRequest)\r\n    {\r\n        var response = await this._maintenanceService.Commit(commitRequest);\r\n\r\n        return response;\r\n    }\r\n\r\n    public async GetTestTerms(userId : number)\r\n    {\r\n        var response = await this._maintenanceService.GetTestTerms(userId);\r\n\r\n        return response;\r\n    }\r\n\r\n    public async DeleteLoadVal(loadValId : number)\r\n    {\r\n        var response = await this._maintenanceService.DeleteloadVal(loadValId);\r\n\r\n        return response;\r\n    }\r\n\r\n    \r\n}\r\n","import { ManagerService } from '../Data/manager.service';\r\nimport { ManagerRequest } from '../Models/Requests/manager-request';\r\nimport { ManagerResponse } from '../Models/Response/manager-response';\r\nimport { Injectable } from '@angular/core';\r\nimport { UploadResponse } from '../Models/Response/upload-response';\r\nimport {SaveConversionResponse} from '../Models/Response/save-import-response';\r\nimport { ConversionDto } from '../Models/Dtos/conversion-dto';\r\nimport { SummaryResponse } from '../Models/Response/summary-response';\r\nimport { PagingDto } from '../Models/Dtos/paging-dto';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n  })\r\nexport class ManagerBl {\r\n\r\n    constructor(private _managerService : ManagerService) { }\r\n\r\n    public async DeleteLocations(convId : number)\r\n    {\r\n        var response = await this._managerService.DeleteLocations(convId);\r\n\r\n        return response;\r\n    }\r\n\r\n    public async Get(pagingRequest : PagingDto, account : string, status : number[], userId : number) : Promise<ManagerResponse>\r\n    {\r\n        var managerRequest = new ManagerRequest({\r\n            Account : account, \r\n            Status : status, \r\n            UserId : userId,\r\n            RecFirst : pagingRequest.RecFirst,\r\n            RecLast : pagingRequest.RecLast\r\n        });\r\n\r\n        var response = await this._managerService.Get(managerRequest);\r\n\r\n        return response;\r\n    }\r\n\r\n    public async UploadFile(file : File, workSheet : string, name : string) : Promise<UploadResponse>\r\n    {\r\n        return await this._managerService.UploadFile(file, workSheet, name);\r\n    }\r\n\r\n    public async SaveImport(conversion : ConversionDto) : Promise<SaveConversionResponse>\r\n    {\r\n        return await this._managerService.SaveImport(conversion);\r\n    }\r\n\r\n    public Download(conversion: ConversionDto): void\r\n    {\r\n        this._managerService.Download(conversion);\r\n    }\r\n\r\n    public async GetSummary(convId : number) : Promise<SummaryResponse>\r\n    {\r\n        return await this._managerService.GetSummary(convId);\r\n    }\r\n\r\n   \r\n\r\n}\r\n","import { MappingService } from \"../Data/mapping-service\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { ColumnMapResponse } from \"../Models/Response/column-map-response\";\r\nimport { ColMapDto } from \"../Models/Dtos/col-map-dto\";\r\nimport { ConversionDto } from \"../Models/Dtos/conversion-dto\";\r\nimport {SaveConversionMappingsRequest} from \"../Models/Requests/save-conversion-mappings-request\";\r\nimport { SaveConversionMappingsResponse } from \"../Models/Response/save-conversion-mappings-response\";\r\nimport { GetConversionValidationsResponse } from \"../Models/Response/get-conversion-validations-response\";\r\nimport { AddColRequest } from \"../Models/Requests/add-col-requests\";\r\nimport { AddColResponse } from \"../Models/Response/add-col-response\";\r\nimport { MapHeaderDto } from \"../Models/Dtos/map-header-dto\";\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n  })\r\nexport class MappingBl {\r\n\r\n    constructor(private _mappingService :MappingService) {}\r\n\r\n    public async Map(convId : number) : Promise<ColumnMapResponse>\r\n    {\r\n        var response = await this._mappingService.Get(convId);\r\n\r\n        return response;\r\n    }\r\n\r\n    public async SaveMapping(mapHeaders : MapHeaderDto[], conversionDto : ConversionDto) : Promise<SaveConversionMappingsResponse>\r\n    {\r\n        var mapped = mapHeaders.filter(x=> x.selected.fieldId > 0);\r\n        var request = new SaveConversionMappingsRequest\r\n        (\r\n            {\r\n                Mapped : mapped,\r\n                ConversionDto : conversionDto \r\n            }\r\n        );\r\n        \r\n        return await this._mappingService.SaveMappings(request);\r\n    }\r\n\r\n    public async GetValidations() : Promise<GetConversionValidationsResponse>\r\n    {\r\n        return await this._mappingService.GetValidations();\r\n    }\r\n\r\n    public async AddColumn(addColRequest: AddColRequest) : Promise<AddColResponse>\r\n    {\r\n        return await this._mappingService.AddColumn(addColRequest);\r\n    }\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { PagingService } from \"../Data/paging-service\";\r\nimport { PagingRequest } from \"../Models/Requests/paging-request\";\r\nimport { PagingResponse } from \"../Models/Response/paging-response\";\r\nimport {ManagerRequest} from '../Models/Requests/manager-request';\r\nimport { GetCleansedMgrRequest } from \"../Models/Requests/get-cleansed-mgr-request\";\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n  })\r\nexport class PagingBl {\r\n\r\n    constructor(private _pagingService: PagingService) \r\n    {\r\n    }\r\n\r\n    public async PageConversions(pagingRequest : PagingRequest, account : string, status : number[], userId : number) : Promise<PagingResponse>\r\n    {\r\n        var managerRequest = new ManagerRequest({\r\n            Account : account, \r\n            Status : status, \r\n            UserId : userId \r\n        });\r\n\r\n        let filter = JSON.stringify(managerRequest);\r\n\r\n        pagingRequest.Filters = filter;\r\n        return await this.PageCommon(pagingRequest);\r\n    }\r\n\r\n    public async PageCleansed(pagingRequest : PagingRequest, userId : number) : Promise<PagingResponse>\r\n    {\r\n        var cleansedMgrRequest = new GetCleansedMgrRequest({\r\n   \r\n            UserId : userId \r\n        });\r\n\r\n        let filter = JSON.stringify(cleansedMgrRequest);\r\n\r\n        pagingRequest.Filters = filter;\r\n        return await this.PageCommon(pagingRequest);\r\n    }\r\n\r\n    private async PageCommon(pagingRequest : PagingRequest) : Promise<PagingResponse>\r\n    {\r\n        return await this._pagingService.Page(pagingRequest);\r\n    }\r\n}\r\n","import { HttpClient, HttpHeaders } from \"@angular/common/http\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { ToastrService } from \"ngx-toastr\";\r\nimport { environment } from \"src/environments/environment\";\r\nimport { SprinklerValsDto } from \"../Models/Dtos/sprinkler-dto\";\r\nimport { CommitValuesRequest } from \"../Models/Requests/commit-values-request\";\r\nimport { DeleteValuesRequest } from \"../Models/Requests/delete-values-request\";\r\nimport { UpdateSprinklerRequest } from \"../Models/Requests/update-sprinkler-request\";\r\nimport { UpdateValueRequest } from \"../Models/Requests/update-value-request\";\r\nimport { AdminValuesResponse } from \"../Models/Response/admin-values-response\";\r\nimport { CommitResponse } from \"../Models/Response/commit-response\";\r\nimport { DeleteSprinklerResponse } from \"../Models/Response/delete-sprinkler-response\";\r\nimport { DeleteValuesResponse } from \"../Models/Response/delete-values-response\";\r\nimport { UpdateValueResponse } from \"../Models/Response/update-value-response\";\r\nimport { MediatorService } from \"../Services/mediator.service\";\r\nimport { ApiBase } from \"./api-base\";\r\n\r\nconst API_URL = environment.apiUrl;\r\n@Injectable({\r\n    providedIn: 'root'\r\n  })\r\nexport class AdminValuesService extends ApiBase {\r\n\r\n \r\n    constructor(private _http: HttpClient, _mediatorService:MediatorService,_toastr: ToastrService) {\r\n        super(_mediatorService, _toastr);\r\n      }\r\n\r\n      public async Get() : Promise<AdminValuesResponse>\r\n      {\r\n        var response = await this._http.get(API_URL + 'api/Values/Get')\r\n        .toPromise()\r\n        .then(x=> x as AdminValuesResponse)\r\n    \r\n        this.ProcessResponse(response);\r\n        return response;\r\n      }\r\n\r\n      public async DeleteSprinkler(sprinkler : SprinklerValsDto) : Promise<DeleteSprinklerResponse>\r\n      {\r\n        var response = await this._http.delete(API_URL + 'api/Values/DeleteSprinkler/' + sprinkler.sprinklerValsId)\r\n        .toPromise()\r\n        .then(x=> x as DeleteSprinklerResponse)\r\n    \r\n        this.ProcessResponse(response);\r\n        return response;\r\n      }\r\n\r\n      public async CommitSprinkler(sprinkler : SprinklerValsDto) : Promise<CommitResponse>\r\n      {\r\n        var response = await this._http.get(API_URL + 'api/Values/CommitSprinkler/' + sprinkler.sprinklerValsId)\r\n        .toPromise()\r\n        .then(x=> x as CommitResponse)\r\n    \r\n        this.ProcessResponse(response);\r\n        return response;\r\n      }\r\n\r\n      public async CommitValue(request : CommitValuesRequest) : Promise<CommitResponse>\r\n      {\r\n        var requestPayLoad : string = JSON.stringify(request);\r\n        let headers = new HttpHeaders();\r\n        headers = headers.set('Content-Type', 'application/json; charset=utf-8');\r\n\r\n        var response = await this._http.post(API_URL + 'api/Values/CommitValue', requestPayLoad,{headers : headers})\r\n        .toPromise()\r\n        .then(x=> x as CommitResponse)\r\n    \r\n        this.ProcessResponse(response);\r\n        return response;\r\n      }\r\n\r\n      public async DeleteValue(request : DeleteValuesRequest) : Promise<DeleteValuesResponse>\r\n      {\r\n        var requestPayLoad : string = JSON.stringify(request);\r\n        let headers = new HttpHeaders();\r\n        headers = headers.set('Content-Type', 'application/json; charset=utf-8');\r\n\r\n        var response = \r\n        await this._http.post(API_URL + 'api/Values/DeleteValue', requestPayLoad, {headers : headers})\r\n        .toPromise()\r\n        .then(x=> x as DeleteValuesResponse)\r\n        this.ProcessResponse(response);\r\n        return response;\r\n      }\r\n\r\n      public async UpdateSprinklerValue(request : UpdateSprinklerRequest) : Promise<UpdateValueResponse>\r\n      {\r\n        var requestPayLoad : string = JSON.stringify(request);\r\n        let formData: FormData = new FormData();\r\n        formData.append('request', requestPayLoad);\r\n\r\n        var response = await this._http.put(API_URL + 'api/Values/UpdateSprinklerValues', formData)\r\n        .toPromise()\r\n        .then(x=> x as UpdateValueResponse)\r\n    \r\n        this.ProcessResponse(response);\r\n        return response;\r\n      }\r\n\r\n      public async UpdateValue(request : UpdateValueRequest) : Promise<UpdateValueResponse>\r\n      {\r\n        var requestPayLoad : string = JSON.stringify(request);\r\n        let headers = new HttpHeaders();\r\n        headers = headers.set('Content-Type', 'application/json; charset=utf-8');\r\n\r\n        var response = await this._http.post(API_URL + 'api/Values/UpdateValue', requestPayLoad, {headers : headers})\r\n        .toPromise()\r\n        .then(x=> x as UpdateValueResponse);\r\n    \r\n        this.ProcessResponse(response);\r\n        return response;\r\n      }\r\n}\r\n","import { MediatorService } from '../Services/mediator.service';\r\nimport { BaseResponse } from '../Models/Response/response';\r\nimport { ToastrService } from 'ngx-toastr';\r\n\r\n\r\nexport class ApiBase \r\n{\r\n    constructor(private _mediatorService:MediatorService,private _toastr: ToastrService) {}\r\n\r\n    public ProcessResponse(response : BaseResponse)\r\n    { \r\n        if (response.status && response.showMsg)\r\n        {\r\n            this._toastr.show(response.message, response.title, { positionClass: 'toast-top-full-width',titleClass: \"custom-title-green\"});\r\n            return;\r\n        }\r\n            \r\n        if (response.status && !response.showMsg)\r\n            return;\r\n\r\n        this._toastr.show(response.message, \"An error occured\", { positionClass: 'toast-top-full-width',titleClass: \"custom-title-red\"});\r\n\r\n    }\r\n}","import { Injectable } from \"@angular/core\";\r\nimport { BehaviorSubject, Observable } from \"rxjs\";\r\nimport { UserDto } from \"../Models/Dtos/user-dto\";\r\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\";\r\nimport { environment } from \"../../environments/environment\";\r\nimport { ApiBase } from \"./api-base\";\r\nimport { MediatorService } from \"../Services/mediator.service\";\r\nimport { ToastrService } from \"ngx-toastr\";\r\nimport { AuthenticateResponse } from \"../Models/Response/authenticate-response\";\r\nimport { AuthenticateRequest} from \"../Models/Requests/authenticate-request\";\r\nimport { ChangePwdRequest} from \"../Models/Requests/change-pwd-request\";\r\nimport { ChangePwdResponse } from \"../Models/Response/change-pwd-response\";\r\nimport * as CryptoJS from '../../../node_modules/crypto-js'; \r\n\r\nconst API_URL = environment.apiUrl;\r\n@Injectable({ providedIn: 'root' })\r\nexport class AuthenticationService extends ApiBase {\r\n    private _currentUserSubject: BehaviorSubject<UserDto>;\r\n    public _currentUser: Observable<UserDto>;\r\n    private _firstTimeUser : UserDto;\r\n\r\n    constructor(private _http: HttpClient, _mediatorService:MediatorService,_toastr: ToastrService) {\r\n        super(_mediatorService, _toastr);\r\n        this._currentUserSubject = new BehaviorSubject<UserDto>(JSON.parse(localStorage.getItem('currentUser')));\r\n        this._currentUser = this._currentUserSubject.asObservable();\r\n    }\r\n\r\n   \r\n\r\n    public get currentUserValue(): UserDto {\r\n        return this._currentUserSubject.value;\r\n    }\r\n\r\n    public async Login(authenticateRequest : AuthenticateRequest) : Promise<AuthenticateResponse>\r\n    {\r\n    \r\n        var key = CryptoJS.enc.Hex.parse(environment.encryptKey);\r\n        var iv = CryptoJS.enc.Hex.parse(environment.iv);\r\n        var encrypted = CryptoJS.AES.encrypt(authenticateRequest.Pwd, key, {iv: iv, padding: CryptoJS.pad.NoPadding}).toString();\r\n \r\n        authenticateRequest.Pwd = encrypted;\r\n        var requestPayLoad : string = JSON.stringify(authenticateRequest);\r\n        let headers = new HttpHeaders();\r\n        headers = headers.set('Content-Type', 'application/json; charset=utf-8');\r\n        var response = await this._http.post(API_URL + 'api/users/authenticate', requestPayLoad, {headers : headers})\r\n        .toPromise()\r\n        .then(x=> x as AuthenticateResponse);\r\n\r\n        this.ProcessResponse(response);\r\n        \r\n        if (response.status && response.changePwd == false)\r\n        {\r\n            localStorage.setItem('currentUser', JSON.stringify(response.user));\r\n            this._currentUserSubject.next(response.user);\r\n        }\r\n\r\n        if (response.status && response.changePwd)\r\n            this._firstTimeUser = response.user;\r\n\r\n        return response;\r\n    }\r\n\r\n    logout() {\r\n        // remove user from local storage to log user out\r\n        localStorage.removeItem('currentUser');\r\n        this._currentUserSubject.next(null);\r\n    }\r\n\r\n    public async ChangePwd(changePwdRequest : ChangePwdRequest)  : Promise<ChangePwdResponse>\r\n    {\r\n        var key = CryptoJS.enc.Hex.parse(environment.encryptKey);\r\n        var iv = CryptoJS.enc.Hex.parse(environment.iv);\r\n        var encrypted = CryptoJS.AES.encrypt(changePwdRequest.Pwd, key, {iv: iv, padding: CryptoJS.pad.NoPadding}).toString();\r\n \r\n        changePwdRequest.Pwd = encrypted;\r\n        changePwdRequest.UserId = this._firstTimeUser.userId;\r\n        var requestPayLoad : string = JSON.stringify(changePwdRequest);\r\n        let formData: FormData = new FormData();\r\n        formData.append('request', requestPayLoad);\r\n        var response = await this._http.post(API_URL + 'api/users/changePwd', formData)\r\n        .toPromise()\r\n        .then(x=> x as ChangePwdResponse);\r\n\r\n        this.ProcessResponse(response);\r\n        \r\n        if (response.status)\r\n        {\r\n            localStorage.setItem('currentUser', JSON.stringify(this._firstTimeUser));\r\n            this._currentUserSubject.next(this._firstTimeUser);\r\n        }\r\n        return response;\r\n    }\r\n}\r\n","import { HttpClient } from \"@angular/common/http\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { ToastrService } from \"ngx-toastr\";\r\nimport { environment } from \"../../environments/environment\";\r\nimport { CleanLoadRequest } from \"../Models/Requests/cleanse-request\";\r\nimport { CleanLoadResponse} from \"../Models/Response/cleanse-response\";\r\nimport { MediatorService } from \"../Services/mediator.service\";\r\nimport { ApiBase } from \"./api-base\";\r\nimport { GetCleansedMgrRequest } from \"../Models/Requests/get-cleansed-mgr-request\";\r\nimport { GetCleansedMgrResponse } from \"../Models/Response/get-cleansed-mgr-response\";\r\nimport { NewCleansedRequest } from \"../Models/Requests/new-cleansed-request\";\r\nimport { NewCleansedResponse } from \"../Models/Response/new-cleansed-response\";\r\nimport { AddOperationResponse } from \"../Models/Response/add-operation-response\";\r\nimport { AddOperationRequest } from \"../Models/Requests/add-operation-request\";\r\nimport { OperationsResponse } from \"../Models/Response/operations-response\";\r\nimport { DeleteOperationResponse } from \"../Models/Response/delete-operation-response\";\r\nimport { CleanseExportResponse } from \"../Models/Response/cleanse-export-response\";\r\nimport { CleanseExportRequest } from \"../Models/Requests/cleanse-export-request\";\r\nimport { ReplayRequest } from \"../Models/Requests/replay-request\";\r\nimport { ReplayResponse } from \"../Models/Response/replay-response\";\r\n\r\nconst API_URL = environment.apiUrl;\r\n\r\nconst EXCEL_TYPE = 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n  })\r\nexport class CleansingService extends ApiBase {\r\n\r\n    constructor(private _http: HttpClient, _mediatorService:MediatorService,_toastr: ToastrService) {\r\n        super(_mediatorService, _toastr);\r\n      }\r\n\r\n      public async Replay(replayRequest : ReplayRequest, file : File) : Promise<ReplayResponse>\r\n      {\r\n        var requestPayLoad : string = JSON.stringify(replayRequest);\r\n        let formData: FormData = new FormData();\r\n        formData.append('request', requestPayLoad);\r\n\r\n        formData.append(file.name, new Blob([file], {type: EXCEL_TYPE}));\r\n        formData.append('name', file.name);\r\n\r\n        var response = await this._http.post(API_URL + 'api/Cleanse/Replay', formData)\r\n        .toPromise()\r\n        .then(x=> x as ReplayResponse)\r\n\r\n        this.ProcessResponse(response);\r\n    \r\n        return response;\r\n      }\r\n\r\n      public async New(newCleansedRequest : NewCleansedRequest, file : File) : Promise<NewCleansedResponse>\r\n      {\r\n        var requestPayLoad : string = JSON.stringify(newCleansedRequest);\r\n        let formData: FormData = new FormData();\r\n        formData.append('request', requestPayLoad);\r\n\r\n        formData.append(file.name, new Blob([file], {type: EXCEL_TYPE}));\r\n        formData.append('name', file.name);\r\n\r\n        var response = await this._http.post(API_URL + 'api/Cleanse/New', formData)\r\n        .toPromise()\r\n        .then(x=> x as NewCleansedResponse)\r\n  \r\n        this.ProcessResponse(response);\r\n    \r\n        return response;\r\n      }\r\n\r\n      public async Load(cleanLoadRequest : CleanLoadRequest) : Promise<CleanLoadResponse>\r\n      {\r\n        var requestPayLoad : string = JSON.stringify(cleanLoadRequest);\r\n        let formData: FormData = new FormData();\r\n        formData.append('request', requestPayLoad);\r\n\r\n        var response = await this._http.post(API_URL + 'api/Cleanse/Load', formData)\r\n        .toPromise()\r\n        .then(x=> x as CleanLoadResponse)\r\n    \r\n        this.ProcessResponse(response);\r\n    \r\n        return response;\r\n      }\r\n\r\n      public async LoadOperations(cleanseMgrId : number) : Promise<OperationsResponse>\r\n      {\r\n        var response = await this._http.get(API_URL + 'api/Cleanse/Operations?cleanseMgrId=' + cleanseMgrId)\r\n        .toPromise()\r\n        .then(x=> x as OperationsResponse)\r\n    \r\n        this.ProcessResponse(response);\r\n    \r\n        return response;\r\n      }\r\n\r\n      public async DeleteOperation(operationId : number) : Promise<DeleteOperationResponse>\r\n      {\r\n        var response = await this._http.get(API_URL + 'api/Cleanse/DeleteOp?operationsId=' + operationId)\r\n        .toPromise()\r\n        .then(x=> x as DeleteOperationResponse)\r\n    \r\n        this.ProcessResponse(response);\r\n    \r\n        return response;\r\n      }\r\n\r\n      public async AddOperation(addOperationRequest : AddOperationRequest) : Promise<AddOperationResponse>\r\n      {\r\n        var requestPayLoad : string = JSON.stringify(addOperationRequest);\r\n        let formData: FormData = new FormData();\r\n        formData.append('request', requestPayLoad);\r\n\r\n        var response = await this._http.post(API_URL + 'api/Cleanse/AddOperation', formData)\r\n        .toPromise()\r\n        .then(x=> x as AddOperationResponse)\r\n    \r\n        this.ProcessResponse(response);\r\n    \r\n        return response;\r\n      }\r\n\r\n      public async Get(request : GetCleansedMgrRequest) : Promise<GetCleansedMgrResponse>\r\n      {\r\n        var requestPayLoad : string = JSON.stringify(request);\r\n        let formData: FormData = new FormData();\r\n        formData.append('request', requestPayLoad);\r\n\r\n        var response = await this._http.post(API_URL + 'api/Cleanse/Get', formData)\r\n        .toPromise()\r\n        .then(x=> x as GetCleansedMgrResponse)\r\n    \r\n        this.ProcessResponse(response);\r\n    \r\n        return response;\r\n      }\r\n\r\n      public async Export(cleanseExportRequest : CleanseExportRequest) : Promise<CleanseExportResponse>\r\n      {\r\n        var requestPayLoad : string = JSON.stringify(cleanseExportRequest);\r\n        let formData: FormData = new FormData();\r\n        formData.append('request', requestPayLoad);\r\n\r\n        var response = await this._http.post(API_URL + 'api/Cleanse/Export', formData)\r\n        .toPromise()\r\n        .then(x=> x as CleanseExportResponse)\r\n    \r\n        this.ProcessResponse(response);\r\n    \r\n        return response;\r\n      }\r\n    }\r\n","import { environment } from \"../../environments/environment\";\r\nimport { ApiBase } from \"./api-base\";\r\nimport { HttpClient } from \"@angular/common/http\";\r\nimport { MediatorService } from \"../Services/mediator.service\";\r\nimport { FilesResponse } from '../Models/Response/files-response';\r\nimport { ToastrService } from \"ngx-toastr\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport {GetWorkSheetsRequest} from '../Models/Requests/files-request';\r\nimport {GetWorkSheetsResponse} from '../Models/response/get-work-sheets-response'\r\nimport { CompareResponse } from \"../Models/Response/compare-response\";\r\nimport { CompareRequest } from \"../Models/Requests/compare-request\";\r\n\r\nconst API_URL = environment.apiUrl;\r\n\r\nconst EXCEL_TYPE = 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8';\r\n\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n  })\r\nexport class CompareService extends ApiBase {\r\n\r\n    constructor(private _http: HttpClient, _mediatorService:MediatorService,_toastr: ToastrService) {\r\n        super(_mediatorService, _toastr);\r\n      }\r\n\r\n      public async GetFiles() : Promise<FilesResponse>\r\n      {\r\n        var response = await this._http.get(API_URL + 'api/Compare/Get')\r\n        .toPromise()\r\n        .then(x=> x as FilesResponse)\r\n    \r\n        this.ProcessResponse(response);\r\n    \r\n        return response;\r\n      }\r\n\r\n      public async GetWorkSheets(getWorkSheetsRequest : GetWorkSheetsRequest) : Promise<GetWorkSheetsResponse>\r\n      {\r\n        var requestPayLoad : string = JSON.stringify(getWorkSheetsRequest);\r\n        let formData: FormData = new FormData();\r\n        formData.append('request', requestPayLoad);\r\n        // formData.append(file.name, new Blob([file], {type: EXCEL_TYPE}));\r\n        var response = await this._http.post(API_URL + 'api/Compare/GetWorkSheets', formData)\r\n        .toPromise()\r\n        .then(x=> x as GetWorkSheetsResponse)\r\n\r\n        this.ProcessResponse(response);\r\n\r\n        return response;\r\n      }\r\n\r\n      public async Compare(compareRequest : CompareRequest, droppedFile : File) : Promise<CompareResponse>\r\n      {\r\n        var requestPayLoad : string = JSON.stringify(compareRequest);\r\n        let formData: FormData = new FormData();\r\n        formData.append('request', requestPayLoad);\r\n        formData.append(droppedFile.name, new Blob([droppedFile], {type: EXCEL_TYPE}));\r\n\r\n        var response = await this._http.post(API_URL + 'api/Compare/Compare', formData)\r\n        .toPromise()\r\n        .then(x=> x as CompareResponse)\r\n\r\n        this.ProcessResponse(response);\r\n\r\n        return response;\r\n\r\n      }\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\";\r\nimport { ToastrService } from \"ngx-toastr\";\r\nimport { environment } from \"src/environments/environment\";\r\nimport { GetEncoderResponse } from \"../Models/Response/get-encoder-response\";\r\nimport { MediatorService } from \"../Services/mediator.service\";\r\nimport { ApiBase } from \"./api-base\";\r\nimport { CreateEncoderResponse } from \"../Models/Response/create-template-response\";\r\nimport { CreateEncoderRequest } from \"../Models/Requests/create-encoder-request\";\r\n\r\nconst API_URL = environment.apiUrl;\r\n@Injectable({ providedIn: 'root' })\r\nexport class EncorderService extends ApiBase \r\n{\r\n    constructor(private _http: HttpClient, _mediatorService:MediatorService,_toastr: ToastrService) {\r\n        super(_mediatorService, _toastr);\r\n    }\r\n\r\n    public async Get(clientId : number) : Promise<GetEncoderResponse>\r\n    {\r\n      var response = await this._http.get(API_URL + 'api/Encoders/Get?clientId=' + clientId)\r\n      .toPromise()\r\n      .then(x=> x as GetEncoderResponse)\r\n  \r\n      this.ProcessResponse(response);\r\n  \r\n      return response;\r\n    }\r\n\r\n    public async Create(request : CreateEncoderRequest) : Promise<CreateEncoderResponse>\r\n    {\r\n\r\n      var requestPayLoad : string = JSON.stringify(request);\r\n      let headers = new HttpHeaders();\r\n      headers = headers.set('Content-Type', 'application/json; charset=utf-8');\r\n      var response = await this._http.post(API_URL + 'api/Encoders/Create', requestPayLoad, {headers : headers})\r\n      .toPromise()\r\n      .then(x=> x as CreateEncoderResponse)\r\n  \r\n      this.ProcessResponse(response);\r\n  \r\n      return response;\r\n    }\r\n}\r\n","import { environment } from \"../../environments/environment\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { ApiBase } from \"./api-base\";\r\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\";\r\nimport { MediatorService } from \"../Services/mediator.service\";\r\nimport { ToastrService } from \"ngx-toastr\";\r\nimport { LocationsMappedResponse } from '../models/Response/locations-mapped-response';\r\nimport { Observable, forkJoin } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { LocationDto } from '../Models/Dtos/location-dto';\r\nimport { ExportResponse} from '../models/Response/export-response';\r\nimport { LocationUpdatesResponse } from \"../Models/Response/location-updates-response\";\r\nimport { LocUpdatesRequest } from \"../Models/Requests/loc-updates-request\";\r\nimport { FilesResponse } from \"../Models/Response/files-response\";\r\nimport { ProgressResponse } from \"../Models/Response/progress-response\";\r\nimport { GetMappedConversionResponse } from \"../Models/Response/get-mapped-conversion-response\";\r\n\r\nconst API_URL = environment.apiUrl;\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n  })\r\nexport class LocationService extends ApiBase {\r\n\r\n    //observable : [] as  any;\r\n    constructor(private _http: HttpClient, _mediatorService:MediatorService,_toastr: ToastrService) {\r\n        super(_mediatorService, _toastr);\r\n      }\r\n\r\n      public async GetMappedConversion(convId : number) : Promise<GetMappedConversionResponse>\r\n      {\r\n \r\n        var response = await this._http.get(API_URL + \"api/Locations/GetMapped?convId=\" + convId)\r\n        .toPromise()\r\n        .then(x=> x as GetMappedConversionResponse)\r\n    \r\n        this.ProcessResponse(response);\r\n    \r\n      \r\n        await this.retrieveMultiple(convId, response.rowCount);\r\n        return response;\r\n      }\r\n\r\n      public async MapLocations(convId : number) : Promise<LocationsMappedResponse>\r\n      {\r\n        var response = await this._http.get(API_URL + \"api/Locations/Map?convId=\" + convId)\r\n        .toPromise()\r\n        .then(x=> x as LocationsMappedResponse)\r\n    \r\n        this.ProcessResponse(response);\r\n    \r\n      \r\n        //await this.retrieveMultiple(convId, response.rowCount);\r\n        return response;\r\n      }\r\n\r\n\r\n      retrieveMultiple(convId : number, locNumCtr : Number) :Observable<any>{\r\n\r\n        const result = [] as  any;\r\n   \r\n        for (var i = 0; i < locNumCtr; i+=250)\r\n        {\r\n            var ob = this._http.get(API_URL + \"api/Locations/Get?convId=\"+ convId + \"&from=\" + i)\r\n            .pipe(map(res => res as LocationDto[]));\r\n            result.push(ob);\r\n\r\n        }\r\n        \r\n      \r\n        return forkJoin(result)\r\n          .pipe(map(\r\n                 datas => {\r\n         return datas \r\n           console.log('received data', datas);\r\n       }));\r\n\r\n       }\r\npublic async RetrieveMultiple2(convId : number, locNumCtr : Number)\r\n{\r\n\r\n  debugger;\r\n   var locations : Array<LocationDto> = [];\r\n \r\n\r\n  for (var i = 0; i < locNumCtr; i+=250)\r\n  {\r\n      var response = await this._http.get(API_URL + \"api/Locations/Get?convId=\"+ convId + \"&from=\" + i)\r\n      .toPromise()\r\n      .then(x=> x as LocationDto[]);\r\n\r\n      response.forEach(x=>\r\n        { locations.push(x);\r\n\r\n        });\r\n  }\r\n  return locations;\r\n}\r\n       public async Export(convId : number) : Promise<ExportResponse>\r\n       {\r\n          var response = await this._http.get(API_URL + \"api/Locations/Export?convId=\" + convId)\r\n          .toPromise()\r\n          .then(x=> x as ExportResponse)\r\n      \r\n          this.ProcessResponse(response);\r\n\r\n          return response;\r\n       }\r\n\r\n       public async LocationUpdates(locUpdatesRequest : LocUpdatesRequest) : Promise<LocationUpdatesResponse>\r\n       {\r\n        var requestPayLoad : string = JSON.stringify(locUpdatesRequest);\r\n        let headers = new HttpHeaders();\r\n        headers = headers.set('Content-Type', 'application/json; charset=utf-8');\r\n\r\n        var response = await this._http.post(API_URL + 'api/locations/UpdateLocs', requestPayLoad,{headers : headers})\r\n        .toPromise()\r\n        .then(x=> x as LocationUpdatesResponse)\r\n    \r\n        this.ProcessResponse(response);\r\n    \r\n        return response;\r\n       }\r\n\r\n       public async DeleteProgress(convId : number, parseType : number) \r\n       {\r\n        await this._http.get(API_URL + 'api/locations/DeleteProgress?conversionId=' + convId + \"&parseType=\" + parseType)\r\n        .toPromise()\r\n       }\r\n\r\n      public async GetFiles() : Promise<FilesResponse>\r\n      {\r\n        var response = await this._http.get(API_URL + 'api/Compare/Get')\r\n        .toPromise()\r\n        .then(x=> x as FilesResponse)\r\n    \r\n        this.ProcessResponse(response);\r\n    \r\n        return response;\r\n      }\r\n\r\n      public GetProgress(conversionId : number, parseType : number) :Observable<ProgressResponse>\r\n      {\r\n        var response = this._http.get(API_URL + \"api/Locations/GetProgress?conversionId=\" + conversionId + \"&parseType=\" + parseType)\r\n        .pipe(map(res => res as ProgressResponse))\r\n       \r\n \r\n        return response;\r\n      }\r\n}\r\n","import { ApiBase } from \"./api-base\";\r\nimport { ToastrService } from \"ngx-toastr\";\r\nimport { HttpClient } from \"@angular/common/http\";\r\nimport { MediatorService } from \"../Services/mediator.service\";\r\nimport { ImportLookupResponse } from \"../Models/Response/import-lookup-response\";\r\nimport {LocationLookupsResponse} from \"../Models/Response/location-lookups-response\"; \r\nimport { environment } from \"../../environments/environment\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { UserLookupsResponse } from \"../Models/Response/user-lookups-response\";\r\n\r\nconst API_URL = environment.apiUrl;\r\n@Injectable({\r\n    providedIn: 'root'\r\n  })\r\nexport class LookupService extends ApiBase{\r\n\r\n    \r\n  constructor(private _http: HttpClient, _mediatorService:MediatorService,_toastr: ToastrService) {\r\n    super(_mediatorService, _toastr);\r\n  }\r\n\r\n  public async ImportGet(): Promise<ImportLookupResponse> \r\n  {\r\n     var response = await this._http.get(API_URL + 'api/Lookup/GetImportLookups')\r\n    .toPromise()\r\n    .then(x=> x as ImportLookupResponse)\r\n\r\n    this.ProcessResponse(response);\r\n\r\n    return response;\r\n  }\r\n\r\n  public async GetLocationLookups() : Promise<LocationLookupsResponse>\r\n  {\r\n    var response = await this._http.get(API_URL + 'api/Lookup/GetLocationLookups')\r\n    .toPromise()\r\n    .then(x=> x as LocationLookupsResponse)\r\n\r\n    this.ProcessResponse(response);\r\n\r\n    return response;\r\n  }\r\n\r\n  public async GetUserLookups(userId : number) : Promise<UserLookupsResponse>\r\n  {\r\n    var response = await this._http.get(API_URL + 'api/Lookup/GetUserLookups/' + userId)\r\n    .toPromise()\r\n    .then(x=> x as UserLookupsResponse)\r\n\r\n    this.ProcessResponse(response);\r\n\r\n    return response;\r\n  }\r\n\r\n}\r\n","import { environment } from \"../../environments/environment\";\r\nimport { ApiBase } from \"./api-base\";\r\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\";\r\nimport { MediatorService } from \"../Services/mediator.service\";\r\nimport { ToastrService } from \"ngx-toastr\";\r\nimport { GetKeyWordsResponse } from \"../Models/Response/get-key-words-response\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { StageResponse} from \"../Models/Response/stage-response\";\r\nimport { GetTestTermsResponse } from \"../Models/Response/get-test-terms-response\";\r\nimport { StageRequest } from \"../Models/Requests/stage-request\";\r\nimport { CommitRequest } from \"../Models/Requests/commit-request\";\r\nimport { CommitResponse } from \"../Models/Response/commit-response\";\r\nimport { DeleteLoadValResponse } from \"../Models/Response/delete-load-val-response\";\r\n\r\nconst API_URL = environment.apiUrl;\r\n@Injectable({\r\n    providedIn: 'root'\r\n  })\r\nexport class MaintenanceService extends ApiBase{\r\n\r\n    constructor(private _http: HttpClient, _mediatorService:MediatorService,_toastr: ToastrService) {\r\n        super(_mediatorService, _toastr);\r\n    }\r\n\r\n    public async Get() : Promise<GetKeyWordsResponse>\r\n    {\r\n      var response = await this._http.get(API_URL + 'api/Maintenance/Get')\r\n      .toPromise()\r\n      .then(x=> x as GetKeyWordsResponse)\r\n  \r\n      this.ProcessResponse(response);\r\n  \r\n      return response;\r\n    }\r\n\r\n    public async GetTestTerms(userId : number) : Promise<GetTestTermsResponse>\r\n    {\r\n      var response = await this._http.get(API_URL + 'api/Maintenance/GetTestTerms?userId=' + userId)\r\n      .toPromise()\r\n      .then(x=> x as GetTestTermsResponse)\r\n  \r\n      this.ProcessResponse(response);\r\n  \r\n      return response;\r\n    }\r\n\r\n    public async Commit(commitRequest : CommitRequest) : Promise<CommitResponse>\r\n    {\r\n      let formData: FormData = new FormData();\r\n      var requestPayLoad : string = JSON.stringify(commitRequest);\r\n      \r\n      let headers = new HttpHeaders();\r\n      headers = headers.set('Content-Type', 'application/json; charset=utf-8');\r\n\r\n      var response = await this._http.post(API_URL + 'api/Maintenance/Commit', requestPayLoad,{headers : headers})\r\n      .toPromise()\r\n      .then(x=> x as CommitResponse)\r\n\r\n      this.ProcessResponse(response);\r\n\r\n      return response\r\n    }\r\n\r\n    public async Stage(stageRequest : StageRequest) : Promise<StageResponse>\r\n    {\r\n      var requestPayLoad : string = JSON.stringify(stageRequest);\r\n\r\n      let headers = new HttpHeaders();\r\n      headers = headers.set('Content-Type', 'application/json; charset=utf-8');\r\n\r\n      var response = await this._http.post(API_URL + 'api/Maintenance/Stage', requestPayLoad,{headers : headers})\r\n      .toPromise()\r\n      .then(x=> x as StageResponse)\r\n\r\n      this.ProcessResponse(response);\r\n\r\n      return response;\r\n    }\r\n\r\n    public async DeleteloadVal(loadValId : number) : Promise<DeleteLoadValResponse>\r\n    {\r\n      var response = await this._http.delete(API_URL + 'api/Maintenance/Delete/' + loadValId )\r\n      .toPromise()\r\n      .then(x=> x as DeleteLoadValResponse);\r\n\r\n      this.ProcessResponse(response);\r\n      \r\n      return response;\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { environment } from '../../environments/environment';\r\nimport { ManagerRequest } from '../Models/Requests/manager-request';\r\nimport { ManagerResponse } from '../Models/Response/manager-response';\r\nimport {UploadResponse} from '../Models/Response/upload-response';\r\nimport { ApiBase } from './api-base';\r\nimport { MediatorService } from '../Services/mediator.service';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { ConversionDto } from '../Models/Dtos/conversion-dto';\r\nimport { SaveConversionResponse } from '../Models/Response/save-import-response';\r\nimport { SummaryResponse } from '../Models/Response/summary-response';\r\nimport { DeleteLocationsResponse } from '../Models/Response/delete-locations-response';\r\n\r\nconst API_URL = environment.apiUrl;\r\n\r\nconst EXCEL_TYPE = 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ManagerService extends ApiBase {\r\n\r\n  toast : ToastrService; \r\n  constructor(private _http: HttpClient, _mediatorService:MediatorService,_toastr: ToastrService) {\r\n    super(_mediatorService, _toastr);\r\n    this.toast = _toastr;\r\n  }\r\n\r\n  public async Get(managerRequest : ManagerRequest): Promise<ManagerResponse> \r\n  {\r\n    //if (managerRequest.Account == undefined) {\r\n    //  managerRequest.Account = \"\";\r\n    //}\r\n    var requestPayLoad: string = JSON.stringify(managerRequest);\r\n    let headers = new HttpHeaders();\r\n    headers = headers.set('Content-Type', 'application/json; charset=utf-8');\r\n\r\n \r\n     var response = await this._http.post(API_URL + 'api/Manager/Get', requestPayLoad, { headers : headers})\r\n    .toPromise()\r\n    .then(x=> x as ManagerResponse)\r\n\r\n    this.ProcessResponse(response);\r\n\r\n    return response;\r\n  }\r\n\r\npublic async Download(conversionDto : ConversionDto): Promise<void> \r\n{\r\n  \r\n  const blob = await this.downloadResource(conversionDto);\r\n \r\n  const url = window.URL.createObjectURL(blob);\r\n  if (window.navigator && window.navigator.msSaveOrOpenBlob) {\r\n        window.navigator.msSaveOrOpenBlob(blob);\r\n         return;\r\n  }\r\n  let a = document.createElement('a');\r\n  a.href = url;\r\n  a.download = conversionDto.name + \".zip\";\r\n  document.body.appendChild(a);\r\n  a.click();        \r\n  document.body.removeChild(a);\r\n\r\n  window.URL.revokeObjectURL(url);\r\n   \r\n}\r\n\r\n\r\n  public async downloadResource(conversion : ConversionDto): Promise<Blob> {\r\n\r\n    var requestPayLoad : string = JSON.stringify(conversion);\r\n      let headers = new HttpHeaders();\r\n      headers = headers.set('Content-Type', 'application/json; charset=utf-8');\r\n      var uri = API_URL + 'api/Manager/Download';\r\n\r\n      const file =  await this._http.post<Blob>(uri,requestPayLoad,\r\n      {headers : headers, responseType: 'blob' as 'json'}).toPromise();\r\n\r\n    return file;\r\n  }\r\n\r\n\r\n  public async DeleteLocations(convId : number)\r\n  {\r\n    var response = await this._http.get(API_URL + 'api/Conversion/DeleteLocations?conversionId=' + convId.toString())\r\n    .toPromise()\r\n    .then(x=> x as DeleteLocationsResponse)\r\n\r\n    this.ProcessResponse(response);\r\n\r\n    return response;\r\n  }\r\n\r\n  public async UploadFile(file : File, workSheet : string, name : string)\r\n  {\r\n    let formData: FormData = new FormData();\r\n  \r\n    formData.append(file.name, new Blob([file], {type: EXCEL_TYPE}));\r\n    formData.append('workSheet', workSheet);\r\n    formData.append('name', name);\r\n\r\n    var response = await this._http.post(API_URL + 'api/Files/Upload', formData)\r\n    .toPromise()\r\n    .then(x=> x as UploadResponse)\r\n\r\n    this.ProcessResponse(response);\r\n\r\n    return response;\r\n  }\r\n\r\n  public async SaveImport(conversion : ConversionDto) : Promise<SaveConversionResponse>\r\n  {\r\n\r\n    var conversionPayLoad : string = JSON.stringify(conversion);\r\n    let formData: FormData = new FormData();\r\n    formData.append('conversion', conversionPayLoad);\r\n\r\n    var response = await this._http.post(API_URL + 'api/Manager/SaveImport', formData)\r\n    .toPromise()\r\n    .then(x=> x as SaveConversionResponse)\r\n\r\n    this.ProcessResponse(response);\r\n\r\n    return response;\r\n  }\r\n\r\n  public async GetSummary(convId : number) : Promise<SummaryResponse>\r\n  {\r\n    \r\n    var response = await this._http.get(API_URL + 'api/Conversion/GetSummary?convId=' + convId.toString())\r\n    .toPromise()\r\n    .then(x=> x as SummaryResponse)\r\n\r\n    this.ProcessResponse(response);\r\n\r\n    return response;\r\n  }\r\n}\r\n","import { HttpClient } from \"@angular/common/http\";\r\nimport { MediatorService } from \"../Services/mediator.service\";\r\nimport { ToastrService } from \"ngx-toastr\";\r\nimport { ApiBase } from \"./api-base\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { ColumnMapResponse} from '../Models/Response/column-map-response';\r\nimport { environment } from \"../../environments/environment\";\r\nimport { SaveConversionMappingsRequest } from \"../Models/Requests/save-conversion-mappings-request\";\r\nimport { AddColRequest } from \"../Models/Requests/add-col-requests\";\r\nimport { AddColResponse } from \"../Models/Response/add-col-response\";\r\nimport { SaveConversionMappingsResponse } from \"../Models/Response/save-conversion-mappings-response\";\r\nimport {GetConversionValidationsResponse} from '../Models/Response/get-conversion-validations-response';\r\n\r\nconst API_URL = environment.apiUrl;\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n  })\r\nexport class MappingService extends ApiBase {\r\n  constructor(private _http: HttpClient, _mediatorService:MediatorService,_toastr: ToastrService) \r\n  {\r\n    super(_mediatorService, _toastr);\r\n  }\r\n\r\n  public async Get(convId : number): Promise<ColumnMapResponse> \r\n  {\r\n    var response = await this._http.get(API_URL + 'api/ColMap/Map?convId=' + convId)\r\n    .toPromise()\r\n    .then(x=> x as ColumnMapResponse)\r\n\r\n    this.ProcessResponse(response);\r\n\r\n    return response;\r\n  }\r\n  \r\n  public async AddColumn(addColRequest : AddColRequest) : Promise<AddColResponse>\r\n  {\r\n    var requestPayLoad : string = JSON.stringify(addColRequest);\r\n    let formData: FormData = new FormData();\r\n    formData.append('request', requestPayLoad);\r\n\r\n    var response = await this._http.post(API_URL + 'api/ColMap/AddCol', formData)\r\n    .toPromise()\r\n    .then(x=> x as AddColResponse)\r\n\r\n    this.ProcessResponse(response);\r\n\r\n    return response;\r\n\r\n  }\r\n\r\n  public async SaveMappings(request : SaveConversionMappingsRequest) : Promise<SaveConversionMappingsResponse>\r\n  {\r\n    var requestPayLoad : string = JSON.stringify(request);\r\n    let formData: FormData = new FormData();\r\n    formData.append('request', requestPayLoad);\r\n\r\n \r\n    var response = await this._http.post(API_URL + 'api/ColMap/Save', formData)\r\n    .toPromise()\r\n    .then(x=> x as SaveConversionMappingsResponse)\r\n\r\n    this.ProcessResponse(response);\r\n\r\n    return response;\r\n  }\r\n\r\n  public async GetValidations() : Promise<GetConversionValidationsResponse>\r\n  {\r\n    var response = await this._http.get(API_URL + \"api/ColMap/GetValidations\")\r\n    .toPromise()\r\n    .then(x=> x as GetConversionValidationsResponse)\r\n\r\n    this.ProcessResponse(response);\r\n\r\n    return response;\r\n  }\r\n}\r\n","import { HttpClient } from \"@angular/common/http\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { ToastrService } from \"ngx-toastr\";\r\nimport { environment } from \"../../environments/environment\";\r\nimport { MediatorService } from \"../Services/mediator.service\";\r\nimport { ApiBase } from \"./api-base\";\r\nimport { PagingRequest } from \"../Models/Requests/paging-request\";\r\nimport { PagingResponse } from \"../Models/Response/paging-response\";\r\n\r\nconst API_URL = environment.apiUrl;\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n  })\r\nexport class PagingService extends ApiBase {\r\n\r\n    constructor(private _http: HttpClient, _mediatorService:MediatorService,_toastr: ToastrService) \r\n    {\r\n      super(_mediatorService, _toastr);\r\n    }\r\n\r\n    public async Page(pagingRequest : PagingRequest): Promise<PagingResponse> \r\n    {\r\n        var requestPayLoad : string = JSON.stringify(pagingRequest);\r\n        let formData: FormData = new FormData();\r\n        formData.append('request', requestPayLoad);\r\n        var response = await this._http.post(API_URL + 'api/Paging/Page', formData)\r\n        .toPromise()\r\n        .then(x=> x as PagingResponse)\r\n        this.ProcessResponse(response);\r\n\r\n        return response;\r\n    }\r\n}\r\n","import { ApiBase } from \"./api-base\";\r\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\";\r\nimport { MediatorService } from \"../Services/mediator.service\";\r\nimport { ToastrService } from \"ngx-toastr\";\r\nimport {GetAllUsersResponse} from '../Models/Response/get-all-users-response';\r\nimport { environment } from \"../../environments/environment\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { ChangePwdResponse } from \"../Models/Response/change-pwd-response\";\r\nimport { ChangePwdRequest } from \"../Models/Requests/change-pwd-request\";\r\nimport { UserDto } from \"../Models/Dtos/user-dto\";\r\nimport { SaveUserResponse } from \"../Models/Response/save-user-response\";\r\nimport { DeleteUserRequest } from \"../Models/Requests/delete-user-request\";\r\nimport { DeleteUserResponse } from \"../Models/Response/delete-user-response\";\r\n\r\nconst API_URL = environment.apiUrl;\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n  })\r\nexport class Userservice extends ApiBase {\r\n    constructor(_mediatorService:MediatorService,_toastr: ToastrService, private _http: HttpClient ) \r\n    {\r\n      super(_mediatorService, _toastr);\r\n    }\r\n\r\n    public async Get(userId : number): Promise<GetAllUsersResponse> \r\n    {\r\n        var response = await this._http.get(API_URL + 'api/Users/Get/' + userId)\r\n        .toPromise()\r\n        .then(x=> x as GetAllUsersResponse)\r\n\r\n        this.ProcessResponse(response);\r\n\r\n        return response;\r\n    }\r\n\r\n    public async ChangePwd(changePwdRequest : ChangePwdRequest)  : Promise<ChangePwdResponse>\r\n    {\r\n    \r\n        var requestPayLoad : string = JSON.stringify(changePwdRequest);\r\n        let formData: FormData = new FormData();\r\n        formData.append('request', requestPayLoad);\r\n        var response = await this._http.post(API_URL + 'api/Users/changePwd', formData)\r\n        .toPromise()\r\n        .then(x=> x as ChangePwdResponse);\r\n\r\n        this.ProcessResponse(response);\r\n        \r\n        return response;\r\n    }\r\n\r\n    public async DeleteUser(deleteUserRequest : DeleteUserRequest) : Promise<DeleteUserResponse>\r\n    {\r\n      var response = await this._http.delete(API_URL + 'api/Users/Delete/' + deleteUserRequest.UserId )\r\n      .toPromise()\r\n      .then(x=> x as DeleteUserResponse);\r\n\r\n      this.ProcessResponse(response);\r\n      \r\n      return response;\r\n    }\r\n\r\n    public async Save(userDto : UserDto) : Promise<SaveUserResponse>\r\n    {\r\n      var requestPayLoad : string = JSON.stringify(userDto);\r\n      let headers = new HttpHeaders();\r\n      headers = headers.set('Content-Type', 'application/json; charset=utf-8');\r\n\r\n      var response = await this._http.post(API_URL + 'api/Users/Save', requestPayLoad, {headers : headers})\r\n      .toPromise()\r\n      .then(x=> x as SaveUserResponse);\r\n\r\n      this.ProcessResponse(response);\r\n      \r\n      return response;\r\n    }\r\n}","import { Injectable } from \"@angular/core\";\r\nimport {  NgbDateStruct, NgbDateParserFormatter } from \"@ng-bootstrap/ng-bootstrap\";\r\n\r\nfunction padNumber(value: number) {\r\n    if (isNumber(value)) {\r\n        return `0${value}`.slice(-2);\r\n    } else {\r\n        return \"\";\r\n    }\r\n}\r\n\r\nfunction isNumber(value: any): boolean {\r\n    return !isNaN(toInteger(value));\r\n}\r\n\r\nfunction toInteger(value: any): number {\r\n    return parseInt(`${value}`, 10);\r\n}\r\n\r\n@Injectable()\r\nexport class NgbDateFormatter extends NgbDateParserFormatter {\r\n\r\n    parse(value: string): NgbDateStruct {\r\n        if (value) {\r\n            const dateParts = value.trim().split('/');\r\n            if (dateParts.length === 1 && isNumber(dateParts[0])) {\r\n                return {year: toInteger(dateParts[0]), month: null, day: null};\r\n            } else if (dateParts.length === 2 && isNumber(dateParts[0]) && isNumber(dateParts[1])) {\r\n                return {year: toInteger(dateParts[1]), month: toInteger(dateParts[0]), day: null};\r\n            } else if (dateParts.length === 3 && isNumber(dateParts[0]) && isNumber(dateParts[1]) && isNumber(dateParts[2])) {\r\n                return {year: toInteger(dateParts[2]), month: toInteger(dateParts[1]), day: toInteger(dateParts[0])};\r\n            }\r\n        }   \r\n        return null;\r\n    }\r\n\r\n    format(date: NgbDateStruct): string {\r\n        let stringDate: string = \"\"; \r\n        if(date) {\r\n            stringDate += isNumber(date.day) ? padNumber(date.day) + \"/\" : \"\";\r\n            stringDate += isNumber(date.month) ? padNumber(date.month) + \"/\" : \"\";\r\n            stringDate += date.year;\r\n        }\r\n        return stringDate;\r\n    }\r\n}\r\n","\r\nimport { StrLookupDto } from '../str-lookup-dto';\r\n\r\nexport class JoinCriteria {\r\n\r\n    Id : number;\r\n    CompOne : string;\r\n    CompOneWs : string;\r\n\r\n    SelectedJoinType : number;\r\n\r\n    CompOneSelected : string;\r\n\r\n    CompTwoSelected : string;\r\n\r\n    CompTwoHeaders : StrLookupDto[];\r\n\r\n    CompOneColName : string;\r\n    constructor(values: Object = {}) {\r\n        Object.assign(this, values);\r\n      }\r\n}\r\n","import { ComponentLkpDto } from '../str-lookup-dto';\r\nimport { JoinCriteria } from './join-criteria';\r\nimport { OperationTypeDto } from './operation-type-dto';\r\n\r\nexport class JoinModalDto {\r\n\r\n    ComponentId : number;\r\n    CompFields : string[];\r\n    CompNames : ComponentLkpDto[];\r\n    JoinCompName : string;\r\n    JoinCompId : number;\r\n    JoinVisible : boolean;\r\n    JoinCriteria : JoinCriteria[] = [];\r\n    OperationType : OperationTypeDto;\r\n    CompTwoIdx : number;\r\n    CompTwoWsIdx : number;\r\n    ModalHeader : string;\r\n    JoinType : number;\r\n    IsMerge : boolean;\r\n    Component : string;\r\n  \r\n    \r\n    constructor(values: Object = {}) {\r\n        Object.assign(this, values);\r\n      }\r\n}\r\n","import { ComponentLkpDto, LookupDto } from '../str-lookup-dto';\r\nimport { OperationTypeDto } from './operation-type-dto';\r\n\r\nexport class MapLkpDto {\r\n\r\n    Component : string;\r\n    ComponentId : number;\r\n    CompNames : ComponentLkpDto[] = [];\r\n    ModalHeader : string;\r\n    JoinCompName : string;\r\n    JoinCompId : number;\r\n    ColumnToMap : string;\r\n    CompOneColName  :string;\r\n    CompOneColIdx : number;\r\n    CompOneFieldId : number;\r\n    CompTwoNames : LookupDto[];\r\n    CompTwoIdx : number;\r\n    CompTwoWsIdx : number;\r\n    ValueColumn : number;\r\n    MapColumn : number;\r\n    OperationType : OperationTypeDto;\r\n    \r\n    constructor(values: Object = {}) {\r\n        Object.assign(this, values);\r\n      }\r\n}\r\n","import { OperationTypeDto } from \"./operation-type-dto\";\r\n\r\nexport class MenuOption {\r\n\r\n    ComponentName : string;\r\n    ComponentId : number;\r\n\r\n    WorkSheet : string;\r\n    \r\n    WorkSheetId : number;\r\n  \r\n\r\n    RowIdx : number;\r\n\r\n    Remove : OperationTypeDto;\r\n\r\n    Split : OperationTypeDto;\r\n\r\n    Map : OperationTypeDto;\r\n\r\n    ColIdx : number;\r\n    \r\n    AddOrigin : OperationTypeDto;\r\n    \r\n    RemoveComponent : OperationTypeDto;\r\n    \r\n    Join : OperationTypeDto;\r\n\r\n    RemoveRow : OperationTypeDto;\r\n\r\n    Union : OperationTypeDto;\r\n\r\n    SetHeader : OperationTypeDto; \r\n\r\n    AddHeader : OperationTypeDto;\r\n    \r\n    constructor(values: Object = {}) {\r\n        Object.assign(this, values);\r\n      }\r\n}\r\n","import { JoinParam } from \"./join-param\";\r\n\r\nexport class OperationParam {\r\n\r\n    ColIdx : number;\r\n    RowIdx : number;\r\n    WorksheetId : number;\r\n    WorkSheetTwoId : number;\r\n    MapColIdx : number;\r\n    ValueColIdx : number;\r\n    WorkSheet : string;\r\n    Component : string;\r\n    ComponentId : number;\r\n    ComponentTwoId : number;\r\n    WorkSheetTwo : string;\r\n    ComponentTwo : string;\r\n    Joins : JoinParam[];\r\n    \r\n    constructor(values: Object = {}) {\r\n        Object.assign(this, values);\r\n      }\r\n}\r\n","import { OpTypeDto } from \"./op-type-dto\";\r\n\r\nexport class OperationTypeDto {\r\n\r\n    operationTypeId : number;\r\n\r\n    name : string;\r\n\r\n    enabled : boolean;\r\n\r\n    opType : OpTypeDto;\r\n\r\n    visible : boolean;\r\n\r\n    constructor(values: Object = {}) {\r\n        Object.assign(this, values);\r\n      }\r\n\r\n}\r\n","export class SprinklerTypeDto\r\n{\r\n    id : number;\r\n    text : string;\r\n\r\n    constructor(values: Object = {}) {\r\n        Object.assign(this, values);\r\n      }\r\n}","import { AccountFieldDto } from \"./account-field-dto\";\r\n\r\nexport class AccountDto {\r\n    accountId : number;\r\n    conversionId : number;\r\n    name : string;\r\n    incept : Date;\r\n    expiry : Date;\r\n    accountNum : Date;\r\n    userDef1 : string;\r\n    userText1: string;\r\n    fields : AccountFieldDto[];\r\n    policyDeductible : number;\r\n    policyLimit : number;\r\n\r\n\r\n    constructor(values: Object = {}) {\r\n        Object.assign(this, values);\r\n      }\r\n}\r\n\r\n\r\n","export class BldgClassDto {\r\n\r\n    scheme : string;\r\n\r\n\r\n    code : string;\r\n\r\n    id : number;\r\n\r\n    name : string;\r\n\r\n    constructor(values: Object = {}) {\r\n        Object.assign(this, values);\r\n    }\r\n}\r\n\r\nexport class BuildingClassLkpDto\r\n{\r\n    id : number;\r\n\r\n    scheme : string;\r\n\r\n    code : number;\r\n\r\n    name : string;\r\n\r\n    constructor(values: Object = {}) {\r\n        Object.assign(this, values);\r\n      }\r\n}\r\n","import { FieldDto } from \"./field-dto\";\r\nimport { HeaderDto } from \"./header-dto\";\r\n\r\nexport class ColMapDto {\r\n    column : HeaderDto;\r\n    fields : FieldDto[];\r\n    selected : FieldDto;\r\n    displayField : string;\r\n    id : number;\r\n\r\n    constructor(values: Object = {}) {\r\n        Object.assign(this, values);\r\n    }\r\n\r\n}\r\n","import { AccountDto } from './account-dto';\r\nimport { BookDto } from './book-dto';\r\nimport { CurrencyDto } from './currency-dto';\r\nimport { Status } from '../Enums/status.enum';\r\nimport { RmsFieldMappingDto } from './rms-field-mapping-dto';\r\nimport { AssumptionsDto} from './assumptions-dto';\r\nimport { UserDto } from './user-dto';\r\n\r\nexport class ConversionFileDto\r\n{\r\n  accountName : string;\r\n  filePath : string;\r\n  \r\n  constructor(values: Object = {}) {\r\n    Object.assign(this, values);\r\n  }\r\n}\r\nexport class ConversionDto {\r\n\r\n    convId : number;\r\n    account : AccountDto;\r\n    file : string;\r\n    name : string;\r\n    bookId: number;\r\n    book : BookDto;\r\n    currencyId : number;\r\n    currency : CurrencyDto;\r\n    status : Status;\r\n    edit : boolean;\r\n    workSheetName : string;\r\n    saveConversion : boolean;\r\n    saveAccount : boolean;\r\n    rmsFieldMappingsDto : RmsFieldMappingDto[];\r\n    assumptions : AssumptionsDto[];\r\n    totalTiv : number;\r\n    user : UserDto;\r\n    zipPath : string;\r\n    geoCode : boolean;\r\n    hasLocations : boolean;\r\n\r\n    constructor(values: Object = {}) {\r\n        Object.assign(this, values);\r\n      }\r\n}\r\n","import {ClientDto} from './client-dto';\r\n\r\nexport class EncoderDto {\r\n\r\n    encoderId : number;\r\n\r\n    name : string;\r\n\r\n    defaultEncoder : boolean;\r\n\r\n    client : ClientDto;\r\n    constructor(values: Object = {}) {\r\n        Object.assign(this, values);\r\n    }\r\n}\r\n","import { AssumptionType} from '../Enums/assumption-type';\r\n\r\nexport class FieldDto {\r\n\r\n    fieldId : number;\r\n\r\n    name : string;\r\n\r\n    combination : boolean;\r\n\r\n    isMappingColumn : boolean;\r\n\r\n    rating : number;\r\n\r\n    assumptionType : AssumptionType;\r\n\r\n    constructor(values: Object = {}) {\r\n        Object.assign(this, values);\r\n    }\r\n}\r\n","export class LocUpdatesDto {\r\n    LocationId : number;\r\n\r\n    Value : string;\r\n\r\n    FieldId : number;\r\n\r\n    AddToLoadVals : boolean;\r\n\r\n    SegmentId : number;\r\n\r\n    constructor(values: Object = {}) {\r\n        Object.assign(this, values);\r\n      }\r\n}\r\n","import { FieldDto } from \"./field-dto\";\r\nimport { HeaderDto } from \"./header-dto\";\r\n\r\nexport class MapHeaderDto {\r\n\r\n    /*sprinklerInput : string\r\n\r\n    segmentId : number; */\r\n\r\n    header : HeaderDto;\r\n\r\n    fields : FieldDto[];\r\n\r\n    selected : FieldDto;\r\n\r\n    priority : number;\r\n\r\n    displayField : string;\r\n\r\n    colIdx : number;\r\n    id : number;\r\n    \r\n    constructor(values: Object = {}) {\r\n        Object.assign(this, values);\r\n    }\r\n}\r\n","import { FieldDto } from \"./field-dto\";\r\nimport {Severity} from \"../Enums/severity.enum\";\r\n\r\nexport class MappingValDto {\r\n\r\n    mappingValId : number;\r\n        \r\n    valText : string;\r\n\r\n    field : FieldDto;\r\n\r\n    warningType : Severity;\r\n\r\n    constructor(values: Object = {}) {\r\n        Object.assign(this, values);\r\n      }\r\n}\r\n","export class OccupancyLkpDto {\r\n\r\n    id : number;\r\n\r\n    scheme : string;\r\n\r\n    code : number;\r\n\r\n    name : string;\r\n\r\n    constructor(values: Object = {}) {\r\n        Object.assign(this, values);\r\n      }\r\n}","\r\nexport class PagingDto {\r\n\r\n    public RecFirst : number;\r\n    public RecLast : number;\r\n   \r\n    constructor(values: Object = {}) {\r\n        Object.assign(this, values);\r\n      }\r\n}\r\n","export class StrLookupDto {\r\n\r\n    Value : string;\r\n    Id : string;\r\n    constructor(values: Object = {}) {\r\n        Object.assign(this, values);\r\n    }\r\n}\r\n\r\nexport class LookupDto{\r\n    Id: number;\r\n    Value : string;\r\n\r\n    constructor(values: Object = {}) {\r\n        Object.assign(this, values);\r\n    }\r\n}\r\n\r\nexport class ComponentLkpDto {\r\n\r\n    Id : number;\r\n    WorkSheet : string;\r\n    ComponentId : number;\r\n    Value : string;\r\n    \r\n    constructor(values: Object = {}) {\r\n        Object.assign(this, values);\r\n    }\r\n}\r\n","import { FieldTypes } from \"../Enums/field-types\";\r\nimport { MatchedEnum } from \"../Enums/MatchedEnum\";\r\n\r\nexport class TestTerm {\r\n    testTermsId : number;\r\n    loadTypeId : FieldTypes;\r\n    terms : string;\r\n    answer : string;\r\n    answerId : number;\r\n    matched : MatchedEnum;\r\n    isAddedTerm : boolean;\r\n    \r\n    constructor(values: Object = {}) {\r\n        Object.assign(this, values);\r\n      }\r\n}\r\n","import { ClientDto } from \"./client-dto\";\r\nimport { UserTypeDto } from \"./user-type-dto\";\r\n\r\nexport class UserDto {\r\n    name : string;\r\n    userName : string;\r\n    pwd : string;\r\n    authData : string;\r\n    userId : number;\r\n    client : ClientDto;\r\n    userType : UserTypeDto;\r\n    \r\n    constructor(values: Object = {}) {\r\n        Object.assign(this, values);\r\n      }\r\n}\r\n\r\nexport class UserInfo{\r\n  UserId : string;\r\n  ConnectionId : string;\r\n\r\n  constructor(values: Object = {}) {\r\n    Object.assign(this, values);\r\n  }\r\n}\r\n","export class WorkSheetDto {\r\n    name : string;\r\n    \r\n    constructor(values: Object = {}) {\r\n        Object.assign(this, values);\r\n    }\r\n      \r\n}\r\n\r\n","export enum MatchedEnum {\r\n   True = 1,\r\n   False = 2,\r\n   Na = 3\r\n}","export enum FieldTypes {\r\n\r\n    Street = 9,\r\n    Occupancy = 24,\r\n    State = 17,\r\n    StCode = 2030,\r\n    BuildingClass = 18,\r\n    LocName = 6,\r\n    Country = 16,\r\n    CustomLocName = 600,\r\n    Reconcile = 700,\r\n    County = 2027,\r\n    Sprinkler = 21,\r\n    OccupancyInput = 240,\r\n    BuildingInput = 180\r\n}\r\n","export enum JoinTypeEnum {\r\n    Left = 1,\r\n    Right = 2,\r\n}\r\n","export enum SignalrMessageType {\r\n    None = 0,\r\n    Information = 1,\r\n    Error = 2,\r\n    Success = 3\r\n  }","export enum Severity {\r\n    Low = 1,\r\n    Medium = 2,\r\n    High = 3\r\n}\r\n","export enum Status {\r\n    Imported = 1,\r\n    InProgress = 2,\r\n    Failed = 3,\r\n    Complete = 4\r\n}\r\n","export enum ValueTypeEnum {\r\n    Street = 1,\r\n    State = 2\r\n}\r\n","import { OperationParam } from \"../Dtos/Cleansing/operation-param\";\r\n\r\nexport class AddOperationRequest {\r\n\r\n    OperationTypeId : number;\r\n    OperationsParam : OperationParam;\r\n    CleansedMgrId : number;\r\n    \r\n    constructor(values: Object = {}) {\r\n        Object.assign(this, values);\r\n      }\r\n}\r\n","export class AuthenticateRequest {\r\n\r\n    public UserName : string;\r\n    public Pwd : string;\r\n    constructor(values: Object = {}) {\r\n        Object.assign(this, values);\r\n      }\r\n}\r\n","export class ChangePwdRequest {\r\n\r\n    public UserId : number;\r\n    public Pwd : string;\r\n\r\n    constructor(values: Object = {}) {\r\n        Object.assign(this, values);\r\n      }\r\n}\r\n","import { UserDto } from \"../Dtos/user-dto\";\r\n\r\nexport class CleanseExportRequest {\r\n\r\n    public User : UserDto;\r\n    public CleanseMgrId : string;\r\n\r\n    constructor(values: Object = {}) {\r\n        Object.assign(this, values);\r\n      }\r\n}\r\n","export class CleanLoadRequest {\r\n\r\n  CleanseMgrId : number;\r\n  Show : boolean;\r\n  \r\n  constructor(values: Object = {}) {\r\n      Object.assign(this, values);\r\n    }\r\n}\r\n","import { FieldTypes } from \"../Enums/field-types\";\r\nimport { LoadValsDto } from \"../Dtos/load-vals-dto\";\r\nimport { TestTerm } from \"../Dtos/test-term\";\r\n\r\nexport class CommitRequest {\r\n    FieldType : FieldTypes;\r\n    Load : LoadValsDto;\r\n    UserId : number;\r\n    TestTerms : TestTerm[];\r\n    \r\n    constructor(values: Object = {}) {\r\n        Object.assign(this, values);\r\n      }\r\n}\r\n","import { ValueTypeEnum } from \"../Enums/value-type-enum\";\r\n\r\nexport class CommitValuesRequest {\r\n\r\n    ValueType : ValueTypeEnum;\r\n    ValueId : number;\r\n\r\n    constructor(values: Object = {}) {\r\n        Object.assign(this, values);\r\n      }\r\n}\r\n","export class CompareRequest {\r\n\r\n    public ProcessedFile : string;\r\n    public DroppedWs : string;\r\n    public ProcessedWs : string;\r\n    public AccountName : string;\r\n    public StartIdx : number;\r\n    \r\n    constructor(values: Object = {}) {\r\n        Object.assign(this, values);\r\n      }\r\n}\r\n","import { EncoderDto } from \"../Dtos/encoder-dto\";\r\n\r\nexport class CreateEncoderRequest {\r\n\r\n    public Encoder : EncoderDto;\r\n\r\n    public encoder : EncoderDto;\r\n\r\n    constructor(values: Object = {}) {\r\n        Object.assign(this, values);\r\n      }\r\n}\r\n","export class DeleteUserRequest {\r\n\r\n    UserId : number;\r\n\r\n    constructor(values: Object = {}) {\r\n        Object.assign(this, values);\r\n      }\r\n}\r\n","import { ValueTypeEnum } from \"../Enums/value-type-enum\";\r\n\r\nexport class DeleteValuesRequest {\r\n    ValueType : ValueTypeEnum;\r\n    ValueId : number;\r\n\r\n    constructor(values: Object = {}) {\r\n        Object.assign(this, values);\r\n      }\r\n}\r\n","export class GetWorkSheetsRequest{\r\n    CleanedFileName : string;\r\n\r\n    constructor(values: Object = {}) {\r\n        Object.assign(this, values);\r\n      }\r\n}\r\n","export class GetCleansedMgrRequest {\r\n    RecFirst : number;\r\n    RecLast : number;\r\n    UserId : number;\r\n    \r\n    constructor(values: Object = {}) {\r\n        Object.assign(this, values);\r\n      }\r\n}\r\n","import {LocUpdatesDto } from '../Dtos/loc-updates-dto';\r\nimport { SummaryDto } from '../Dtos/summary-dto';\r\n\r\nexport class LocUpdatesRequest \r\n{\r\n    ConvId : number;\r\n    LocationUpdates : LocUpdatesDto[];\r\n    SummaryDto : SummaryDto;\r\n\r\n    constructor(values: Object = {}) {\r\n        Object.assign(this, values);\r\n      }\r\n}\r\n","\r\nexport class ManagerRequest {\r\n\r\n  \r\n    Account    : string;\r\n    Status     : number[];\r\n    UserId     : number;\r\n    \r\n    constructor(values: Object = {}) {\r\n        Object.assign(this, values);\r\n      }\r\n}\r\n","import { Status } from '../Enums/status.enum';\r\n\r\nexport class NewCleansedRequest {\r\n\r\n    Status    : Status;\r\n    Name     :  string;\r\n    UserId     : number;\r\n    \r\n    constructor(values: Object = {}) {\r\n        Object.assign(this, values);\r\n      }\r\n}\r\n","export class PagingRequest {\r\n\r\n    public TypeId : number;\r\n    public Filters :string;\r\n    public Current : number;\r\n    public RecsPerPage : number;\r\n\r\n    constructor(values: Object = {}) {\r\n        Object.assign(this, values);\r\n      }\r\n}\r\n","export class ReplayRequest {\r\n    UserId : number;\r\n    CleanseMgrId : string;\r\n    CopyFromId : number;\r\n    \r\n    constructor(values: Object = {}) {\r\n        Object.assign(this, values);\r\n      }\r\n}\r\n","import { ColMapDto } from \"../Dtos/col-map-dto\";\r\nimport { ConversionDto } from \"../Dtos/conversion-dto\";\r\nimport { MapHeaderDto } from \"../Dtos/map-header-dto\";\r\n\r\nexport class SaveConversionMappingsRequest {\r\n\r\n    Mapped : MapHeaderDto[];\r\n    ConversionDto : ConversionDto;\r\n\r\n    constructor(values: Object = {}) {\r\n        Object.assign(this, values);\r\n      }\r\n}\r\n","import { FieldTypes } from \"../Enums/field-types\";\r\nimport { TestTerm } from \"../Dtos/test-term\";\r\nimport { LoadValsDto } from \"../Dtos/load-vals-dto\";\r\n\r\nexport class StageRequest {\r\n\r\n    FieldType : FieldTypes;\r\n    Terms   : TestTerm[];\r\n    Load : LoadValsDto;\r\n    UserId : number;\r\n    \r\n    constructor(values: Object = {}) {\r\n        Object.assign(this, values);\r\n      }\r\n}\r\n","import { SprinklerValsDto } from \"../Dtos/sprinkler-dto\";\r\n\r\nexport class UpdateSprinklerRequest {\r\n\r\n    SprinklerValue : SprinklerValsDto;\r\n\r\n    constructor(values: Object = {}) \r\n    {\r\n        Object.assign(this, values);\r\n    }\r\n}\r\n","import { ValueTypeEnum } from \"../Enums/value-type-enum\";\r\n\r\nexport class UpdateValueRequest {\r\n    ValueType : ValueTypeEnum;\r\n    Value : number;\r\n\r\n    constructor(values: Object = {}) {\r\n        Object.assign(this, values);\r\n      }\r\n}\r\n","export class ChkMessage{\r\n    LocId : number;\r\n    Checked : boolean;\r\n    \r\n    constructor(values: Object = {}) {\r\n        Object.assign(this, values);\r\n    }\r\n}","export class MapCriteria {\r\n\r\n    public LookupComponentId : number;\r\n    public MapIdx : number;\r\n    public ValueIdx : number;\r\n}\r\n","import { SignalrMessageType } from './Enums/message-type'\r\nexport class NotificationMessage {\r\n\r\n    body : string;\r\n    subject : string;\r\n    messages : string[] = [];\r\n    messageType : SignalrMessageType\r\n    \r\n    constructor(values: Object = {}) {\r\n        Object.assign(this, values);\r\n    }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({\r\n  name: 'toMatrix'\r\n})\r\nexport class ToMatrixPipe implements PipeTransform {\r\n\r\n  transform(arr: any[], n: number): number[][] {\r\n\r\n    if (!arr)\r\n    {\r\n      return null;\r\n    }\r\n    const rows = Array.from({ length: Math.ceil(arr.length / n) }, (_, i) => i);\r\n    var s =  rows.map(idx => arr.slice(idx * n, idx * n + n));\r\n\r\n    return s;\r\n  }\r\n\r\n}\r\n  \r\n","import { Injectable } from \"@angular/core\";\r\nimport { CanActivate, Router, ActivatedRouteSnapshot, RouterStateSnapshot } from \"@angular/router\";\r\nimport { AuthenticationService} from '../Data/authentication-service';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class AuthGuard implements CanActivate{\r\n\r\n    constructor(\r\n        private _router: Router,\r\n        private _authenticationService: AuthenticationService\r\n    ) { }\r\n\r\n    canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\r\n        const currentUser = this._authenticationService.currentUserValue;\r\n        if (currentUser) {\r\n            // logged in so return true\r\n           // this._authenticationService.logout();\r\n            return true;\r\n        }\r\n\r\n        // not logged in so redirect to login page with the return url\r\n        this._router.navigate(['/login'], { queryParams: { returnUrl: state.url } });\r\n        return false;\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { ConversionDto } from '../Models/Dtos/conversion-dto';\r\nimport { AuthenticationService } from '../Data/authentication-service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ConversionService {\r\n\r\n  private _conversion : ConversionDto;\r\n  private _file : File;\r\n  constructor(private _authenticationService : AuthenticationService) { }\r\n\r\n  public Set(conversion : ConversionDto)\r\n  {\r\n    this._conversion = conversion;\r\n    this._conversion.edit = true;\r\n  }\r\n\r\n  public SetFile(file : File)\r\n  {\r\n    this._file = file;\r\n  }\r\n\r\n  public Get()\r\n  {\r\n    var user = this._authenticationService.currentUserValue;\r\n    if (this._conversion == null)\r\n    {\r\n      this._conversion = new ConversionDto({ edit: false, User : user,convId :-99});\r\n    }\r\n    return this._conversion;\r\n  }\r\n}\r\n","import { Injectable, Output, EventEmitter, Directive } from '@angular/core';\r\nimport { ChkMessage } from '../Models/chk-message';\r\nimport { NotificationMessage } from '../Models/notification-message';\r\nimport { CompleteMessage, ProgressMessage } from '../Models/progress-message';\r\n\r\n@Directive()\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class MediatorService {\r\n\r\n  @Output() Notify : EventEmitter<NotificationMessage> = new EventEmitter();\r\n  @Output() ConvFailed : EventEmitter<NotificationMessage> = new EventEmitter();\r\n  @Output() Progressed : EventEmitter<ProgressMessage> = new EventEmitter();\r\n  @Output() Refresh : EventEmitter<NotificationMessage> = new EventEmitter();\r\n  @Output() Checked : EventEmitter<ChkMessage> = new EventEmitter();\r\n  @Output() Complete : EventEmitter<CompleteMessage> = new EventEmitter();\r\n\r\n  constructor() { }\r\n\r\n  Publish(message : NotificationMessage)\r\n  {\r\n    this.Notify.emit(message);\r\n  }\r\n\r\n  ConvFail(message : NotificationMessage)\r\n  {\r\n    this.ConvFailed.emit(message);\r\n  }\r\n  \r\n  ProgressSend(message : ProgressMessage)\r\n  {\r\n    this.Progressed.emit(message);\r\n  }\r\n\r\n  CompleteSend(message : CompleteMessage)\r\n  {\r\n    this.Complete.emit(message);\r\n  }\r\n}\r\n","import { Injectable, Output, EventEmitter, Directive } from \"@angular/core\";\r\nimport { Subject, Observable } from \"rxjs\";\r\n\r\n@Directive()\r\n@Injectable({ providedIn: 'root' })\r\nexport class MessageService {\r\n    @Output() Loading : EventEmitter<boolean> = new EventEmitter();\r\n    private subject = new Subject<any>();\r\n\r\n    sendMessage(message: string) {\r\n        this.subject.next({ text: message });\r\n    }\r\n\r\n    clearMessages() {\r\n        this.subject.next();\r\n    }\r\n\r\n    getMessage(): Observable<any> {\r\n        return this.subject.asObservable();\r\n    }\r\n\r\n    LoadingMsg(status : boolean)\r\n    {\r\n        this.Loading.emit(status);\r\n    }\r\n}\r\n","import { Directive, Injectable } from \"@angular/core\";\r\nimport { NotificationMessage } from \"../Models/notification-message\";\r\nimport {Subject} from \"rxjs\";\r\nimport { HubConnectionBuilder, LogLevel } from \"@microsoft/signalr\";\r\nimport { environment } from \"../../environments/environment\";\r\nimport { UserInfo } from \"../Models/Dtos/user-dto\";\r\nimport { CompleteMessage, ProgressMessage } from \"../Models/progress-message\";\r\n\r\n@Directive()\r\n@Injectable({\r\n    providedIn: 'root',\r\n})\r\nexport class SignalRService {\r\n\r\n    message = new Subject<NotificationMessage>();\r\n    failMsg = new Subject<NotificationMessage>();\r\n    progressMsg = new Subject<ProgressMessage>();\r\n    completeMsg = new Subject<CompleteMessage>();\r\n    private _connection : any;\r\n\r\n    connect(userName : string) {\r\n\r\n        var url: string;\r\n        url = environment.signalrUrl;\r\n\r\n        this._connection = new HubConnectionBuilder()\r\n        .configureLogging(LogLevel.Information)\r\n\t    .withAutomaticReconnect()\r\n        .withUrl(url)\r\n        .build();\r\n\r\n        this._connection.start()\r\n        .catch(err => \r\n        {\r\n           console.error(err);\r\n  \r\n           this.register(userName);\r\n        })\r\n           .then(()=>{\r\n              this.register(userName);\r\n        });\r\n    }\r\n\r\n\r\n\r\n    RegisterForSignalr()\r\n    {\r\n        this._connection.on(\"ProcessMessage\", (message: NotificationMessage)=>\r\n        {\r\n         this.message.next(message);\r\n        });\r\n\r\n        this._connection.on(\"FailConversion\", (message: NotificationMessage)=>\r\n        {\r\n         this.failMsg.next(message);\r\n        });\r\n\r\n        this._connection.on(\"ProgressMessage\", (message: ProgressMessage)=>\r\n        {\r\n         this.progressMsg.next(message);\r\n        });\r\n\r\n        this._connection.on(\"CompleteMessage\", (message: CompleteMessage)=>\r\n        {\r\n         this.completeMsg.next(message);\r\n        });\r\n    }\r\n\r\n    private register(userName: string)\r\n    {\r\n        var parameter = new UserInfo();\r\n        parameter.UserId = userName;\r\n\r\n        this._connection.invoke('RegisterUser', parameter); //register user with signalr \r\n    }\r\n}\r\n\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-main',\r\n  templateUrl: './main.component.html',\r\n  styleUrls: ['./main.component.css']\r\n})\r\nexport class MainComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<p>main works!</p>\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\n\r\nconst routes: Routes = [];\r\n\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Subscription } from 'rxjs';\r\nimport { AuthenticationService } from './Data/authentication-service';\r\nimport { UserDto } from './Models/Dtos/user-dto';\r\nimport { MediatorService } from './Services/mediator.service';\r\nimport { SignalRService } from './Services/signal-rservice';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent implements OnInit {\r\n  title = 'MorphUi';\r\n\r\n  User : UserDto;\r\n  messageSubscription: Subscription;\r\n  convFailSubscription : Subscription;\r\n  progressSubscription : Subscription;\r\n  completeSubscription : Subscription;\r\n \r\n  constructor(private _mediatorService: MediatorService,\r\n    private _authenticationService : AuthenticationService,\r\n    private _signalrService : SignalRService\r\n  ) {\r\n\r\n   }\r\n\r\n  ngOnInit() {\r\n\r\n    this.RefreshUser();\r\n    this.initSignalr();\r\n\r\n  }\r\n\r\n   RefreshUser()\r\n  {\r\n    this.User = this._authenticationService.currentUserValue;\r\n  }\r\n  \r\n  initSignalr() {\r\n\r\n    this.User = this._authenticationService.currentUserValue;\r\n    this._signalrService.connect(this.User.userName);\r\n    this._signalrService.RegisterForSignalr();\r\n    this.messageSubscription = this._signalrService.message.subscribe(msg => {  \r\n      this._mediatorService.Publish(msg);\r\n    });\r\n\r\n    this.convFailSubscription = this._signalrService.failMsg.subscribe(msg => {  \r\n\r\n      this._mediatorService.ConvFail(msg);\r\n      this._mediatorService.Publish(msg);\r\n    });\r\n\r\n    this.progressSubscription = this._signalrService.progressMsg.subscribe(msg => {  \r\n  \r\n      this._mediatorService.ProgressSend(msg);\r\n\r\n    });\r\n\r\n    this.completeSubscription = this._signalrService.completeMsg.subscribe(msg => {  \r\n  \r\n      debugger;\r\n      this._mediatorService.CompleteSend(msg);\r\n\r\n    });\r\n\r\n   \r\n  }\r\n}\r\n\r\n\r\n","<!DOCTYPE html>\r\n<html lang=\"en\">\r\n\r\n<head>\r\n  <meta charset=\"utf-8\">\r\n  <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\r\n  <meta http-equiv=\"Content-Security-Policy\" content=\"default-src *;style-src 'self' http://* 'unsafe-inline'; script-src 'self' http://* 'unsafe-inline' 'unsafe-eval'\" />\r\n\r\n  <title>MorphUi</title>\r\n  <!-- <script src=\"https://code.jquery.com/jquery-1.12.0.min.js\"></script> -->\r\n  <!-- Bootstrap Js CDN -->\r\n  <!-- <script src=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js\"></script> -->\r\n  <script src=\"https://cdnjs.cloudflare.com/ajax/libs/es6-shim/0.33.3/es6-shim.min.js\"></script>\r\n  <script src=\"https://cdnjs.cloudflare.com/ajax/libs/systemjs/0.19.20/system-polyfills.js\"></script>\r\n  <script src=\"https://npmcdn.com/angular2/es6/dev/src/testing/shims_for_IE.js\"></script>\r\n  <script src=\"https://npmcdn.com/angular2@2.0.0-beta.17/es6/dev/src/testing/shims_for_IE.js\"></script>\r\n\r\n  <link href=\"https://fonts.googleapis.com/css?family=Montserrat:400,700\" rel=\"stylesheet\" type=\"text/css\">\r\n  <link href='https://fonts.googleapis.com/css?family=Kaushan+Script' rel='stylesheet' type='text/css'>\r\n  <link href='https://fonts.googleapis.com/css?family=Droid+Serif:400,700,400italic,700italic' rel='stylesheet' type='text/css'>\r\n  <link href='https://fonts.googleapis.com/css?family=Roboto+Slab:400,100,300,700' rel='stylesheet' type='text/css'>\r\n</head>\r\n\r\n<div class=\"wrapper\">\r\n  <div id=\"content\" class=\"content\">\r\n\r\n    <div class=\"container-fluid\">\r\n     \r\n\r\n      <app-top></app-top>\r\n      <router-outlet></router-outlet>\r\n    </div>\r\n\r\n  </div>\r\n</div>","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { AuthGuard} from './Services/auth-guard';\r\nimport { CheckBoxCellComponent } from '../app/AgGrid/checkbox-cell-component';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { TopComponent } from './components/top/top.component';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { ManagerComponent } from './components/manager/manager.component';\r\nimport { ImportComponent } from './components/import/import.component';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { ManagerBl } from './Bl/manager-bl';\r\nimport { ManagerService } from './Data/manager.service';\r\nimport { MediatorService } from './Services/mediator.service';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { NgbModule, NgbDateParserFormatter,NgbProgressbarModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { NumberPickerModule } from 'ng-number-picker';\r\nimport { ToastrModule } from 'ngx-toastr';\r\nimport { ConversionService } from './Services/conversion.service';\r\nimport { NgxFileDropModule} from 'ngx-file-drop'\r\nimport { NgSelectModule } from '@ng-select/ng-select';\r\nimport { LookupService } from './Data/lookupservice';\r\nimport { LookupBl } from './Bl/lookup-bl';\r\nimport { MappingComponent } from './components/mapping/mapping.component';\r\nimport { ToMatrixPipe } from './Pipes/to-matrix.pipe';\r\nimport { NgbDateFormatter } from './Format/ngb-date-parser-formatter';\r\nimport { LocationsComponent } from './components/wizard/locations/locations.component';\r\nimport { SidebarModule } from 'ng-sidebar';\r\nimport { LocationService } from './Data/location-service';\r\nimport { LocationBl } from './Bl/location-bl';\r\nimport { AgGridModule } from 'ag-grid-angular';\r\nimport { AssumptionsComponent } from './components/wizard/assumptions/assumptions.component';\r\nimport { StateEditorComponent } from './AgGrid/CellEditors/state-editor/state-editor.component';\r\nimport { ToastMsgComponent } from './components/toast-msg/toast-msg.component';\r\nimport { BarComponent } from './components/bar/bar.component';\r\nimport { CompareComponent } from './components/compare/compare.component';\r\nimport { CompareService } from './Data/compare-service';\r\nimport { CompareBl } from './Bl/comparebl';\r\nimport { LoginComponent } from './components/login/login.component';\r\nimport { ChangePwdComponent } from './components/change-pwd/change-pwd.component';\r\nimport { UsersComponent } from './components/Admin/users/users.component';\r\nimport { MiComponent } from './components/Admin/mi/mi.component';\r\nimport { MaintenanceBl } from './Bl/maintenance-bl';\r\nimport { MaintenanceService } from './Data/maintenance-service';\r\nimport { RouterLinkComponent } from './AgGrid/router-link/router-link.component';\r\nimport { TxtDisFilterComponent } from './AgGrid/Filters/txt-dis-filter/txt-dis-filter.component';\r\nimport { NgMultiSelectDropDownModule } from 'ng-multiselect-dropdown';\r\nimport { MappingNewComponent } from './components/mapping-new/mapping-new.component';\r\nimport { NumericCtrlComponent } from './components/Ctrls/numeric-ctrl/numeric-ctrl.component';\r\nimport { RouterLinkTwoComponent } from './AgGrid/router-link-two/router-link-two.component';\r\nimport { ChangedValuesComponent } from './components/Admin/changed-values/changed-values.component';\r\nimport { BtnRenderComponent } from './AgGrid/btn-render/btn-render.component';\r\nimport { AdminValuesBl } from './Bl/admin-values-bl';\r\nimport { AdminValuesService } from './Data/admin-values-service';\r\nimport { CleanseComponent } from './components/cleanse/cleanse.component';\r\nimport { CleansingBl } from './Bl/cleansing-bl';\r\nimport { CleansingService } from './Data/cleansing-service';\r\nimport { FileUploadModule } from 'ng2-file-upload';\r\nimport { CleanseMgrComponent } from './components/cleanse-mgr/cleanse-mgr.component';\r\nimport { PagerComponent } from './components/pager/pager.component';\r\n//import { GuiGridModule } from '@generic-ui/ngx-grid';\r\nimport {MatMenuModule} from '@angular/material/menu';\r\nimport { ContextMenuComponent } from './components/context-menu/context-menu.component';\r\nimport { JoinComponent } from './components/Ctrls/Cleansing/Component/join/join.component';\r\nimport { MapLkpComponent } from './components/Ctrls/Cleansing/map-lkp/map-lkp.component';\r\nimport { MainComponent } from './SmartyPants/main/main.component'; \r\nimport { SignalRService } from './Services/signal-rservice';\r\nimport { EncodersComponent } from './components/Templates/encoders/encoders.component';\r\nimport { ViewEncodersComponent } from './components/Templates/view-encoders/view-encoders.component';\r\n\r\nconst appRoutes: Routes = [\r\n  { path: 'manager',\r\n    pathMatch: 'full',\r\n    component : ManagerComponent,\r\n    canActivate: [AuthGuard] \r\n  },\r\n  {\r\n    path: 'smarty',\r\n    pathMatch: 'full',\r\n    component: MainComponent,\r\n    canActivate: [AuthGuard]\r\n  },\r\n  { path: '',\r\n    pathMatch: 'full',\r\n    component : ManagerComponent,\r\n    canActivate: [AuthGuard] \r\n  },\r\n  { path: 'cleanse',\r\n  pathMatch: 'full',\r\n  component : CleanseMgrComponent,\r\n  canActivate: [AuthGuard] \r\n  },\r\n  { path: 'clean/:id',\r\n  pathMatch: 'full',\r\n  component : CleanseComponent,\r\n  canActivate: [AuthGuard] \r\n  },\r\n  { path: 'import',\r\n  pathMatch: 'full',\r\n  component : ImportComponent,\r\n  canActivate: [AuthGuard] \r\n  },\r\n  { path: 'mapping',\r\n    pathMatch: 'full',\r\n    component : MappingComponent,\r\n    canActivate: [AuthGuard] \r\n  },\r\n  { path: 'mappingNew',\r\n    pathMatch: 'full',\r\n    component : MappingNewComponent,\r\n    canActivate: [AuthGuard] \r\n  },\r\n  { path: 'users',\r\n    pathMatch: 'full',\r\n    component : UsersComponent,\r\n    canActivate: [AuthGuard] \r\n  },\r\n  { path: 'locations',\r\n    pathMatch: 'full',\r\n    component : LocationsComponent,\r\n    canActivate: [AuthGuard] \r\n  },\r\n  { path: 'mi',\r\n    pathMatch: 'full',\r\n    component : MiComponent,\r\n    canActivate: [AuthGuard] \r\n  },\r\n  {\r\n    path: 'changed',\r\n    pathMatch: 'full',\r\n    component : ChangedValuesComponent,\r\n    canActivate: [AuthGuard]\r\n  },\r\n  { path: 'compare',\r\n    pathMatch: 'full',\r\n    component : CompareComponent,\r\n    canActivate: [AuthGuard] \r\n  },\r\n  { path: 'changePwd',\r\n    pathMatch: 'full',\r\n    component : ChangePwdComponent\r\n  },\r\n  { path: 'viewEncoders',\r\n    pathMatch: 'full',\r\n    component : ViewEncodersComponent\r\n  },\r\n  { path: 'Encoder/:id',\r\n    pathMatch: 'full',\r\n    component : EncodersComponent\r\n  },\r\n  { path: 'login',\r\n    pathMatch: 'full',\r\n    component : LoginComponent\r\n}];\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    TopComponent,\r\n    ManagerComponent,\r\n    ImportComponent,\r\n    MappingComponent,\r\n    ToMatrixPipe,\r\n    LocationsComponent,\r\n    AssumptionsComponent,\r\n    StateEditorComponent,\r\n    StateEditorComponent,\r\n    ToastMsgComponent,\r\n    BarComponent,\r\n    CompareComponent,\r\n    LoginComponent,\r\n    ChangePwdComponent,\r\n    UsersComponent,\r\n    MiComponent,\r\n    CheckBoxCellComponent,\r\n    RouterLinkComponent,\r\n    TxtDisFilterComponent,\r\n    MappingNewComponent,\r\n    NumericCtrlComponent,\r\n    RouterLinkTwoComponent,\r\n    ChangedValuesComponent,\r\n    BtnRenderComponent,\r\n    CleanseComponent,\r\n    CleanseMgrComponent,\r\n    PagerComponent,\r\n    ContextMenuComponent,\r\n    JoinComponent,\r\n    MapLkpComponent,\r\n    MainComponent,\r\n    EncodersComponent,\r\n    ViewEncodersComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    RouterModule.forRoot( appRoutes ),\r\n    FormsModule,\r\n    BrowserAnimationsModule, // required animations module\r\n    NgbModule,\r\n    NgxFileDropModule,\r\n    ReactiveFormsModule,\r\n    NgSelectModule,\r\n    NgbProgressbarModule,\r\n    AgGridModule.withComponents([StateEditorComponent,BtnRenderComponent, RouterLinkComponent,TxtDisFilterComponent,RouterLinkTwoComponent]),\r\n    // ToastrModule.forRoot({timeOut: 30000,\r\n    //   positionClass: 'toast-top-full-width'\r\n    // }), \r\n    ToastrModule.forRoot({\r\n      toastComponent: ToastMsgComponent,positionClass: 'toast-top-full-width', timeOut:2500\r\n    }), \r\n    FileUploadModule,\r\n    \r\n    // ToastrModule added\r\n  //   NgProgressModule.withConfig({\r\n  //     thick:false,\r\n  //    ease:'linear',\r\n  //    color: \"#fed136\",\r\n  //   min:0.15,\r\n  //     max:100,\r\n  //    speed: 400,\r\n  //  spinner: false,\r\n  //   direction:'ltr+'\r\n  //    ,trickleSpeed:900,\r\n  //   fixed:true,\r\n      \r\n\r\n   //}),\r\n  // NgProgressModule,\r\n    SidebarModule.forRoot(),\r\n    HttpClientModule,\r\n    NgMultiSelectDropDownModule.forRoot(),\r\n    NumberPickerModule,\r\n    MatMenuModule\r\n    //uiGridModule\r\n  ],\r\n  providers: [CleansingBl, SignalRService, CleansingService, MaintenanceService,MaintenanceBl,MediatorService,ManagerService,AdminValuesService, AdminValuesBl, CompareService,CompareBl,ManagerBl,ConversionService,LookupService,LookupBl,LocationService,LocationBl,\r\n    {provide: NgbDateParserFormatter, useClass: NgbDateFormatter}],\r\n  bootstrap: [AppComponent],\r\n  entryComponents: [ToastMsgComponent,CheckBoxCellComponent],\r\n  exports :[BrowserModule, RouterModule, MatMenuModule]\r\n})\r\nexport class AppModule { }\r\n","import { Injectable } from \"@angular/core\";\r\nimport { Userservice} from '../Data/userservice';\r\nimport { GetAllUsersResponse } from \"../Models/Response/get-all-users-response\";\r\nimport * as CryptoJS from '../../../node_modules/crypto-js'; \r\nimport { environment } from \"../../environments/environment\";\r\nimport { ChangePwdRequest } from \"../Models/Requests/change-pwd-request\";\r\nimport { UserDto } from \"../Models/Dtos/user-dto\";\r\nimport { DeleteUserRequest } from \"../Models/Requests/delete-user-request\";\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n  })\r\nexport class UserBl {\r\n    constructor(private _userService : Userservice) {}\r\n\r\n    public async Get(userId : number) : Promise<GetAllUsersResponse>\r\n    {\r\n        var response = await this._userService.Get(userId);\r\n\r\n        return response;\r\n    }\r\n\r\n    public async ChangePwd(userId : number)\r\n    {\r\n        var encrypted = this.DefaultPwd();\r\n        var request = new ChangePwdRequest({ Pwd : encrypted, UserId : userId });\r\n        await this._userService.ChangePwd(request);\r\n    }\r\n\r\n    public async Delete(userId : number)\r\n    {\r\n        var request = new DeleteUserRequest({UserId : userId});\r\n\r\n        await this._userService.DeleteUser(request);\r\n    }\r\n\r\n\r\n    public async Save(user: UserDto, add : boolean)\r\n    {\r\n        if (add)\r\n            user.pwd = this.DefaultPwd()\r\n\r\n        await this._userService.Save(user);\r\n    }\r\n\r\n    private DefaultPwd()\r\n    {\r\n        var key = CryptoJS.enc.Hex.parse(environment.encryptKey);\r\n        var defaultPwd = environment.defaultPwd;\r\n        var iv = CryptoJS.enc.Hex.parse(environment.iv);\r\n\r\n        var encrypted = CryptoJS.AES.encrypt(defaultPwd, key, {iv: iv, padding: CryptoJS.pad.NoPadding}).toString();\r\n        \r\n        return encrypted;\r\n        \r\n    }\r\n}\r\n","<ng-template #confirmSprinklerTemplate let-modal>\r\n    <div class=\"modal-header bg-dark modal-lg\">\r\n      <h4 class=\"modal-title modalTitle\" id=\"modal-basic-title\">Delete Sprinkler Value</h4>\r\n      <button type=\"button\" class=\"close modalClose\" aria-label=\"Close\" (click)=\"modal.dismiss('Cross click')\">\r\n        <span aria-hidden=\"true\">×</span>\r\n      </button>\r\n    </div>\r\n    \r\n    <div class=\"modal-body\">\r\n\r\n        <div class=\"row padTxtTop\">\r\n            <div class=\"col-sm-12\">\r\n              Are you sure you wish to delete the Sprinkler Value?\r\n            </div>\r\n        </div>\r\n      <div class=\"row padTxtTop margTop\">\r\n        <div class=\"col-sm-3\">\r\n          <button class=\"btn-sm btn-success btn-outline-rounded btn-info\"  (click)=\"ConfirmSprinkler()\"> Confirm </button>\r\n        </div>\r\n\r\n        <div class=\"col-sm-3\">\r\n          <button class=\"btn-sm btn-success btn-outline-rounded btn-info\" (click)=\"Cancel()\">Cancel</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n</ng-template>\r\n\r\n<ng-template #confirmSprinklerCommitTemplate let-modal>\r\n    <div class=\"modal-header bg-dark modal-lg\">\r\n      <h4 class=\"modal-title modalTitle\" id=\"modal-basic-title\">Commit Sprinkler Value</h4>\r\n      <button type=\"button\" class=\"close modalClose\" aria-label=\"Close\" (click)=\"modal.dismiss('Cross click')\">\r\n        <span aria-hidden=\"true\">×</span>\r\n      </button>\r\n    </div>\r\n    <div class=\"modal-body\">\r\n\r\n        <div class=\"row padTxtTop\">\r\n            <div class=\"col-sm-12\">\r\n              Are you sure you wish to commit the Sprinkler Value?\r\n            </div>\r\n        </div>\r\n      <div class=\"row padTxtTop margTop\">\r\n        <div class=\"col-sm-3\">\r\n          <button class=\"btn-sm btn-success btn-outline-rounded btn-info\"  (click)=\"SprinklerCommit()\">Commit</button>\r\n        </div>\r\n\r\n        <div class=\"col-sm-3\">\r\n          <button class=\"btn-sm btn-success btn-outline-rounded btn-info\" (click)=\"Cancel()\">Cancel</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n</ng-template>\r\n\r\n<ng-template #confirmValuesTemplate let-modal>\r\n    <div class=\"modal-header bg-dark modal-lg\">\r\n      <h4 class=\"modal-title modalTitle\" id=\"modal-basic-title\">Delete {{ValueType['value']}} Value</h4>\r\n      <button type=\"button\" class=\"close modalClose\" aria-label=\"Close\" (click)=\"modal.dismiss('Cross click')\">\r\n        <span aria-hidden=\"true\">×</span>\r\n      </button>\r\n    </div>\r\n    <div class=\"modal-body\">\r\n\r\n        <div class=\"row padTxtTop\">\r\n            <div class=\"col-sm-12\">\r\n              Are you sure you wish to delete the {{ValueType}} Value?\r\n            </div>\r\n        </div>\r\n      <div class=\"row padTxtTop margTop\">\r\n        <div class=\"col-sm-3\">\r\n          <button class=\"btn-sm btn-success btn-outline-rounded btn-info\"  (click)=\"ConfirmValues()\"> Confirm </button>\r\n        </div>\r\n\r\n        <div class=\"col-sm-3\">\r\n          <button class=\"btn-sm btn-success btn-outline-rounded btn-info\" (click)=\"Cancel()\">Cancel</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n</ng-template>\r\n\r\n<ng-template #confirmValuesCommitTemplate let-modal>\r\n    <div class=\"modal-header bg-dark modal-lg\">\r\n      <h4 class=\"modal-title modalTitle\" id=\"modal-basic-title\">Commit {{ValueType['value']}} Value</h4>\r\n      <button type=\"button\" class=\"close modalClose\" aria-label=\"Close\" (click)=\"modal.dismiss('Cross click')\">\r\n        <span aria-hidden=\"true\">×</span>\r\n      </button>\r\n    </div>\r\n    <div class=\"modal-body\">\r\n\r\n        <div class=\"row padTxtTop\">\r\n            <div class=\"col-sm-12\">\r\n              Are you sure you wish to commit the {{ValueType}} Value?\r\n            </div>\r\n        </div>\r\n      <div class=\"row padTxtTop margTop\">\r\n        <div class=\"col-sm-3\">\r\n          <button class=\"btn-sm btn-success btn-outline-rounded btn-info\"  (click)=\"CommitValues()\"> Commit </button>\r\n        </div>\r\n\r\n        <div class=\"col-sm-3\">\r\n          <button class=\"btn-sm btn-success btn-outline-rounded btn-info\" (click)=\"Cancel()\">Cancel</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n</ng-template>\r\n\r\n<ng-template #sprinklerTemplate let-modal>\r\n    <div class=\"modal-header bg-dark\">\r\n        <h4 class=\"modal-title modalTitle\" id=\"modal-basic-title\">Sprinkler Update</h4>\r\n        <button type=\"button\" class=\"close modalClose\" aria-label=\"Close\" (click)=\"modal.dismiss('Cross click')\">\r\n            <span aria-hidden=\"true\">×</span>\r\n          </button>\r\n    </div>\r\n    <div class=\"modal-body\">\r\n        <div class=\"row\">\r\n            <div class=\"col-sm-1\">\r\n                Text\r\n            </div>\r\n            <div class=\"col-sm-4\">\r\n                <input type=\"text\" class=\"form-control\" [(ngModel)]=\"SelectedSprinkler.text\" />\r\n            </div>\r\n            <div class=\"col-sm-1\">\r\n                Type\r\n            </div>\r\n            <div class=\"col-sm-4 cmbSize\">\r\n              <ng-select class=\"selectStyle cmbSize\"\r\n              [items]=\"SprinklerTypes\"\r\n              class=\"cmbWidth\"\r\n              bindLabel=\"text\"\r\n              [(ngModel)]=\"SelectedSprinkler.sprinklerValue.sprinklerId\"\r\n              placeholder=\"Please select a Sprinkler Type\"\r\n              bindValue=\"id\"\r\n              clearable=\"true\"\r\n              name=\"sprinklerTypeLookup\"\r\n              clearAllText=\"Clear\">\r\n              </ng-select>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class=\"modal-footer\">\r\n        <button type=\"button\" class=\"btn btn btn-info btn-sm\" (click)=\"UpdateSprinklerRecord()\">Update</button>\r\n    \r\n        <button type=\"button\" class=\"btn btn btn-info btn-sm\" (click)=\"modal.close('Save click')\">Close</button>\r\n    </div>\r\n</ng-template>\r\n\r\n<ng-template #valueTemplate let-modal>\r\n    <div class=\"modal-header bg-dark\">\r\n        <h4 class=\"modal-title modalTitle\" id=\"modal-basic-title\">Values Update</h4>\r\n        <button type=\"button\" class=\"close modalClose\" aria-label=\"Close\" (click)=\"modal.dismiss('Cross click')\">\r\n            <span aria-hidden=\"true\">×</span>\r\n          </button>\r\n    </div>\r\n    <div class=\"modal-body\">\r\n        <div class=\"row\">\r\n            <div class=\"col-sm-1\">\r\n                Value\r\n            </div>\r\n            <div class=\"col-sm-4\">\r\n                <input type=\"text\" class=\"form-control\" [(ngModel)]=\"SelectedValue.originalValue\" />\r\n            </div>\r\n            <div class=\"col-sm-2\">\r\n                Replace With\r\n            </div>\r\n            <div class=\"col-sm-4\">\r\n                <input type=\"text\" class=\"form-control\" [(ngModel)]=\"SelectedValue.replacementValue\" />\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class=\"modal-footer\">\r\n        <button type=\"button\" class=\"btn btn btn-info btn-sm\" (click)=\"UpdateValueRecord()\">Update</button>\r\n    \r\n        <button type=\"button\" class=\"btn btn btn-info btn-sm\" (click)=\"modal.close('Save click')\">Close</button>\r\n    </div>\r\n</ng-template>\r\n\r\n<div class=\"sectionHeader\">\r\n    <div class=\"sectionContent sectionTop\">\r\n        <nav class=\"navLeft\">\r\n          <div class=\"nav nav-tabs\" id=\"nav-tab\" role=\"tablist\">\r\n            <button class=\"active nav-link active\" id=\"sprinkler-tab\" data-toggle=\"tab\" href=\"#sprinkler\">Sprinkler</button>\r\n            <button class=\"nav-link\" id=\"state-tab\" data-toggle=\"tab\" href=\"#state\">State</button>\r\n            <button class=\"nav-link\" id=\"street-tab\" data-toggle=\"tab\" href=\"#street\">Street</button>\r\n          \r\n             </div>\r\n        </nav>\r\n        <div class=\"tab-content clearfix\">\r\n            <div class=\"tab-pane active\" id=\"sprinkler\">\r\n                <div class=\"row lnHeight tblMargin margBtm\">\r\n                    <ag-grid-angular\r\n                        style=\"width: 692px;\"\r\n                        class=\"ag-theme-balham marg\"\r\n                        [rowData]=\"SprinklerValues\"\r\n                        [columnDefs]=\"SprinklerColumnDefs\"\r\n                        [gridOptions]=\"SprinklerOptions\"\r\n                        (gridReady)=\"onSprinklerGridReady($event)\"              \r\n                        [rowSelection]=\"RowSelection\">\r\n                    </ag-grid-angular>\r\n                </div>\r\n            </div>\r\n\r\n            <div class=\"tab-pane\" id=\"state\" >\r\n                <div class=\"row lnHeight tblMargin margBtm\">\r\n                <ag-grid-angular\r\n                    style=\"width: 832px;height:500px\"\r\n                    class=\"ag-theme-balham marg\"\r\n                    [rowData]=\"StateValues\"\r\n                    [columnDefs]=\"StateColumnDefs\" \r\n                    [gridOptions]=\"StateOptions\"\r\n                    (gridReady)=\"onStateGridReady($event)\"              \r\n                    [rowSelection]=\"RowSelection\">\r\n                </ag-grid-angular>\r\n            </div>\r\n            </div>\r\n            <div class=\"tab-pane\" id=\"street\" >\r\n            <div class=\"row lnHeight tblMargin margBtm\">\r\n            <ag-grid-angular\r\n                style=\"width: 832px;height:500px\"\r\n                class=\"ag-theme-balham marg\"\r\n                [rowData]=\"StreetValues\"\r\n                [columnDefs]=\"StreetColumnDefs\"\r\n                [gridOptions]=\"StreetOptions\"\r\n                (gridReady)=\"onStreetGridReady($event)\"               \r\n                [rowSelection]=\"RowSelection\">\r\n            </ag-grid-angular>\r\n        </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n","import { Component, OnInit, TemplateRef, ViewChild } from '@angular/core';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { GridOptions } from 'ag-grid-community';\r\nimport { BtnRenderComponent } from 'src/app/AgGrid/btn-render/btn-render.component';\r\nimport { AdminValuesBl } from 'src/app/Bl/admin-values-bl';\r\nimport { SprinklerTypeDto } from 'src/app/Models/Dtos/LkpSprinkler';\r\nimport { SprinklerDto, SprinklerValsDto } from 'src/app/Models/Dtos/sprinkler-dto';\r\nimport { ValDto } from 'src/app/Models/Dtos/state-dto';\r\nimport { ValueTypeEnum } from 'src/app/Models/Enums/value-type-enum';\r\nimport { MessageService } from 'src/app/Services/message-service';\r\n\r\n@Component({\r\n  selector: 'app-changed-values',\r\n  templateUrl: './changed-values.component.html',\r\n  styleUrls: ['./changed-values.component.css']\r\n})\r\nexport class ChangedValuesComponent implements OnInit {\r\n\r\n  @ViewChild('confirmSprinklerTemplate',{static: true}) confirmSprinklerElement : TemplateRef<any>;\r\n  \r\n  @ViewChild('confirmSprinklerCommitTemplate',{static: true}) confirmSprinklerCommitElement : TemplateRef<any>;\r\n  \r\n\r\n  @ViewChild('confirmValuesCommitTemplate',{static: true}) confirmValuesCommitElement : TemplateRef<any>;\r\n  @ViewChild('confirmValuesTemplate',{static: true}) confirmValuesElement : TemplateRef<any>;\r\n\r\n  @ViewChild('sprinklerTemplate',{static: true}) sprinklerElement : TemplateRef<any>;\r\n\r\n  @ViewChild('valueTemplate',{static: true}) valueElement : TemplateRef<any>;\r\n\r\n  public SprinklerValues : SprinklerValsDto[];\r\n  public SelectedSprinkler : SprinklerValsDto;\r\n  public SelectedValue : ValDto;\r\n  public StateValues : ValDto[];\r\n  public StreetValues : ValDto[];\r\n  public SprinklerOptions:GridOptions;\r\n  public StreetOptions:GridOptions;\r\n  public StateOptions:GridOptions;\r\n  private _gridApi;\r\n  private _streetGridApi;\r\n  private _stateGridApi;\r\n  private _selectedValuesId : number;\r\n  public SprinklerTypes: SprinklerTypeDto[];\r\n  public ValueType : ValueTypeEnum;\r\n  public RowSelection : string = 'single';\r\n\r\n  public SprinklerColumnDefs = [\r\n    {\r\n      headerName: 'Text', field: 'text', width:250, headerClass:'ag-custom-header' \r\n    },\r\n    { headerName: 'Sprinkler Type', field: 'sprinklerValue.value' , width:110,headerClass:'ag-custom-header',\r\n    resizable: true \r\n    },\r\n    {headerName: '', field: 'sprinklerValsId', width:110, headerClass:'ag-custom-header', \r\n    resizable: true, cellRendererFramework: BtnRenderComponent,\r\n    cellRendererParams: {\r\n      onClick: function(data : any)\r\n      {\r\n        this.SelectedSprinkler = data;\r\n        this.ConfirmSprinklerCommit();\r\n      }.bind(this),\r\n      label: 'Commit'\r\n    }},\r\n    {headerName: '', field: 'sprinklerValsId', width:110, headerClass:'ag-custom-header', \r\n    resizable: true, cellRendererFramework: BtnRenderComponent,\r\n    cellRendererParams: {\r\n      onClick: function(data : any)\r\n      {\r\n        this.SelectedSprinkler = data;\r\n        this.UpdateSprinkler();\r\n      }.bind(this),\r\n      label: 'Update'\r\n    }},\r\n    {headerName: '', field: 'sprinklerValsId', width:110, headerClass:'ag-custom-header', \r\n    resizable: true, cellRendererFramework: BtnRenderComponent,\r\n    cellRendererParams: {\r\n      onClick: function(data : any)\r\n      {\r\n        this.SelectedSprinkler = data;\r\n        this.ConfirmSprinklerDelete();\r\n      }.bind(this),\r\n      label: 'Delete'\r\n    }},\r\n  ];\r\n\r\n  public StateColumnDefs = [\r\n    {\r\n      headerName: 'When Found', field: 'originalValue', width:250, headerClass:'ag-custom-header' \r\n    },\r\n    { headerName: 'Replace With', field: 'replacementValue' , width:250,headerClass:'ag-custom-header',\r\n    resizable: true \r\n    },\r\n    {headerName: '', field: 'id', width:110, headerClass:'ag-custom-header', \r\n    resizable: true, cellRendererFramework: BtnRenderComponent,\r\n    cellRendererParams: {\r\n      onClick: function(data : any)\r\n      {\r\n        this.SelectedValue = data;\r\n        this.ConfirmValuesCommit(ValueTypeEnum.State);\r\n      }.bind(this),\r\n      label: 'Commit'\r\n    }},\r\n    {headerName: '', field: 'id', width:110, headerClass:'ag-custom-header', \r\n    resizable: true, cellRendererFramework: BtnRenderComponent,\r\n    cellRendererParams: {\r\n      onClick: function(data : any)\r\n      {\r\n        this.SelectedValue = data;\r\n        this.UpdateValue(ValueTypeEnum.State);\r\n      }.bind(this),\r\n      label: 'Update'\r\n    }},\r\n    {headerName: '', field: 'id', width:110, headerClass:'ag-custom-header', \r\n    resizable: true, cellRendererFramework: BtnRenderComponent,\r\n    cellRendererParams: {\r\n      onClick: function(data : any)\r\n      {\r\n        this._selectedValuesId = data.id;\r\n        this.ConfirmValuesDelete(ValueTypeEnum.State);\r\n      }.bind(this),\r\n      label: 'Delete'\r\n    }}\r\n  ];\r\n\r\n  public StreetColumnDefs = [\r\n    {\r\n      headerName: 'When Found', field: 'originalValue', width:250, headerClass:'ag-custom-header' \r\n    },\r\n    { headerName: 'Replace With', field: 'replacementValue' , width:250,headerClass:'ag-custom-header',\r\n    resizable: true \r\n    },\r\n    {headerName: '', field: 'id', width:110, headerClass:'ag-custom-header', \r\n    resizable: true, cellRendererFramework: BtnRenderComponent,\r\n    cellRendererParams: {\r\n      onClick: function(data : any)\r\n      {\r\n        this.SelectedValue = data;\r\n        this.ConfirmValuesCommit(ValueTypeEnum.Street);\r\n      }.bind(this),\r\n      label: 'Commit'\r\n    }},\r\n    {headerName: '', field: 'id', width:110, headerClass:'ag-custom-header', \r\n    resizable: true, cellRendererFramework: BtnRenderComponent,\r\n    cellRendererParams: {\r\n      onClick: function(data : any)\r\n      {\r\n        this.SelectedValue = data;\r\n        this.UpdateValue(ValueTypeEnum.Street);\r\n      }.bind(this),\r\n      label: 'Update'\r\n    }},\r\n    {headerName: '', field: 'id', width:110, headerClass:'ag-custom-header', \r\n    resizable: true, cellRendererFramework: BtnRenderComponent,\r\n    cellRendererParams: {\r\n      onClick: function(data : any)\r\n      {\r\n        this._selectedValuesId = data.id;\r\n        this.ConfirmValuesDelete(ValueTypeEnum.Street);\r\n      }.bind(this),\r\n      label: 'Delete'\r\n    }}  \r\n  ];\r\n\r\n  constructor(private _adminValuesBl : AdminValuesBl,private _modalService: NgbModal,\r\n    private _messagingService : MessageService) { }\r\n\r\n  async ngOnInit() {\r\n    this._messagingService.LoadingMsg(true);\r\n    this.SprinklerTypes = [];\r\n\r\n    var unknown = new SprinklerTypeDto({ id:0, text:\"Unknown\"});\r\n    var yes = new SprinklerTypeDto({ id:1, text:\"Yes\"});\r\n    var no = new SprinklerTypeDto({ id:2, text:\"No\"});\r\n    this.SprinklerTypes.push(unknown);\r\n    this.SprinklerTypes.push(yes);\r\n    this.SprinklerTypes.push(no);\r\n\r\n    this.SprinklerOptions = <GridOptions>{\r\n   \r\n      getRowStyle: (params) => {\r\n        if (params.node.rowIndex % 2 === 0) {\r\n          return {background: '#e7e7e7'};\r\n        }\r\n      }\r\n    }\r\n\r\n    this.StateOptions = <GridOptions>{\r\n   \r\n      getRowStyle: (params) => {\r\n        if (params.node.rowIndex % 2 === 0) {\r\n          return {background: '#e7e7e7'};\r\n        }\r\n      }\r\n    }\r\n\r\n    this.StreetOptions = <GridOptions>{\r\n   \r\n      getRowStyle: (params) => {\r\n        if (params.node.rowIndex % 2 === 0) {\r\n          return {background: '#e7e7e7'};\r\n        }\r\n      }\r\n    }\r\n\r\n    var response = await this._adminValuesBl.Get();\r\n    this.SprinklerValues = response.sprinklerValues;\r\n    this.StateValues = response.stateValues;\r\n    this.StreetValues = response.streetValues;\r\n\r\n    this._messagingService.LoadingMsg(false);\r\n  }\r\n\r\n  onSprinklerGridReady(params) {\r\n    this._gridApi = params.api;\r\n    this._gridApi.setDomLayout('autoHeight');\r\n  }\r\n\r\n  onStateGridReady(params) {\r\n\r\n    this._stateGridApi = params.api;\r\n    this._stateGridApi.setDomLayout('autoHeight');\r\n  }\r\n\r\n  onStreetGridReady(params) {\r\n\r\n    this._streetGridApi = params.api;\r\n    this._streetGridApi.setDomLayout('autoHeight');\r\n  }\r\n\r\n  Cancel()\r\n  {\r\n    this._modalService.dismissAll();\r\n  }\r\n\r\n  async CommitValues()\r\n  {\r\n    this._messagingService.LoadingMsg(true);\r\n\r\n    var response = await this._adminValuesBl.CommitValue(this.SelectedValue.id, this.ValueType);\r\n\r\n    if (this.ValueType == ValueTypeEnum.State)\r\n      this.AgStateCommit();\r\n\r\n    if (this.ValueType == ValueTypeEnum.Street)\r\n    {\r\n      this.AgStreetCommit();\r\n    }\r\n    this._messagingService.LoadingMsg(false);\r\n    this._modalService.dismissAll();\r\n\r\n  }\r\n\r\n  private AgStateCommit()\r\n  {\r\n    this._stateGridApi.forEachNode((rowNode, index) => {\r\n      if (rowNode.data.id == this.SelectedValue.id)\r\n      {\r\n        rowNode.data.state = true;\r\n\r\n        var selectedState = this.StateValues.find(x=> x.id == this.SelectedValue.id);\r\n        selectedState.state = true;\r\n\r\n        this._stateGridApi.setRowData(this.StateValues);\r\n      }\r\n      \r\n    });\r\n  }\r\n\r\n  private AgStreetCommit()\r\n  {\r\n    this._stateGridApi.forEachNode((rowNode, index) => {\r\n      if (rowNode.data.id == this.SelectedValue.id)\r\n      {\r\n        rowNode.data.state = true;\r\n\r\n        var selectedState = this.StreetValues.find(x=> x.id == this.SelectedValue.id);\r\n        selectedState.state = true;\r\n\r\n        this._streetGridApi.setRowData(this.StreetValues);\r\n      }\r\n      \r\n    });\r\n  }\r\n\r\n  async SprinklerCommit()\r\n  {\r\n    this._messagingService.LoadingMsg(true);\r\n    var response = await this._adminValuesBl.CommitSprinkler(this.SelectedSprinkler);\r\n\r\n    this._messagingService.LoadingMsg(false);\r\n    this._modalService.dismissAll();\r\n  }\r\n\r\n  async ConfirmSprinkler()\r\n  {\r\n    this._messagingService.LoadingMsg(true);\r\n    var response = await this._adminValuesBl.DeleteSprinkler(this.SelectedSprinkler);\r\n    this._messagingService.LoadingMsg(false);\r\n    this._gridApi.forEachNode((rowNode, index) => {\r\n      if (rowNode.data.id == this._selectedValuesId)\r\n      {\r\n        this.SprinklerValues.splice(index,1);\r\n\r\n        this._gridApi.setRowData(this.SprinklerValues);\r\n      }\r\n      \r\n    });\r\n    this._modalService.dismissAll();\r\n  }\r\n\r\n  async ConfirmValues()\r\n  {\r\n    this._messagingService.LoadingMsg(true);\r\n\r\n    if (this.ValueType == ValueTypeEnum.State)\r\n    {\r\n        this._stateGridApi.forEachNode((rowNode, index) => {\r\n          if (rowNode.data.id == this._selectedValuesId)\r\n          {\r\n            this.StateValues.splice(index,1);\r\n\r\n            this._stateGridApi.setRowData(this.StateValues);\r\n          }\r\n          \r\n        });\r\n    }\r\n\r\n    if (this.ValueType == ValueTypeEnum.Street)\r\n    {\r\n      this._streetGridApi.forEachNode((rowNode, index) => {\r\n        if (rowNode.data.id == this._selectedValuesId)\r\n        {\r\n          this.StreetValues.splice(index,1);\r\n\r\n          this._streetGridApi.setRowData(this.StreetValues);\r\n        }\r\n      });\r\n    }\r\n\r\n    var response = await this._adminValuesBl.DeleteValue(this._selectedValuesId, this.ValueType);\r\n\r\n    this._messagingService.LoadingMsg(false);\r\n    this._modalService.dismissAll();\r\n  }\r\n\r\n  private ConfirmSprinklerCommit()\r\n  {\r\n    this._modalService.open(this.confirmSprinklerCommitElement, { ariaLabelledBy: 'modal-basic-title'});\r\n  }\r\n\r\n  private ConfirmSprinklerDelete()\r\n  {\r\n    this._modalService.open(this.confirmSprinklerElement, { ariaLabelledBy: 'modal-basic-title'});\r\n  }\r\n\r\n  private UpdateSprinkler()\r\n  {\r\n    this._modalService.open(this.sprinklerElement, { ariaLabelledBy: 'modal-basic-title'});\r\n  }\r\n\r\n  private UpdateValue(valueType : ValueTypeEnum)\r\n  {\r\n    this.ValueType = valueType;\r\n    this._modalService.open(this.valueElement, { ariaLabelledBy: 'modal-basic-title'});\r\n  }\r\n\r\n  private ConfirmValuesCommit(valueType : ValueTypeEnum)\r\n  {\r\n    this.ValueType = valueType;\r\n    this._modalService.open(this.confirmValuesCommitElement, { ariaLabelledBy: 'modal-basic-title'});\r\n  }\r\n\r\n  private ConfirmValuesDelete(valueType : ValueTypeEnum)\r\n  {\r\n    this.ValueType = valueType;\r\n    this._modalService.open(this.confirmValuesElement, { ariaLabelledBy: 'modal-basic-title'});\r\n  }\r\n\r\n  private UpdateStreetAgGrid()\r\n  {\r\n    this._streetGridApi.forEachNode((rowNode, index) => {\r\n      if (rowNode.data.id == this.SelectedValue.id)\r\n      {\r\n        var selectedStreet = this.StreetValues.find(x=> x.id == this.SelectedValue.id);\r\n        selectedStreet.originalValue = this.SelectedValue.originalValue;\r\n        selectedStreet.replacementValue = this.SelectedValue.replacementValue;\r\n        this._streetGridApi.setRowData(this.StreetValues);\r\n      }\r\n    });\r\n  }\r\n  \r\n  private UpdateStateAgGrid()\r\n  {\r\n    this._stateGridApi.forEachNode((rowNode, index) => {\r\n      if (rowNode.data.id == this.SelectedValue.id)\r\n      {\r\n        var selectedState = this.StateValues.find(x=> x.id == this.SelectedValue.id);\r\n        selectedState.originalValue = this.SelectedValue.originalValue;\r\n        selectedState.replacementValue = this.SelectedValue.replacementValue;\r\n\r\n        this._stateGridApi.setRowData(this.StateValues);\r\n      }\r\n    });\r\n  }\r\n  public async UpdateValueRecord()\r\n  {\r\n    this._messagingService.LoadingMsg(true);\r\n   \r\n    var response = await this._adminValuesBl.UpdateValue(this.SelectedValue, this.ValueType);\r\n\r\n    if (this.ValueType == ValueTypeEnum.Street)\r\n    {\r\n      this.UpdateStreetAgGrid();\r\n    }\r\n\r\n    if (this.ValueType == ValueTypeEnum.State)\r\n    {\r\n      this.UpdateStateAgGrid();\r\n    }\r\n    this._modalService.dismissAll();\r\n    this._messagingService.LoadingMsg(false);\r\n  }\r\n\r\n  \r\n  public async UpdateSprinklerRecord()\r\n  {\r\n    this._messagingService.LoadingMsg(true);\r\n    \r\n    var response = await this._adminValuesBl.UpdateSprinkler(this.SelectedSprinkler)\r\n\r\n    this._gridApi.forEachNode((rowNode, index) => {\r\n      if (rowNode.data.sprinklerValsId == this.SelectedSprinkler.sprinklerValsId)\r\n      {\r\n        var selectedSprinkler = this.SprinklerValues.find(x=> x.sprinklerValsId == this.SelectedSprinkler.sprinklerValsId);\r\n        selectedSprinkler.text = this.SelectedSprinkler.text;\r\n        selectedSprinkler.sprinklerValue = this.SelectedSprinkler.sprinklerValue;\r\n\r\n        this.SelectedSprinkler = null;\r\n        this.SelectedSprinkler = selectedSprinkler;\r\n        this._gridApi.setRowData(this.SprinklerValues);\r\n      }\r\n    });\r\n\r\n    var res = await this._adminValuesBl.Get();\r\n    this.SprinklerValues = res.sprinklerValues;\r\n    this.StateValues = res.stateValues;\r\n    this.StreetValues = res.streetValues;\r\n    this._modalService.dismissAll();\r\n    this._messagingService.LoadingMsg(false);\r\n  }\r\n\r\n}\r\n","<div class=\"sectionHeader\">\r\n    <ng-template #termTemplate let-modal>\r\n        <div class=\"modal-header bg-dark modal-lg\">\r\n          <h4 class=\"modal-title modalTitle\" id=\"modal-basic-title\">Add Term</h4>\r\n          <button type=\"button\" class=\"close modalClose\" aria-label=\"Close\" (click)=\"modal.dismiss('Cross click')\">\r\n            <span aria-hidden=\"true\">×</span>\r\n          </button>\r\n        </div>\r\n        <div class=\"modal-body\">\r\n        <form [formGroup]=\"TermForm\">\r\n          <div class=\"row\">\r\n            <div class=\"col-sm-1\">\r\n                <label class=\"padTop\">Term</label>\r\n            </div>\r\n            <div class=\"col-sm-5\">\r\n                <input type=\"text\" class=\"form-control txtSmall\" name=\"name\" formControlName=\"name\"  />\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"row padTop margTop\">\r\n            <div class=\"col-sm-3\">\r\n              <button class=\"btn-sm btn-success btn-outline-rounded btn-info\" [disabled]=\"!TermForm.valid\" (click)=\"SaveTerm()\"> Add Term </button>\r\n            </div>\r\n          </div>\r\n        </form>\r\n    </div>\r\n    \r\n    </ng-template>\r\n\r\n    <ng-template #confirmTemplate let-modal>\r\n      <div class=\"modal-header bg-dark modal-lg\">\r\n        <h4 class=\"modal-title modalTitle\" id=\"modal-basic-title\">Delete Staging Value</h4>\r\n        <button type=\"button\" class=\"close modalClose\" aria-label=\"Close\" (click)=\"modal.dismiss('Cross click')\">\r\n          <span aria-hidden=\"true\">×</span>\r\n        </button>\r\n      </div>\r\n      <div class=\"modal-body\">\r\n  \r\n          <div class=\"row padTxtTop\">\r\n              <div class=\"col-sm-12\">\r\n                Are you sure you wish to delete the Staging Value?\r\n              </div>\r\n          </div>\r\n        <div class=\"row padTxtTop margTop\">\r\n          <div class=\"col-sm-3\">\r\n            <button class=\"btn-sm btn-success btn-outline-rounded btn-info\"  (click)=\"Confirm()\"> Confirm </button>\r\n          </div>\r\n  \r\n          <div class=\"col-sm-3\">\r\n            <button class=\"btn-sm btn-success btn-outline-rounded btn-info\" (click)=\"Cancel()\">Cancel</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n  \r\n    </ng-template>\r\n\r\n\r\n    <div class=\"sectionContent sectionTop padBtmBtns\" *ngIf=\"HasLoaded\">\r\n        <div class=\"row lnHeight tblMargin\">\r\n            <ag-grid-angular\r\n                style=\"width: 902px;\"\r\n                class=\"ag-theme-balham marg\"\r\n                [rowData]=\"LoadVals\"\r\n                [columnDefs]=\"ColumnDefs\"\r\n                [gridOptions]=\"Options\"\r\n                (gridReady)=\"onGridReady($event)\"\r\n                (selectionChanged)=\"onSelectionChanged()\"                \r\n                [rowSelection]=\"RowSelection\">\r\n            </ag-grid-angular>\r\n        </div>\r\n    </div>\r\n \r\n    <div class=\"sectionContent sectionTop margBtm\" *ngIf=\"ShowTestTerms\">\r\n        <div class=\"row lnHeight tblMargin\">\r\n          <div class=\"col-sm-8\">\r\n            <ag-grid-angular\r\n                style=\"width: 802px;\"\r\n                class=\"ag-theme-balham marg\"\r\n                [rowData]=\"TestTerms\"\r\n                [columnDefs]=\"TestTermsColumnDefs\"\r\n                [gridOptions]=\"TestOptions\"\r\n                (gridReady)=\"onTestGridReady($event)\"\r\n                [rowClassRules]=\"rowClassRules\"\r\n                [rowSelection]=\"RowSelection\">\r\n            </ag-grid-angular>\r\n          </div>\r\n          <div class=\"col-sm-4\">\r\n            <button class=\"btn btn-info btn-square btn-sm margLeft\" (click)=\"AddTerm()\">Add</button>\r\n            <button class=\"btn btn-info btn-square btn-sm margLeft\" (click)=\"Stage()\">Test</button>\r\n            <button *ngIf=\"ShowCommit\" class=\"btn btn-info btn-square btn-sm margLeft\" (click)=\"Commit()\">Commit</button>\r\n          </div>\r\n        </div>\r\n    </div>\r\n","import { Component, OnInit, ViewChild, TemplateRef } from '@angular/core';\r\nimport { LookupBl } from '../../../Bl/lookup-bl';\r\nimport { LocationLookupsResponse } from '../../../Models/Response/location-lookups-response';\r\nimport { MaintenanceBl } from '../../../Bl/maintenance-bl';\r\nimport { GridOptions } from 'ag-grid-community';\r\nimport { LoadValsDto } from '../../../Models/Dtos/load-vals-dto';\r\nimport { FieldTypes } from '../../../Models/Enums/field-types';\r\nimport { AuthenticationService } from '../../../Data/authentication-service';\r\nimport { TestTerm } from '../../../Models/Dtos/test-term';\r\nimport { StageRequest } from '../../../Models/Requests/stage-request';\r\nimport { CommitRequest } from '../../../Models/Requests/commit-request';\r\nimport { MessageService } from '../../../Services/message-service';\r\nimport { FormGroup, Validators, FormBuilder } from '@angular/forms';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { MatchedEnum } from 'src/app/Models/Enums/MatchedEnum';\r\nimport { BtnRenderComponent } from 'src/app/AgGrid/btn-render/btn-render.component';\r\n\r\n@Component({\r\n  selector: 'app-mi',\r\n  templateUrl: './mi.component.html',\r\n  styleUrls: ['./mi.component.css']\r\n})\r\nexport class MiComponent implements OnInit {\r\n  @ViewChild('termTemplate',{static: true}) termElement : TemplateRef<any>;\r\n  @ViewChild('confirmTemplate',{static: true}) confirmElement : TemplateRef<any>;\r\n\r\n  private _locationLookups : LocationLookupsResponse;\r\n  public Options:GridOptions;\r\n  public TestOptions:GridOptions;\r\n  public HasLoaded : boolean;\r\n  private _gridApi;\r\n  private _testGridApi;\r\n  public RowSelection : string = 'single';\r\n  public LoadVals : LoadValsDto[];\r\n  public GridSelected : LoadValsDto;\r\n  public GridLoadValSelected : boolean;\r\n  public TestTerms : TestTerm[];\r\n  public ShowTestTerms : boolean;\r\n  public TermForm: FormGroup;\r\n  public ShowCommit : boolean;\r\n  public rowClassRules;\r\n\r\n  private _selectedLoadValToDelete : number;\r\n\r\n  private _allTerms : TestTerm[];\r\n\r\n  public ColumnDefs = [\r\n    {\r\n      headerName: 'Value', field: 'value', width:250, headerClass:'ag-custom-header',editable: true \r\n     \r\n    },\r\n    {headerName: 'Category', field: 'field' , width:100,headerClass:'ag-custom-header',resizable: true, valueGetter: function(params) {\r\n    \r\n      var types = FieldTypes;\r\n      return types[params.data.field]}\r\n    },\r\n    {headerName: 'User Mapping', field: 'mapped' , width:250,headerClass:'ag-custom-header',resizable: true, valueGetter: function(params) {\r\n    \r\n      return params.data.mapped.scheme + ' - ' + params.data.mapped.code + ' - ' + params.data.mapped.name}\r\n    },\r\n    {headerName: '', field: 'loadValId', width:150, headerClass:'ag-custom-header', resizable: true,\r\n    cellRendererFramework: BtnRenderComponent,\r\n    cellRendererParams: {\r\n      onClick: function(data : any)\r\n      {\r\n        this.onCellClicked(data);\r\n      }.bind(this),\r\n      label: 'Add'\r\n    }},\r\n    {headerName: '', field: 'loadValId', width:150, headerClass:'ag-custom-header', resizable: true,\r\n    cellRendererFramework: BtnRenderComponent,\r\n    cellRendererParams: {\r\n      onClick: function(data : any)\r\n      {\r\n        this._selectedLoadValToDelete = data.loadValId;\r\n        this.ConfirmLoadValDelete();\r\n      }.bind(this),\r\n      label: 'Delete'\r\n    }}\r\n  ];\r\n\r\n  private ConfirmLoadValDelete()\r\n  {\r\n    this._modalService.open(this.confirmElement , { ariaLabelledBy: 'modal-basic-title'});\r\n  }\r\n\r\n  public TestTermsColumnDefs = [\r\n    {\r\n      headerName: 'Term', field: 'terms', width:250, headerClass:'ag-custom-header'\r\n    },\r\n    {\r\n      headerName: 'Answer', field: 'answer', width:350, headerClass:'ag-custom-header'\r\n    },\r\n    {\r\n      headerName: 'Match Previous Test', field: 'matched', width:200, headerClass:'ag-custom-header',\r\n    \r\n       cellRenderer: function(params) { \r\n\r\n        let eIconGui = document.createElement('span');\r\n        switch(params.data.matched) { \r\n          case MatchedEnum.True: { \r\n            eIconGui.innerHTML = '<em class=\"fa fa-check success\"></em>';\r\n             break; \r\n          } \r\n          case MatchedEnum.False: { \r\n            eIconGui.innerHTML = '<em class=\"fa fa-times failure\"></em>'; \r\n             break; \r\n          } \r\n          default: { \r\n            eIconGui.innerHTML = '<em class=\"fa fa-exclamation-circle exclaim\"></em>';  \r\n             break; \r\n          } \r\n       } \r\n        return eIconGui;\r\n     }, \r\n    },\r\n  ];\r\n \r\n\r\n  constructor(\r\n    private _lookupBl : LookupBl,\r\n    private _maintenanceBl : MaintenanceBl,\r\n    private _authenticationService : AuthenticationService,\r\n    private _messagingService : MessageService,\r\n    private _formBuilder: FormBuilder,\r\n    private _modalService: NgbModal) { }\r\n\r\n  ngOnInit() {\r\n    \r\n      this.LoadLookups();\r\n      this.GetWords();\r\n\r\n      this.Options = <GridOptions>{\r\n   \r\n        getRowStyle: (params) => {\r\n          if (params.node.rowIndex % 2 === 0) {\r\n            return {background: '#e7e7e7'};\r\n          }\r\n        }\r\n      }\r\n\r\n      this.rowClassRules = {\r\n        'isAddedHighLight': function (params) {\r\n\r\n          var isAdded = params.data.isAddedTerm;\r\n          return isAdded == true;\r\n        },\r\n      };\r\n\r\n      this.TestOptions = <GridOptions>{\r\n   \r\n        getRowStyle: (params) => {\r\n          if (params.node.rowIndex % 2 === 0) {\r\n            return {background: '#e7e7e7'};\r\n          }\r\n        }\r\n      }\r\n\r\n      this.TermForm = this._formBuilder.group({\r\n        name: ['', Validators.required],\r\n        buildingClass: [''],\r\n        occupancy: ['']\r\n      });\r\n  }\r\n\r\n  onSelectionChanged() {\r\n    var selected = this._gridApi.getSelectedRows();\r\n\r\n    if (selected)\r\n    {\r\n      this.GridSelected = selected[0];\r\n      this.GridLoadValSelected = true;\r\n    }\r\n\r\n  }\r\n\r\n  SaveTerm()\r\n  {\r\n    var fieldType = this.GridSelected.field;\r\n    var termToAdd = this.TermForm.controls['name'].value;\r\n\r\n    this.TestTerms.push({ testTermsId : 0,\r\n      loadTypeId : fieldType,\r\n      terms : termToAdd,\r\n      matched : MatchedEnum.Na,\r\n      answer : 'Not Run',\r\n      isAddedTerm : false,\r\n      answerId : 0\r\n      });\r\n\r\n    this._testGridApi.setRowData(this.TestTerms);\r\n    \r\n    this._modalService.dismissAll();\r\n  }\r\n\r\n  onGridReady(params) {\r\n    this._gridApi = params.api;\r\n    this._gridApi.setDomLayout('autoHeight');\r\n  }\r\n\r\n  onTestGridReady(params) {\r\n    this._testGridApi = params.api;\r\n    this._testGridApi.setDomLayout('autoHeight');\r\n  }\r\n\r\n  async AddTerm()\r\n  {\r\n    this._modalService.open(this.termElement, { ariaLabelledBy: 'modal-basic-title'});\r\n  }\r\n\r\n  async Commit()\r\n  {\r\n    this._messagingService.LoadingMsg(true);\r\n\r\n    var commitRequest = new CommitRequest({FieldType : this.GridSelected.field, \r\n      Load: this.GridSelected, \r\n      UserId : this._authenticationService.currentUserValue.userId,\r\n      TestTerms : this.TestTerms});\r\n\r\n    debugger;\r\n    var response = await this._maintenanceBl.Commit(commitRequest);\r\n    if (response.status)\r\n    {\r\n      this.ShowCommit = false;\r\n      this.ShowTestTerms = false;\r\n      await this.GetWords();\r\n    }\r\n    this._messagingService.LoadingMsg(false);\r\n  }\r\n\r\n  async Stage()\r\n  {\r\n    this._messagingService.LoadingMsg(true);\r\n    var field : FieldTypes;\r\n    var terms : TestTerm[] = [];\r\n    if (this.GridSelected.field == FieldTypes.Occupancy)\r\n    {\r\n      field = FieldTypes.Occupancy;\r\n    }\r\n    else{\r\n      field = FieldTypes.BuildingClass;\r\n    }\r\n\r\n    this.TestTerms.forEach(x=> \r\n    {\r\n      terms.push(x);\r\n    });\r\n\r\n    var stageRequest = new StageRequest({FieldType : this.GridSelected.field, Terms: terms, \r\n      Load: this.GridSelected, \r\n      UserId : this._authenticationService.currentUserValue.userId});\r\n    \r\n    var response = await this._maintenanceBl.Stage(stageRequest);\r\n\r\n    if (response.status)\r\n    {\r\n      response.terms.forEach(x=>\r\n      {\r\n        var term = this.TestTerms.find(grdTerm=> grdTerm.testTermsId == x.testTermsId);\r\n\r\n        if (term)\r\n        {\r\n          term.answer = x.answer;\r\n          term.matched = x.matched;\r\n          term.answerId = x.answerId;\r\n        }\r\n        else\r\n        {\r\n          var term = this.TestTerms.find(grdTerm=> grdTerm.terms == x.terms);\r\n\r\n          term.answer = x.answer;\r\n          term.matched = x.matched;\r\n          term.answerId = x.answerId;\r\n          \r\n        }\r\n      });\r\n\r\n      var localTerms = this.TestTerms;\r\n      var api = this._testGridApi;\r\n      this._testGridApi.forEachNode(function(rowNode, index)\r\n      {\r\n        var id = rowNode.data.testTermsId;\r\n        var term = localTerms.find(grdTerm=> grdTerm.testTermsId == id);\r\n        rowNode.data.matched = term.matched;\r\n        rowNode.data.answer = term.answer;\r\n        rowNode.data.answerId = term.answerId;\r\n        rowNode.setData(term);\r\n\r\n        api.flashCells({\r\n          rowNodes: [rowNode]\r\n        });\r\n \r\n      });\r\n        \r\n\r\n      var params = {\r\n        force: true,\r\n        suppressFlash: false,\r\n      };\r\n      this._testGridApi.refreshCells(params);\r\n      this.ShowCommit = true;\r\n    }\r\n\r\n    this._messagingService.LoadingMsg(false);\r\n  }\r\n\r\n  onCellClicked(data : any)\r\n  {\r\n    var loadType : FieldTypes;\r\n    if (data.field == FieldTypes.Occupancy)\r\n     {\r\n      this.TestTerms = this._allTerms.filter(x=> x.loadTypeId == FieldTypes.Occupancy);\r\n      loadType = FieldTypes.Occupancy;\r\n     }\r\n     else\r\n     {\r\n      this.TestTerms = this._allTerms.filter(x=> x.loadTypeId == FieldTypes.BuildingClass);\r\n      loadType = FieldTypes.BuildingClass;\r\n     }\r\n\r\n     var addToTerms = new TestTerm({\r\n      testTermsId : 0,\r\n      loadTypeId : loadType,\r\n      terms : data.value,\r\n      isAddedTerm : true\r\n     });\r\n\r\n     this.TestTerms.push(addToTerms);\r\n\r\n      this.TestTerms.forEach(x=> \r\n        {\r\n          x.answer = \"Not Run\";\r\n          x.matched = MatchedEnum.Na;\r\n        });\r\n \r\n      this.ShowTestTerms = true;\r\n      this.ShowCommit = false;\r\n  }\r\n\r\n  public async Confirm()\r\n  {\r\n    var response = await this._maintenanceBl.DeleteLoadVal(this._selectedLoadValToDelete);\r\n\r\n    if (response.status)\r\n      await this.GetWords();\r\n    \r\n    this._modalService.dismissAll();\r\n  }\r\n\r\n  Cancel()\r\n  {\r\n    this._modalService.dismissAll();\r\n  }\r\n\r\n  async LoadLookups()\r\n  {\r\n    var user = this._authenticationService.currentUserValue;\r\n    this._locationLookups = await this._lookupBl.GetLocationLookups();\r\n    var response = await this._maintenanceBl.GetTestTerms(user.userId);\r\n    this._allTerms = response.testTerms;\r\n  }\r\n\r\n  async GetWords()\r\n  {\r\n    var getWordsResponse = await this._maintenanceBl.Get();\r\n\r\n    if (getWordsResponse.status)\r\n    {\r\n      this.LoadVals = getWordsResponse.loadVals;\r\n      this.HasLoaded = true;\r\n    } \r\n  }\r\n\r\n}\r\n","<ng-template #userTemplate let-modal>\r\n    <div class=\"modal-header bg-dark modal-lg\">\r\n      <h4 class=\"modal-title modalTitle\" id=\"modal-basic-title\">{{Operation}} User</h4>\r\n      <button type=\"button\" class=\"close modalClose\" aria-label=\"Close\" (click)=\"modal.dismiss('Cross click')\">\r\n        <span aria-hidden=\"true\">×</span>\r\n      </button>\r\n    </div>\r\n    <div class=\"modal-body\">\r\n    <form [formGroup]=\"UserForm\">\r\n      <div class=\"row\">\r\n        <div class=\"col-sm-2\">\r\n            <label class=\"padTop\">Name</label>\r\n        </div>\r\n        <div class=\"col-sm-4\">\r\n            <input type=\"text\" class=\"form-control txtSmall\" name=\"name\" formControlName=\"name\"  />\r\n        </div>\r\n        <div class=\"col-sm-2\">\r\n            <label class=\"padTop\">Uid</label>\r\n        </div>\r\n        <div class=\"col-sm-4\">\r\n            <input type=\"text\" class=\"form-control txtSmall\" name=\"userName\" formControlName=\"userName\"  />\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"row\">\r\n        <div class=\"col-sm-2 padTop\">\r\n            <label class=\"padTop\">Company</label>\r\n        </div>\r\n        <div class=\"col-sm-4 padTop\">\r\n            <ng-select class=\"selectStyle\"\r\n                [items]=\"Clients\"\r\n                bindLabel=\"client\"\r\n                placeholder=\"Please select a Company\"\r\n                bindValue=\"clientId\"\r\n                clearable=\"true\"\r\n                formControlName=\"client\"\r\n                clearAllText=\"Clear\">\r\n            </ng-select>\r\n        </div>\r\n        <div class=\"col-sm-2 padTop\">\r\n            <label class=\"padTop\">Type</label>\r\n        </div>\r\n        <div class=\"col-sm-4 padTop\">\r\n            <ng-select class=\"selectStyle\"\r\n                [items]=\"UserTypes\"\r\n                bindLabel=\"userType\"\r\n                placeholder=\"Please select a User Type\"\r\n                bindValue=\"userTypeId\"\r\n                clearable=\"true\"\r\n                formControlName=\"userType\"\r\n                clearAllText=\"Clear\">\r\n            </ng-select>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"row padTxtTop margTop\">\r\n        <div class=\"col-sm-3\">\r\n          <button class=\"btn-sm btn-success btn-outline-rounded btn-info\" [disabled]=\"!UserForm.valid\" (click)=\"Save()\"> Save </button>\r\n        </div>\r\n      </div>\r\n      </form>\r\n      </div>\r\n\r\n</ng-template>\r\n\r\n  <ng-template #confirmTemplate let-modal>\r\n    <div class=\"modal-header bg-dark modal-lg\">\r\n      <h4 class=\"modal-title modalTitle\" id=\"modal-basic-title\">{{ConfirmTitle}}</h4>\r\n      <button type=\"button\" class=\"close modalClose\" aria-label=\"Close\" (click)=\"modal.dismiss('Cross click')\">\r\n        <span aria-hidden=\"true\">×</span>\r\n      </button>\r\n    </div>\r\n    <div class=\"modal-body\">\r\n\r\n        <div class=\"row padTxtTop\">\r\n            <div class=\"col-sm-12\">\r\n              {{Question}}\r\n            </div>\r\n        </div>\r\n      <div class=\"row padTxtTop margTop\">\r\n        <div class=\"col-sm-3\">\r\n          <button class=\"btn-sm btn-success btn-outline-rounded btn-info\"  (click)=\"Confirm()\"> Confirm </button>\r\n        </div>\r\n\r\n        <div class=\"col-sm-3\">\r\n          <button class=\"btn-sm btn-success btn-outline-rounded btn-info\" (click)=\"Cancel()\">Cancel</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n  </ng-template>\r\n\r\n<div class=\"sectionHeader\">\r\n    <div class=\"sectionContent\">\r\n        <div class=\"row padBtmBtns padBtnLeft\">\r\n            <div class=\"col-sm-2\">\r\n              <button class=\"btn btn-info btn-square btn-sm margLeft\" (click)=\"Add()\" >Add</button>\r\n              <button class=\"btn btn-info btn-square btn-sm margLeft wdth\" (click)=\"ResetPwd()\" [disabled]=\"!GridUserSelected\" >Reset Pwd</button>\r\n              <button class=\"btn btn-info btn-square btn-sm margLeft wdth\" (click)=\"Delete()\" [disabled]=\"!GridUserSelected\" >Delete</button>\r\n            </div>\r\n        </div>\r\n\r\n    <div class=\"sectionContent sectionTop\" *ngIf=\"HasLoaded\">\r\n        <div class=\"row lnHeight tblMargin\">\r\n            <ag-grid-angular\r\n                style=\"width: 1103px;\"\r\n                class=\"ag-theme-balham marg\"\r\n                [rowData]=\"Users\"\r\n                [columnDefs]=\"ColumnDefs\"\r\n                [gridOptions]=\"Options\"\r\n                (gridReady)=\"onGridReady($event)\"\r\n                (selectionChanged)=\"onSelectionChanged()\"\r\n                (cellDoubleClicked)='onCellClicked($event)'\r\n                [rowSelection]=\"RowSelection\">\r\n            </ag-grid-angular>\r\n        </div>\r\n    </div>\r\n</div>\r\n","import { Component, OnInit, TemplateRef, ViewChild } from '@angular/core';\r\nimport { LookupBl } from '../../../Bl/lookup-bl';\r\nimport {UserBl} from '../../../bl/user-bl'\r\nimport { GridOptions } from 'ag-grid-community';\r\nimport { UserDto } from '../../../Models/Dtos/user-dto';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { ClientDto } from '../../../Models/Dtos/client-dto';\r\nimport { UserTypeDto } from '../../../Models/Dtos/user-type-dto';\r\nimport { AuthenticationService } from '../../../Data/authentication-service';\r\n\r\n@Component({\r\n  selector: 'app-users',\r\n  templateUrl: './users.component.html',\r\n  styleUrls: ['./users.component.css']\r\n})\r\nexport class UsersComponent implements OnInit {\r\n  @ViewChild('userTemplate',{static: true}) userElement : TemplateRef<any>;\r\n  @ViewChild('confirmTemplate',{static: true}) confirmElement : TemplateRef<any>;\r\n\r\n  public UserForm: FormGroup;\r\n  public Options:GridOptions;\r\n  public RowSelection : string = 'single';\r\n  public Users : UserDto[] = [];\r\n  public HasLoaded : boolean;\r\n  public SelectedUser : UserDto;\r\n  public Operation : string;\r\n  public Clients : ClientDto[];\r\n  public UserTypes : UserTypeDto[];\r\n  public GridSelected : UserDto;\r\n  public GridUserSelected : boolean;\r\n  public ConfirmTitle : string;\r\n  public Question : string;\r\n  private _add : boolean;\r\n  private _reset : boolean;\r\n  private _gridApi;\r\n  \r\n  public ColumnDefs = [\r\n    {headerName: 'UserId', field: 'userId', width:100, headerClass:'ag-custom-header',pinned: 'left' },\r\n    \r\n    {headerName: 'Name', field: 'name', width:275, headerClass:'ag-custom-header', resizable: true},\r\n    {headerName: 'UserName', field: 'userName', width:275, headerClass:'ag-custom-header', resizable: true},\r\n   \r\n    {headerName: 'UserType',  field: 'userType.userType', width:300, headerClass:'ag-custom-header', resizable: true},\r\n    {headerName: 'Company', field: 'client.client', width:150, headerClass:'ag-custom-header', resizable: true}\r\n  ];\r\n\r\n  constructor(private _lookUpBl : LookupBl, \r\n    private _userBl : UserBl,\r\n    private _modalService: NgbModal,\r\n    private _formBuilder: FormBuilder,\r\n    private _authenticationService : AuthenticationService) { }\r\n\r\n  async ngOnInit() {\r\n\r\n    this.Options = <GridOptions>{\r\n   \r\n      getRowStyle: (params) => {\r\n        if (params.node.rowIndex % 2 === 0) {\r\n          return {background: '#e7e7e7'};\r\n        }\r\n      }\r\n    };\r\n\r\n    this.UserForm = this._formBuilder.group({\r\n      name: ['', Validators.required],\r\n      userName: ['', Validators.required],\r\n      client: ['', Validators.required],\r\n      userType : ['', Validators.required]\r\n    });\r\n    \r\n    var user = this.getUser();\r\n    var lookupResponse = await this._lookUpBl.GetUserLookups(user.userId);\r\n\r\n    await this.loadUsers();\r\n    this.Clients = lookupResponse.clients;\r\n    this.UserTypes = lookupResponse.userTypes;\r\n    this.HasLoaded = true;\r\n  }\r\n\r\n  async loadUsers()\r\n  {\r\n    var user = this.getUser();\r\n    var response  = await this._userBl.Get(user.userId);\r\n\r\n    this.Users = response.users;\r\n  }\r\n\r\n  getUser()\r\n  {\r\n    return this._authenticationService.currentUserValue;\r\n  }\r\n\r\n  onCellClicked(params)\r\n  {\r\n    this.SelectedUser = params.data;\r\n    this.Operation = \"Update\";\r\n    this._modalService.open(this.userElement, { ariaLabelledBy: 'modal-basic-title'});\r\n\r\n    this.setFormValues(false);\r\n  }\r\n\r\n  onSelectionChanged() {\r\n    var selected = this._gridApi.getSelectedRows();\r\n\r\n    if (selected)\r\n    {\r\n      this.GridSelected = selected[0];\r\n      this.GridUserSelected = true;\r\n    }\r\n\r\n  }\r\n\r\n  onGridReady(params) {\r\n    this._gridApi = params.api;\r\n    this._gridApi.setDomLayout('autoHeight');\r\n  }\r\n\r\n  Add()\r\n  {\r\n    this.SelectedUser = new UserDto({ client : null });\r\n    this.Operation = \"Add\";\r\n    this._modalService.open(this.userElement, { ariaLabelledBy: 'modal-basic-title'});\r\n\r\n    this.setFormValues(true);\r\n  }\r\n\r\n  setFormValues(add : boolean)\r\n  {\r\n    var ctrls = this.UserForm.controls;\r\n\r\n    ctrls['name'].setValue(this.SelectedUser.name);\r\n\r\n    if (add)\r\n    {\r\n      var loggedInUser = this.getUser();\r\n      if (loggedInUser.userType.userTypeId == 2)\r\n      {\r\n        var client = this.Clients.find(x=> x.client == loggedInUser.client.client);\r\n        ctrls['client'].setValue(client.clientId);\r\n      }\r\n      else\r\n        ctrls['client'].setValue(null);\r\n    }\r\n    else\r\n      ctrls['client'].setValue(this.SelectedUser.client.clientId);\r\n\r\n    ctrls['userName'].setValue(this.SelectedUser.userName);\r\n\r\n    if (add)\r\n      ctrls['userType'].setValue(null);\r\n    else\r\n      ctrls['userType'].setValue(this.SelectedUser.userType.userTypeId);\r\n\r\n    this._add = add;\r\n  }\r\n\r\n  ResetPwd()\r\n  {\r\n    this._reset = true;\r\n    this.ConfirmTitle = \"Confirm Reset Password\";\r\n    this.Question = \"Are you sure sure you wish to reset the user \" + this.GridSelected.userName +\" password?\";\r\n    this._modalService.open(this.confirmElement , { ariaLabelledBy: 'modal-basic-title'});\r\n  }\r\n\r\n  Confirm()\r\n  {\r\n    if (this._reset)\r\n      this.Reset();\r\n    else\r\n      this.DeleteUser();\r\n\r\n  }\r\n\r\n  async DeleteUser()\r\n  {\r\n    await this._userBl.Delete(this.GridSelected.userId);\r\n\r\n    this.Cancel();\r\n\r\n    await this.loadUsers();\r\n  }\r\n  Cancel()\r\n  {\r\n    this._modalService.dismissAll();\r\n  }\r\n\r\n  Delete()\r\n  {\r\n    this.ConfirmTitle = \"Confirm Delete\";\r\n    this._reset = false;\r\n    this.Question = \"Are you sure you wish to delete the user - \" + this.GridSelected.userName+ \"?\";\r\n    this._modalService.open(this.confirmElement , { ariaLabelledBy: 'modal-basic-title'});\r\n \r\n  }\r\n\r\n  async Reset()\r\n  {\r\n    await this._userBl.ChangePwd(this.GridSelected.userId);\r\n    \r\n    this.Cancel();\r\n  }\r\n\r\n  async Save()\r\n  {\r\n    \r\n    var ctrls = this.UserForm.controls;\r\n\r\n    var name = ctrls['name'].value;\r\n\r\n    this.SelectedUser.name = name;\r\n\r\n    var clientId = ctrls['client'].value;\r\n\r\n    var client = this.Clients.find(x=> x.clientId == clientId);\r\n\r\n    this.SelectedUser.client = client;\r\n    this.SelectedUser.userName = ctrls['userName'].value;\r\n\r\n    var userTypeId = ctrls['userType'].value;\r\n\r\n    var userType = this.UserTypes.find(x=> x.userTypeId == userTypeId);\r\n\r\n    this.SelectedUser.userType = userType;\r\n\r\n    await this._userBl.Save(this.SelectedUser, this._add);\r\n\r\n    this._modalService.dismissAll();\r\n\r\n    await this.loadUsers();\r\n  }\r\n\r\n}\r\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { ComponentsDto } from '../../../../../Models/Dtos/Cleansing/components-dto';\r\nimport { JoinCriteria } from '../../../../../Models/Dtos/Cleansing/join-criteria';\r\nimport { JoinModalDto } from '../../../../../Models/Dtos/Cleansing/join-modal-dto';\r\nimport { RowTypeDto } from '../../../../../Models/Dtos/Cleansing/row-type-dto';\r\nimport { StrLookupDto } from '../../../../../Models/Dtos/str-lookup-dto';\r\n\r\n@Component({\r\n  selector: 'app-join',\r\n  templateUrl: './join.component.html',\r\n  styleUrls: ['./join.component.css']\r\n})\r\nexport class JoinComponent implements OnInit {\r\n  public _joinModalDto : JoinModalDto;\r\n  private _components : ComponentsDto[];\r\n\r\n  public HasJoins : false;\r\n  constructor(private _modalService: NgbModal) { }\r\n\r\n  @Input() set JoinModal(value: JoinModalDto) {\r\n\r\n    this._joinModalDto = value;\r\n  }\r\n\r\n  get JoinModal(): JoinModalDto{\r\n    \r\n    return this._joinModalDto;\r\n  }\r\n\r\n  @Input() set Components(value: ComponentsDto[]) {\r\n    debugger;\r\n    this._components = value;\r\n  }\r\n\r\n  @Output() JoinComplete = new EventEmitter<JoinModalDto>();\r\n\r\n  public JoinVisible : boolean;\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  public Close()\r\n  {\r\n    this._modalService.dismissAll();\r\n  }\r\n\r\n  HandleJoinType()\r\n  {\r\n    var joinType = this.JoinModal.JoinType;\r\n\r\n    var components = this.GetComponents();\r\n    if (joinType == 2)\r\n    {\r\n    this.HandleMerge(components);\r\n    }\r\n    if (joinType == 1)\r\n    {\r\n      this.HandleJoin(components);\r\n    }\r\n  }\r\n\r\n  private HandleJoin(components : ComponentsDto[])\r\n  {\r\n    var componentOneRow = components[0].rows[0];\r\n    var componentOneHeaders = this.SetCompNames(componentOneRow);\r\n\r\n    var componentTwoRow = components[1].rows[0];\r\n    var componentTwoHeaders = this.SetCompNames(componentTwoRow);\r\n   \r\n    this._joinModalDto.CompTwoWsIdx = components[1].componentOptions.workSheetId;\r\n    this._joinModalDto.CompTwoIdx = components[1].componentOptions.compIdx;\r\n\r\n    this.AddJoinType(1, components[0], components[1], componentTwoHeaders, componentOneHeaders);\r\n      \r\n\r\n  }\r\n\r\n  private HandleMerge(components : ComponentsDto[])\r\n  {\r\n    var componentOneRow = components[0].rows[0];\r\n    var componentOneHeaders = this.SetCompNames(componentOneRow);\r\n\r\n    var ignore = new StrLookupDto\r\n    (\r\n      {\r\n        Id : -1,\r\n        Value : \"Ignore\"\r\n      }\r\n    );\r\n\r\n    var componentTwoRow = components[1].rows[0];\r\n    var componentTwoHeaders = this.SetCompNames(componentTwoRow);\r\n    componentTwoHeaders.unshift(ignore);\r\n\r\n    var id = 1;\r\n    this._joinModalDto.CompTwoWsIdx = components[1].componentOptions.workSheetId;\r\n    this._joinModalDto.CompTwoIdx = components[1].componentOptions.compIdx;\r\n\r\n    this._joinModalDto.IsMerge = true;\r\n    componentOneHeaders.forEach(x=>\r\n    {\r\n      this.AddMergeType(x,id, components[0], components[1], componentTwoHeaders);\r\n      id++;\r\n    });\r\n  }\r\n\r\n  private GetComponents() \r\n  {\r\n    var joinId = this.JoinModal.JoinCompId;\r\n    var compTwo = this.JoinModal.CompNames.find(x=> x.Id == joinId);\r\n\r\n    var componentOne = this._components.find(x=> x.componentId == this.JoinModal.ComponentId)!;\r\n    var componentTwo = this._components.find(x=> x.componentId == compTwo?.ComponentId)!;\r\n \r\n    var components : ComponentsDto[] = [];\r\n    components.push(componentOne);\r\n    components.push(componentTwo);\r\n    return components;\r\n  }\r\n\r\n  private AddJoinType(id : number,componentOne: ComponentsDto, componentTwo: ComponentsDto, compTwoHeaders : StrLookupDto[], compOneHeaders : StrLookupDto[])\r\n  {\r\n    debugger;\r\n    var joinCriteria = new JoinCriteria({\r\n      Id : id,\r\n      CompOne : componentOne.name,\r\n      CompOneWs : componentOne.componentOptions.workSheet,\r\n      CompTwo : componentTwo,\r\n      CompTwoWs : componentTwo.componentOptions.workSheet,\r\n\r\n      ComponentOneHeaders : compOneHeaders,\r\n      ComponentTwoHeaders : compTwoHeaders,\r\n      SelectedJoinType :this._joinModalDto.JoinType,\r\n      IsMerge : false\r\n    });\r\n    debugger;\r\n    this.JoinModal.JoinCriteria.push(joinCriteria);\r\n  }\r\n\r\n  private AddMergeType(compOneSelected : StrLookupDto, id : number,componentOne: ComponentsDto, componentTwo: ComponentsDto, compTwoHeaders : StrLookupDto[])\r\n  {\r\n    var joinCriteria = new JoinCriteria({\r\n      Id : id,\r\n      CompOne : componentOne.name,\r\n      CompOneWs : componentOne.componentOptions.workSheet,\r\n      CompTwo : componentTwo,\r\n      CompTwoWs : componentTwo.componentOptions.workSheet,\r\n\r\n      ComponentTwoHeaders : compTwoHeaders,\r\n      SelectedJoinType :this._joinModalDto.JoinType,\r\n      CompOneSelected : compOneSelected.Id,\r\n      CompOneDisplay : compOneSelected.Value\r\n     \r\n    });\r\n\r\n    this.JoinModal.JoinCriteria.push(joinCriteria);\r\n  }\r\n\r\n  public CompTwoChange()\r\n  {\r\n    this.HandleJoinType();\r\n    this.JoinVisible = true;\r\n  }\r\n\r\n  public onJoinCondition(joinCriteria : JoinCriteria)\r\n  {\r\n    var foundIdx = this.JoinModal.JoinCriteria.findIndex(x=> x.Id == joinCriteria.Id);\r\n    if (foundIdx > -1)\r\n    {\r\n      this.JoinModal.JoinCriteria.splice(foundIdx, 1);\r\n    }\r\n    \r\n    if (this.JoinModal.JoinCriteria.length == 0)\r\n    {\r\n      this.JoinVisible = false;\r\n    }\r\n  }\r\n\r\n  public Join()\r\n  {\r\n    this.JoinComplete.emit(this.JoinModal);\r\n    this.Close();\r\n  }\r\n\r\n  private SetCompNames(row : RowTypeDto) : StrLookupDto[]\r\n  {\r\n    var headers : StrLookupDto[] = [];\r\n    row.cells.forEach(cell=>\r\n    {\r\n      var headerLkp = new StrLookupDto({ Id:cell.colIdx, Value:cell.cellValue})\r\n      headers.push(headerLkp);\r\n    })\r\n    \r\n    return headers;\r\n  }\r\n  \r\n\r\n}\r\n","<div class=\"modal-header bg-dark modal-lg\">\r\n    <h4 class=\"modal-title modalTitle\" id=\"modal-basic-title\">{{_joinModalDto.ModalHeader}} Components</h4>\r\n    <button type=\"button\" class=\"close modalClose\" aria-label=\"Close\" (click)=\"Close()\">\r\n      <span aria-hidden=\"true\">×</span>\r\n    </button>\r\n  </div>\r\n  <div class=\"modal-body\">\r\n    <div class=\"row\" style=\"font-size:11px;\">\r\n        <div class=\"col-sm-2 padTxtTop\">\r\n          <label class=\"lbl\">Component One</label>\r\n        </div>\r\n        <div class=\"col-sm-3 padTxtTop\">\r\n            {{JoinModal.Component}}\r\n        </div>\r\n        <div class=\"col-sm-2 padTxtTop\">\r\n            <label class=\"lbl\">Component Two</label>\r\n        </div>\r\n        <div class=\"col-sm-4\">\r\n            <ng-select class=\"selectStyle\"\r\n            [items]=\"JoinModal.CompNames\"\r\n            bindLabel=\"Value\"\r\n            placeholder=\"Please select a Component\"\r\n            bindValue=\"Id\"\r\n            clearable=\"true\"\r\n            [(ngModel)]=\"JoinModal.JoinCompId\"          \r\n            clearAllText=\"Clear\">\r\n        </ng-select>\r\n        </div>\r\n        <div class=\"col-sm-1\">\r\n            <button type=\"button\" class=\"btn btn btn-info btn-sm\" (click)=\"CompTwoChange()\" >+</button>\r\n        </div>\r\n  </div>\r\n  <ng-container *ngFor=\"let jm of JoinModal.JoinCriteria;let j - index\">\r\n           \r\n    <div class=\"row padTxtTop\" style=\"margin-top:20px; margin-bottom:20px;\" >\r\n      <div class=\"col-sm-1\"  *ngIf=\"JoinModal.IsMerge\">&nbsp;</div>\r\n      <div class=\"col-sm-3\" *ngIf=\"JoinModal.IsMerge\">\r\n        <label class=\"lbl\">{{jm.CompOneDisplay}}</label>\r\n      </div>\r\n\r\n      <div class=\"col-sm-5\" *ngIf=\"!JoinModal.IsMerge\">\r\n        <ng-select \r\n            class=\"selectStyle\"\r\n            [items]=\"jm.ComponentOneHeaders\"\r\n            bindLabel=\"Value\"\r\n            [(ngModel)]=\"jm.CompOneSelected\"\r\n            placeholder=\"Please select ComponentOne Field\"\r\n            bindValue=\"Id\"\r\n            clearable=\"true\"          \r\n            clearAllText=\"Clear\">\r\n            </ng-select>\r\n      </div>\r\n\r\n        <div class=\"col-sm-5\">\r\n            <ng-select \r\n            class=\"selectStyle\"\r\n            [items]=\"jm.ComponentTwoHeaders\"\r\n            bindLabel=\"Value\"\r\n            [(ngModel)]=\"jm.CompTwoSelected\"\r\n            placeholder=\"Please select ComponentTwo Field\"\r\n            bindValue=\"Id\"\r\n            clearable=\"true\"          \r\n            clearAllText=\"Clear\">\r\n            </ng-select>\r\n        </div>\r\n        <div class=\"col-sm-2\">\r\n          <button type=\"button\" class=\"btn btn btn-info btn-sm crossBtn\" (click)=\"onJoinCondition(jm)\">x</button> \r\n         </div>\r\n    </div>\r\n  </ng-container>\r\n  <div class=\"row\" *ngIf=\"JoinVisible\">\r\n    <div class=\"col-sm-10\"></div>\r\n    <div class=\"col-sm-2\">\r\n      <button type=\"button\" class=\"btn btn btn-info btn-sm\" (click)=\"Join()\" >{{_joinModalDto.ModalHeader}}</button>\r\n       \r\n    </div>\r\n  </div>\r\n  \r\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\r\nimport { ComponentsDto } from '../../../../Models/Dtos/Cleansing/components-dto';\r\nimport { MapLkpDto } from '../../../../Models/Dtos/Cleansing/map-lkp-dto'\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { RowTypeDto } from '../../../../Models/Dtos/Cleansing/row-type-dto';\r\nimport { LookupDto, StrLookupDto } from '../../../../Models/Dtos/str-lookup-dto';\r\n\r\n@Component({\r\n  selector: 'app-map-lkp',\r\n  templateUrl: './map-lkp.component.html',\r\n  styleUrls: ['./map-lkp.component.css']\r\n})\r\nexport class MapLkpComponent implements OnInit {\r\n  public MapModalDto : MapLkpDto;\r\n  private _components : ComponentsDto[];\r\n  public MapVisible : boolean;\r\n  constructor(private _modalService: NgbModal) { }\r\n\r\n  @Input() set MapModal(value: MapLkpDto) {\r\n    this.MapModalDto = value;\r\n  }\r\n\r\n  get MapModal(): MapLkpDto{\r\n    return this.MapModalDto;\r\n  }\r\n\r\n  @Input() set Components(value: ComponentsDto[]) {\r\n    this._components = value;\r\n  }\r\n\r\n  @Output() MapComplete = new EventEmitter<MapLkpDto>();\r\n\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  public Close()\r\n  {\r\n    this._modalService.dismissAll();\r\n  }\r\n\r\n  public CompTwoChange()\r\n  {\r\n    debugger;\r\n    this.MapVisible = true;\r\n \r\n    var components = this.GetComponents();\r\n\r\n    var componentTwoRow = components[1].rows[0];\r\n    this.MapModalDto.CompTwoNames = this.SetCompNames(componentTwoRow);\r\n    this.MapModalDto.CompTwoIdx = components[1].componentId;\r\n    this.MapModalDto.CompTwoWsIdx = components[1].componentOptions.workSheetId;\r\n \r\n  }\r\n\r\n  public Map()\r\n  {\r\n    this.MapComplete.emit(this.MapModalDto);\r\n    this.Close();\r\n  }\r\n\r\n  private GetComponents() \r\n  {\r\n    var joinId = this.MapModalDto.JoinCompId;\r\n    var compTwo = this.MapModalDto.CompNames.find(x=> x.ComponentId == joinId)!;\r\n\r\n    var componentOne = this._components.find(x=> x.componentId == this.MapModalDto.ComponentId)!;\r\n    var componentTwo = this._components.find(x=> x.componentId == compTwo.ComponentId)!;\r\n \r\n    var components : ComponentsDto[] = [];\r\n    components.push(componentOne);\r\n    components.push(componentTwo);\r\n    return components;\r\n  }\r\n\r\n  private SetCompNames(row : RowTypeDto) : LookupDto[]\r\n  {\r\n    var headers : LookupDto[] = [];\r\n    row.cells.forEach(cell=>\r\n    {\r\n      var headerLkp = new LookupDto({ Id:cell.colIdx, Value:cell.cellValue})\r\n      headers.push(headerLkp);\r\n    })\r\n    \r\n    return headers;\r\n  }\r\n\r\n}\r\n","<div class=\"modal-header bg-dark modal-lg\">\r\n    <h4 class=\"modal-title modalTitle\" id=\"modal-basic-title\">{{MapModalDto.ModalHeader}} Component</h4>\r\n    <button type=\"button\" class=\"close modalClose\" aria-label=\"Close\" (click)=\"Close()\">\r\n      <span aria-hidden=\"true\">×</span>\r\n    </button>\r\n</div>\r\n\r\n<div class=\"modal-body\">\r\n    <div class=\"row\" style=\"font-size:11px;\">\r\n          \r\n        <div class=\"col-sm-1 padTxtTop\" style=\"font-weight: bold;\">\r\n            Map\r\n        </div>\r\n        <div class=\"col-sm-3 padTxtTop\" >\r\n            {{MapModalDto.Component}} ({{MapModalDto.CompOneColName}})\r\n        </div>\r\n        <div class=\"col-sm-2 padTxtTop\" style=\"font-weight: bold;\">\r\n            <label class=\"lbl\">Component Two</label>\r\n        </div>\r\n        <div class=\"col-sm-4\">\r\n            <ng-select class=\"selectStyle\"\r\n            [items]=\"MapModalDto.CompNames\"\r\n            bindLabel=\"Value\"\r\n            placeholder=\"Please select a Component\"\r\n            bindValue=\"ComponentId\"\r\n            clearable=\"true\"\r\n            [(ngModel)]=\"MapModalDto.JoinCompId\"          \r\n            clearAllText=\"Clear\">\r\n        </ng-select>\r\n        </div>\r\n        <div class=\"col-sm-1\">\r\n            <button type=\"button\" class=\"btn btn btn-info btn-sm\" (click)=\"CompTwoChange()\">+</button>\r\n        </div>\r\n  </div>\r\n\r\n  <div class=\"row\" *ngIf=\"MapVisible\" style=\"font-size:11px;margin-top:20px; margin-bottom:20px;\">\r\n    <div class=\"col-sm-2 padTxtTop\">\r\n        Map Column\r\n    </div>\r\n\r\n    <div class=\"col-sm-4\">\r\n        <ng-select class=\"selectStyle\"\r\n        [items]=\"MapModalDto.CompTwoNames\"\r\n        bindLabel=\"Value\"\r\n        placeholder=\"Please select a Map Column\"\r\n        bindValue=\"Id\"\r\n        clearable=\"true\"\r\n        [(ngModel)]=\"MapModalDto.MapColumn\"          \r\n        clearAllText=\"Clear\">\r\n        </ng-select>\r\n    </div>\r\n\r\n    <div class=\"col-sm-2 padTxtTop\" >\r\n        Value Column\r\n    </div>\r\n    <div class=\"col-sm-4\">\r\n        <ng-select class=\"selectStyle\"\r\n        [items]=\"MapModalDto.CompTwoNames\"\r\n        bindLabel=\"Value\"\r\n        placeholder=\"Please select a Value Column\"\r\n        bindValue=\"Id\"\r\n        clearable=\"true\"\r\n        [(ngModel)]=\"MapModalDto.ValueColumn\"          \r\n        clearAllText=\"Clear\">\r\n        </ng-select>\r\n    </div>\r\n</div>\r\n\r\n<div class=\"row\" *ngIf=\"MapVisible\">\r\n    <div class=\"col-sm-9\"></div>\r\n    <div class=\"col-sm-3\">\r\n      <button type=\"button\" class=\"btn btn btn-info btn-sm\" (click)=\"Map()\" >Map Column</button>\r\n       \r\n    </div>\r\n</div>\r\n\r\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\r\nimport { MapHeaderDto } from \"../../../Models/Dtos/map-header-dto\";\r\n\r\n@Component({\r\n  selector: 'app-numeric-ctrl',\r\n  templateUrl: './numeric-ctrl.component.html',\r\n  styleUrls: ['./numeric-ctrl.component.css']\r\n})\r\nexport class NumericCtrlComponent implements OnInit {\r\n  @Input() \r\n  Mapping : MapHeaderDto;\r\n\r\n  @Output() \r\n  valueChange = new EventEmitter();\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  public Add()\r\n  {\r\n    this.Mapping.priority++;\r\n    this.valueChange.emit(this.Mapping);\r\n  }\r\n\r\n  public Down()\r\n  {\r\n    if (this.Mapping.priority == 1)\r\n      return;\r\n\r\n    this.Mapping.priority--;\r\n\r\n    this.valueChange.emit(this.Mapping);\r\n  }\r\n\r\n}\r\n","<div class=\"row\">\r\n    <div class=\"col-xs-1\">\r\n        <button class=\"fa-override\" style=\"background-color :transparent; border:none;outline: none !important;\" (click)=\"Add()\">\r\n            <i class=\"fa fa-arrow-up padUp\"></i>\r\n        </button>\r\n    </div>\r\n    <div class=\"col-xs-10\"><input type=\"text\" value=\"{{Mapping.priority}}\" class=\"numTxt\" readonly /></div>\r\n    <div class=\"col-xs-1\">\r\n        <button class=\"fa-override\" style=\"background-color :transparent; border:none;outline: none !important;\" (click)=\"Down()\">\r\n            <i class=\"fa fa-arrow-down padDown\"></i>\r\n        </button>\r\n    </div>\r\n\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-encoders',\r\n  templateUrl: './encoders.component.html',\r\n  styleUrls: ['./encoders.component.css']\r\n})\r\nexport class EncodersComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<p>encoders works!</p>\r\n","<ng-template #newTemplate let-modal>\r\n    <div class=\"modal-header bg-dark modal-lg\">\r\n      <h4 class=\"modal-title modalTitle\" id=\"modal-basic-title\">New Template</h4>\r\n      <button type=\"button\" class=\"close modalClose\" aria-label=\"Close\" (click)=\"modal.dismiss('Cross click')\">\r\n        <span aria-hidden=\"true\">×</span>\r\n      </button>\r\n    </div>\r\n    <div class=\"modal-body\">\r\n    <form [formGroup]=\"NewForm\">\r\n      <div class=\"row\">\r\n        <div class=\"col-sm-2\">\r\n            <label class=\"padTop\">Name</label>\r\n        </div>\r\n        <div class=\"col-sm-6\">\r\n            <input type=\"text\" class=\"form-control txtSmall\" name=\"name\" formControlName=\"name\"  />\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"row padTxtTop margTop\">\r\n        <div class=\"col-sm-3\">\r\n          <button class=\"btn-sm btn-success btn-outline-rounded btn-info\" [disabled]=\"!NewForm.valid\" (click)=\"Create()\">Create</button>\r\n        </div>\r\n      </div>\r\n    </form>\r\n</div>\r\n\r\n</ng-template>\r\n\r\n<div class=\"sectionHeader\">\r\n    <div class=\"sectionContent\">\r\n        <div class=\"row padBtmBtns\">\r\n            <div class=\"col-sm-4\">\r\n               <button class=\"btn btn-info btn-square btn-sm margLeft\" (click)=\"New()\" >New</button>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"sectionContent\">\r\n        <div class=\"row tblMargin\">\r\n            <div class=\"sectionContent sectionTop\">\r\n                <ag-grid-angular\r\n                    *ngIf=\"HasLoaded\"\r\n                    style=\"width: 377px;\"\r\n                    class=\"ag-theme-balham marg\"\r\n                    [rowData]=\"Encoders\"\r\n                    [columnDefs]=\"ColumnDefs\"\r\n                    [gridOptions]=\"Options\"\r\n                    (cellDoubleClicked)='onCellClicked($event)'\r\n                    [rowSelection]=\"RowSelection\"\r\n                    [overlayNoRowsTemplate]=\"NoRowsTemplate\"\r\n                    (gridReady)=\"onGridReady($event)\">\r\n                  </ag-grid-angular>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n","import { Component, OnInit, TemplateRef, ViewChild } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { GridOptions } from 'ag-grid-community';\r\nimport { RouterLinkComponent } from 'src/app/AgGrid/router-link/router-link.component';\r\nimport { EncoderBl } from 'src/app/Bl/encoder-bl';\r\nimport { AuthenticationService } from 'src/app/Data/authentication-service';\r\nimport { EncoderDto } from 'src/app/Models/Dtos/encoder-dto';\r\nimport { MessageService } from 'src/app/Services/message-service';\r\n\r\n@Component({\r\n  selector: 'app-view-encoders',\r\n  templateUrl: './view-encoders.component.html',\r\n  styleUrls: ['./view-encoders.component.css']\r\n})\r\nexport class ViewEncodersComponent implements OnInit {\r\n  @ViewChild('newTemplate',{static: true}) newElement : TemplateRef<any>;\r\n  public HasLoaded : boolean;\r\n  public NoRowsTemplate =\r\n  \"<span style='font-weight:bold; color:#17a2b8; font-size:12px'>No Encoders Returned</span>\";\r\n\r\n  public ColumnDefs = [\r\n    {headerName: 'Encoder Id', field: 'encoderId', width:100, headerClass:'ag-custom-header',pinned: 'left' },\r\n\r\n    {headerName: 'Encoder Name', field: 'name', width:275, headerClass:'ag-custom-header', resizable: true},\r\n  \r\n  ];\r\n\r\n  public NewForm: FormGroup;\r\n  public Encoders : EncoderDto[];\r\n  private _gridApi : any;\r\n  public Options:GridOptions;\r\n  public RowSelection : string = 'single';\r\n  constructor(private _encoderBl : EncoderBl,\r\n    private _authenticationService : AuthenticationService,\r\n    private _router : Router,\r\n    private _modalService: NgbModal,\r\n    private _formBuilder: FormBuilder,\r\n    private _messagingService : MessageService) { }\r\n\r\n    \r\n  async ngOnInit() {\r\n    this.initGrid();\r\n    await this.Load();\r\n\r\n    this.NewForm = this._formBuilder.group({\r\n      name: ['', Validators.required]\r\n    });\r\n  }\r\n\r\n  private initGrid()\r\n  {\r\n    this.Options = <GridOptions>{\r\n   \r\n      getRowStyle: (params) => {\r\n        if (params.node.rowIndex % 2 === 0) {\r\n          return {background: '#e7e7e7'};\r\n        }\r\n      }\r\n    };\r\n  }\r\n  \r\n  onGridReady(params) {\r\n    this._gridApi = params.api;\r\n    params.api.setDomLayout('autoHeight');\r\n  }\r\n\r\n  onCellClicked(params)\r\n  {\r\n    var encoderId = params.data.encoderId;\r\n    this._router.navigate(['/Encoder', encoderId]);\r\n  }\r\n\r\n  public New()\r\n  {\r\n    this._modalService.open(this.newElement, { ariaLabelledBy: 'modal-basic-title'});\r\n  }\r\n\r\n  private async LoadEncoder(encoder : EncoderDto)\r\n  {\r\n    debugger;\r\n  }\r\n\r\n  public async Load()\r\n  {\r\n    this._messagingService.LoadingMsg(true);\r\n    var user = this._authenticationService.currentUserValue;\r\n\r\n    var result = await this._encoderBl.Get(user.client.clientId);\r\n    this.Encoders = result.encoders;\r\n    this._messagingService.LoadingMsg(false);\r\n\r\n    this.HasLoaded = true;\r\n  }\r\n\r\n  public async Create()\r\n  {\r\n    var ctrls = this.NewForm.controls;\r\n    var name = ctrls['name'].value;\r\n    \r\n    var client = this._authenticationService.currentUserValue.client;\r\n\r\n    var response = await this._encoderBl.Create(name, client);\r\n    this._modalService.dismissAll();\r\n\r\n    if (response.status)\r\n    {\r\n      var encoderId = response.encoderId;\r\n      this._router.navigate(['/Encoder', encoderId]);\r\n    }\r\n  }\r\n}\r\n","import { Component, Input } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-bar',\r\n  templateUrl: './bar.component.html',\r\n  styleUrls: ['./bar.component.css']\r\n})\r\nexport class BarComponent{\r\n  @Input() value: number = 0\r\n\r\n  constructor() { }\r\n\r\n\r\n}\r\n","<div [ngStyle]=\"{'width': value + '%'}\" class=\"bar\"></div>\r\n","<div class=\"col-md-6 offset-md-3 mt-5\">\r\n  \r\n\r\n    <div class=\"card\">\r\n        <h4 class=\"card-header bg fnt\">First Time Login - Change Password</h4>\r\n        <div class=\"card-body\">\r\n           \r\n            <form [formGroup]=\"PwdForm\" (ngSubmit)=\"OnSubmit()\">\r\n                <span class=\"errorMsg margLeftOne\"*ngIf=\"PwdForm.hasError('notSame')\">\r\n                    Password Do Not Match\r\n                </span>\r\n\r\n                <div class=\"form-group\">\r\n                    <label for=\"username\">Password</label>\r\n                    <input type=\"password\" formControlName=\"password\" class=\"form-control\"  />\r\n                </div>\r\n                <div class=\"form-group\">\r\n                    <label for=\"password\">Confirm Password</label>\r\n                    <input type=\"password\" formControlName=\"confirm\" class=\"form-control\"/>\r\n                    <!-- <div *ngIf=\"submitted && f.password.errors\" class=\"invalid-feedback\">\r\n                        <div *ngIf=\"f.password.errors.required\">Password is required</div>\r\n                    </div> -->\r\n                </div>\r\n                 <button  class=\"btn-sm btn-info btn-outline-rounded\" [disabled]=\"!PwdForm.valid\">\r\n                    Update Password\r\n                </button> \r\n             </form>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { AuthenticationService } from '../../Data/authentication-service';\r\nimport { ChangePwdRequest } from '../../Models/Requests/change-pwd-request';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-change-pwd',\r\n  templateUrl: './change-pwd.component.html',\r\n  styleUrls: ['./change-pwd.component.css']\r\n})\r\nexport class ChangePwdComponent implements OnInit {\r\n  public PwdForm: FormGroup;\r\n\r\n  private _returnUrl : string;\r\n  constructor(private _formBuilder: FormBuilder, \r\n    private _authenticationService : AuthenticationService,\r\n    private _router : Router,\r\n    private _route: ActivatedRoute) { }\r\n\r\n\r\n  ngOnInit() {\r\n\r\n    this._returnUrl = this._route.snapshot.queryParams['returnUrl'] \r\n\r\n    this.PwdForm = this._formBuilder.group({\r\n      password: ['', Validators.required],\r\n      confirm: ['']\r\n    }, { validator: this.checkPasswords });\r\n  }\r\n\r\n \r\n  private checkPasswords(group: FormGroup) { // here we have the 'passwords' group\r\n    let pass = group.controls.password.value;\r\n    let confirmPass = group.controls.confirm.value;\r\n\r\n    return pass === confirmPass ? null : { notSame: true }\r\n  }\r\n\r\n  public async OnSubmit() \r\n  {\r\n    var ctrls = this.PwdForm.controls;\r\n\r\n    var pwd = ctrls['password'].value;\r\n    var request = new ChangePwdRequest({ Pwd : pwd });\r\n    var response = await this._authenticationService.ChangePwd(request);\r\n\r\n    if (response.status)\r\n    {\r\n  \r\n      if (!this._returnUrl)\r\n        this._returnUrl = \"/manager\";\r\n\r\n      this._router.navigate([this._returnUrl]);\r\n\r\n    }\r\n  }\r\n\r\n}\r\n","<ng-template #replayTemplate let-modal>\r\n  <div class=\"modal-header bg-dark modal-lg\">\r\n    <h4 class=\"modal-title modalTitle\" id=\"modal-basic-title\">Replay</h4>\r\n    <button type=\"button\" class=\"close modalClose\" aria-label=\"lose\" (click)=\"modal.dismiss('Cross click')\">\r\n      <span aria-hidden=\"true\">×</span>\r\n    </button>\r\n    </div>\r\n     <div class=\"modal-body\">\r\n      <form [formGroup]=\"NewForm\">\r\n        <div class=\"row\">\r\n          <div class=\"col-sm-2\">\r\n              <label class=\"padTop\">Name</label>\r\n          </div>\r\n          <div class=\"col-sm-6\">\r\n              <input type=\"text\" class=\"form-control txtSmall\" name=\"name\" formControlName=\"name\"  />\r\n          </div>\r\n        </div>\r\n  \r\n        <div class=\"row\">\r\n          <div class=\"col-sm-2 padTop\">\r\n              <label class=\"padTop\">File</label>\r\n          </div>\r\n  \r\n          <div class=\"col-sm-6 padTop\">\r\n             <!-- <button class=\"btn-sm btn-success btn-outline-rounded btn-info\" (click)=\"Upload()\"> Upload </button>-->\r\n              <input type=\"file\" #fileInput ng2FileSelect [uploader]=\"uploader\" style=\"font-size: 12px !important;\" (onFileSelected)=\"onFileSelected($event)\" />\r\n          </div>\r\n        </div>\r\n  \r\n        <div class=\"row padTxtTop margTop\">\r\n          <div class=\"col-sm-3\">\r\n            <button class=\"btn-sm btn-success btn-outline-rounded btn-info\" [disabled]=\"!NewForm.valid\" (click)=\"ReplayBtn()\"> Replay </button>\r\n          </div>\r\n        </div>\r\n      </form>\r\n  </div>\r\n</ng-template>\r\n\r\n<ng-template #newTemplate let-modal>\r\n    <div class=\"modal-header bg-dark modal-lg\">\r\n      <h4 class=\"modal-title modalTitle\" id=\"modal-basic-title\">{{Operation}} Cleansed Import</h4>\r\n      <button type=\"button\" class=\"close modalClose\" aria-label=\"Close\" (click)=\"modal.dismiss('Cross click')\">\r\n        <span aria-hidden=\"true\">×</span>\r\n      </button>\r\n    </div>\r\n    <div class=\"modal-body\">\r\n    <form [formGroup]=\"NewForm\">\r\n      <div class=\"row\">\r\n        <div class=\"col-sm-2\">\r\n            <label class=\"padTop\">Name</label>\r\n        </div>\r\n        <div class=\"col-sm-6\">\r\n            <input type=\"text\" class=\"form-control txtSmall\" name=\"name\" formControlName=\"name\"  />\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"row\">\r\n        <div class=\"col-sm-2 padTop\">\r\n            <label class=\"padTop\">File</label>\r\n        </div>\r\n\r\n        <div class=\"col-sm-6 padTop\">\r\n           <!-- <button class=\"btn-sm btn-success btn-outline-rounded btn-info\" (click)=\"Upload()\"> Upload </button>-->\r\n            <input type=\"file\" #fileInput ng2FileSelect [uploader]=\"uploader\" style=\"font-size: 12px !important;\" (onFileSelected)=\"onFileSelected($event)\" />\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"row padTxtTop margTop\">\r\n        <div class=\"col-sm-3\">\r\n          <button class=\"btn-sm btn-success btn-outline-rounded btn-info\" [disabled]=\"!NewForm.valid\" (click)=\"Save()\"> Save </button>\r\n        </div>\r\n      </div>\r\n    </form>\r\n</div>\r\n\r\n</ng-template>\r\n\r\n<div class=\"sectionHeader\">\r\n\r\n    <div class=\"sectionContent\">\r\n        <div class=\"row padBtmBtns\">\r\n          <div class=\"col-sm-4\">\r\n              <button class=\"btn btn-info btn-square btn-sm margLeft\" (click)=\"Refresh()\" >Refresh</button>\r\n              <button class=\"btn btn-info btn-square btn-sm margLeft\" (click)=\"New()\" >New</button>\r\n           </div>\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"sectionContent\">\r\n        <div class=\"row tblMargin\">\r\n            <div class=\"sectionContent sectionTop\">\r\n                <ag-grid-angular\r\n                    *ngIf=\"HasLoaded\"\r\n                    style=\"width: 1042px;\"\r\n                    class=\"ag-theme-balham marg\"\r\n                    [rowData]=\"CleansedMgrs\"\r\n                    [columnDefs]=\"ColumnDefs\"\r\n                    [gridOptions]=\"Options\"\r\n                    (cellDoubleClicked)='onCellClicked($event)'\r\n                    [rowSelection]=\"RowSelection\"\r\n                    [overlayNoRowsTemplate]=\"NoRowsTemplate\"\r\n                    (gridReady)=\"onGridReady($event)\">\r\n                  </ag-grid-angular>\r\n                  <div class=\"marg\">\r\n                    <app-pager [Paging]=\"Paging\" [TypeId]=\"2\" (PagingChanged)=\"PageChanged($event)\"></app-pager>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n","import { AfterViewInit, Component, EventEmitter, OnInit,TemplateRef, ViewChild } from '@angular/core';\r\nimport { GridOptions } from 'ag-grid-community';\r\nimport { CleansingBl } from '../../Bl/cleansing-bl';\r\nimport { AuthenticationService } from '../../Data/authentication-service';\r\nimport { MessageService } from '../../Services/message-service';\r\nimport * as moment from 'moment';\r\nimport { Status } from '../../Models/Enums/status.enum';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { FileUploader } from 'ng2-file-upload';\r\nimport { Router } from '@angular/router';\r\nimport { PagingRequest } from '../../Models/Requests/paging-request';\r\nimport { PagingBl } from '../../Bl/paging-bl';\r\nimport { PagingResponse } from '../../Models/Response/paging-response';\r\nimport { PagingDto } from '../../Models/Dtos/paging-dto';\r\nimport { CleansedMgrDto } from '../../Models/Dtos/cleansed-mgr-dto';\r\nimport { RouterLinkComponent } from '../../AgGrid/router-link/router-link.component';\r\n\r\n@Component({\r\n  selector: 'app-cleanse-mgr',\r\n  templateUrl: './cleanse-mgr.component.html',\r\n  styleUrls: ['./cleanse-mgr.component.css']\r\n})\r\nexport class CleanseMgrComponent implements OnInit, AfterViewInit {\r\n  @ViewChild('newTemplate',{static: true}) newElement : TemplateRef<any>;\r\n  @ViewChild('replayTemplate',{static: true}) replayElement : TemplateRef<any>;\r\n\r\n  public NoRowsTemplate =\r\n  \"<span style='font-weight:bold; color:#17a2b8; font-size:12px'>No Records Returned</span>\";\r\n\r\n  public NewForm: FormGroup;\r\n  public Operation : string;\r\n  public Options:GridOptions;\r\n  public RowSelection : string = 'single';\r\n  private _file : File;\r\n  private _gridApi : any;\r\n  public Paging : PagingResponse;\r\n  public HasLoaded : boolean;\r\n  public CleansedMgrs : CleansedMgrDto[];\r\n\r\n  public ColumnDefs = [\r\n    {headerName: 'Id', field: 'cleansedMgrId', width:100, headerClass:'ag-custom-header',pinned: 'left' },\r\n    {headerName: 'Name', field: 'name', width:275, headerClass:'ag-custom-header', resizable: true},\r\n    {headerName: 'Status', field: 'status' , width:120,headerClass:'ag-custom-header',resizable: true, valueGetter: function(params) {\r\n    \r\n      var st = Status;\r\n      if (params.data)\r\n        return st[params.data.status]\r\n      \r\n      return st[1];\r\n    }},\r\n    {headerName: 'User', field: 'user.name', width:275, headerClass:'ag-custom-header', resizable: true},\r\n    {headerName: 'Created Date', field: 'created', width:130, headerClass:'ag-custom-header', resizable: true,\r\n    cellRenderer: (data) => {\r\n      return moment(data.received).format('DD/MM/YYYY')\r\n    }},\r\n    {headerName: '', field: 'cleansedMgrId', width:140, headerClass:'ag-custom-header', resizable: true,\r\n    cellRendererFramework: RouterLinkComponent,\r\n    cellRendererParams: {\r\n      onClick: function(cleansedMgrDto : CleansedMgrDto)\r\n      {\r\n        this.Replay(cleansedMgrDto);\r\n      }.bind(this),\r\n      label: 'Replay'\r\n    }},\r\n  ];\r\n  constructor(private _messagingService : MessageService,\r\n    private _authenticationService : AuthenticationService, \r\n    private _cleansingBl : CleansingBl,\r\n    private _formBuilder: FormBuilder,\r\n    private _modalService: NgbModal,\r\n    private _router : Router,\r\n    private _pagingBl : PagingBl) { }\r\n\r\n  async ngOnInit() {\r\n    await this.initPager();\r\n    this.initGrid();\r\n\r\n\r\n    this.NewForm = this._formBuilder.group({\r\n      name: ['', Validators.required],\r\n      file: ['', Validators.required],\r\n      user: ['', Validators.required],\r\n      userId : ['',Validators.required],\r\n      status : ['', Validators.required],\r\n      replayId : ['']\r\n    });\r\n   \r\n  }\r\n\r\n  public async ReplayBtn()\r\n  {\r\n    var ctrls = this.NewForm.controls;\r\n    var name = ctrls['name'].value;\r\n    var replayId = ctrls[\"replayId\"].value;\r\n    var userId = this._authenticationService.currentUserValue.userId;\r\n    var response = await this._cleansingBl.New(name, userId, this._file);\r\n    this._modalService.dismissAll();\r\n\r\n    if (response.status)\r\n    {\r\n      var cleansedMgrId = response.cleansedMgrId;\r\n      debugger;\r\n      var replayResponse = await this._cleansingBl.Replay(cleansedMgrId, replayId, name, this._file, this._authenticationService.currentUserValue);\r\n \r\n      this._router.navigate(['/clean', cleansedMgrId]);\r\n    }\r\n  }\r\n\r\n  private Replay(cleansedMgrDto : CleansedMgrDto)\r\n  {\r\n    this.setFormValues(cleansedMgrDto);\r\n    this._modalService.open(this.replayElement, { ariaLabelledBy: 'modal-basic-title'});\r\n  }\r\n\r\n  private async initPager()\r\n  {\r\n    var pagingRequest = new PagingRequest ({ TypeId : 2,  Filters : \"\", Current : 1, RecsPerPage : 20 });\r\n    await this.PageInit(pagingRequest);\r\n  }\r\n\r\n  private async PageInit(pagingRequest : PagingRequest)\r\n  {\r\n    var userId =  this._authenticationService.currentUserValue.userId;\r\n    var response = await this._pagingBl.PageCleansed(pagingRequest, userId);\r\n    \r\n    this.Paging = response;\r\n  }\r\n\r\n  public Refresh()\r\n  {\r\n\r\n  }\r\n\r\n  private initGrid()\r\n  {\r\n    this.Options = <GridOptions>{\r\n   \r\n      getRowStyle: (params) => {\r\n        if (params.node.rowIndex % 2 === 0) {\r\n          return {background: '#e7e7e7'};\r\n        }\r\n      }\r\n    };\r\n  }\r\n\r\n  onGridReady(params) {\r\n    this._gridApi = params.api;\r\n    params.api.setDomLayout('autoHeight');\r\n  }\r\n\r\n  ngAfterViewInit() \r\n  {\r\n    //this.Get(1, null);\r\n  }\r\n  public async PageChanged(pagingDto : PagingDto)\r\n  {\r\n    await this.GetNew(pagingDto);\r\n  }\r\n\r\n  public New()\r\n  {\r\n    this.Operation = \"New\";\r\n\r\n    this._modalService.open(this.newElement, { ariaLabelledBy: 'modal-basic-title'});\r\n\r\n    this.setFormValuesCommon();\r\n  }\r\n\r\n\r\n  private async GetNew(pagingDto : PagingDto)\r\n  {\r\n    this._messagingService.LoadingMsg(true);\r\n    this._authenticationService.currentUserValue.userId;\r\n\r\n    var response = await this._cleansingBl.Get(pagingDto, this._authenticationService.currentUserValue.userId);\r\n    \r\n    this.CleansedMgrs = response.cleansedMgrs\r\n\r\n    //this._gridApi.setDomLayout('autoHeight');\r\n\r\n    this._messagingService.LoadingMsg(false);\r\n    this.HasLoaded = true;\r\n  }\r\n\r\n  private setFormValues(cleansedMgrDto : CleansedMgrDto)\r\n  {\r\n    var ctrls = this.NewForm.controls;\r\n    \r\n   \r\n    ctrls['replayId'].setValue(cleansedMgrDto.cleansedMgrId);\r\n    this.setFormValuesCommon();\r\n  }\r\n\r\n  private setFormValuesCommon()\r\n  {\r\n    var ctrls = this.NewForm.controls;\r\n    \r\n    ctrls['user'].setValue(this._authenticationService.currentUserValue.userName);\r\n    ctrls['userId'].setValue(this._authenticationService.currentUserValue.userId);\r\n    ctrls['status'].setValue(Status.Imported);\r\n  }\r\n\r\n  public uploader: FileUploader = new FileUploader({\r\n    url: '',\r\n        disableMultipart : false,\r\n        autoUpload: false,\r\n        method: 'post',\r\n        itemAlias: 'attachment'\r\n\r\n  });\r\n\r\n  public onFileSelected(event: EventEmitter<File[]>) {\r\n    const file: File = event[0];\r\n    console.log(file);\r\n    var ctrls = this.NewForm.controls;\r\n    ctrls['file'].setValue(file.name);\r\n    this._file = file;\r\n  }\r\n\r\n  public async Save()\r\n  {\r\n    var ctrls = this.NewForm.controls;\r\n    var name = ctrls['name'].value;\r\n    \r\n    var userId = this._authenticationService.currentUserValue.userId;\r\n    var response = await this._cleansingBl.New(name, userId, this._file);\r\n    this._modalService.dismissAll();\r\n\r\n    if (response.status)\r\n    {\r\n      var cleansedMgrId = response.cleansedMgrId;\r\n      this._router.navigate(['/clean', cleansedMgrId]);\r\n    }\r\n  }\r\n\r\n  onCellClicked(params)\r\n  {\r\n    var cleansedMgrId = params.data.cleansedMgrId;\r\n    this._router.navigate(['/clean', cleansedMgrId]);\r\n  }\r\n\r\n}\r\n","<ng-template #joinTemplate let-modal>\r\n    <app-join [JoinModal]=\"JoinModalDto\" [Components]=\"Components\" (JoinComplete)=\"JoinComplete($event)\"></app-join>\r\n</ng-template>\r\n\r\n<ng-template #mapTemplate let-modal>\r\n    <app-map-lkp [MapModal]=\"MapLkpDto\" [Components]=\"Components\" (MapComplete)=\"MapComplete($event)\"></app-map-lkp>\r\n</ng-template>\r\n\r\n<div id=\"OpHistory\" class=\"OpHistory\">\r\n    <button type=\"button\" class=\"close modalClose closebtn\" aria-label=\"Close\" (click)=\"CloseOpHistory()\">\r\n      <span aria-hidden=\"true\" style=\"font-size: 14px;\">×</span>\r\n    </button>\r\n    <h4 class=\"modal-title modalTtle header\" id=\"modal-basic-title\">Operation History</h4>\r\n    <div class=\"modal-body\">\r\n        <table class=\"\" >\r\n            <tr  class=\"componentTr\" style=\"background-color:black;\">\r\n                <td class=\"OpHeader componentTd\">\r\n                    Operation\r\n                </td>   \r\n                <td class=\"OpHeader componentTd\">\r\n                    Sheet\r\n                </td> \r\n                <td class=\"OpHeader componentTd\">\r\n                    Comp\r\n                </td>   \r\n                <td class=\"OpHeader componentTd\">\r\n                    Field\r\n                </td>\r\n                <td class=\"componentTd OpHeader\">&nbsp; </td>                     \r\n            </tr>\r\n            <ng-container *ngFor=\"let op of Operations;let j - index\">\r\n                <tr class=\"componentTr\">\r\n                \r\n                        <td class=\"componentTd opRow\">{{op.operationType.name}}</td>\r\n                    \r\n                        <td class=\"componentTd opRow\">{{op.workSheet}}</td>\r\n                   \r\n                        <td class=\"componentTd opRow\">{{op.component}}</td>\r\n\r\n                        <td class=\"componentTd opRow\">{{op.fieldName}}</td>\r\n\r\n                        <td>\r\n                            <button type=\"button\" class=\"close modalClose blk\" aria-label=\"Close\" (click)=\"DeleteOp(op.operationsId)\">\r\n                                <span aria-hidden=\"true\" style=\"font-size: 11px;\">×</span>\r\n                            </button>\r\n                        </td>\r\n\r\n                </tr>\r\n            </ng-container>\r\n        </table>\r\n    </div>\r\n</div>\r\n\r\n<ng-template #validationsTemplate let-modal>\r\n    <div class=\"modal-header bg-dark modal-lg\">\r\n        <h4 class=\"modal-title modalTitle\" id=\"modal-basic-title\">Join Validation Errors</h4>\r\n        <button type=\"button\" class=\"close modalClose\" aria-label=\"Close\" (click)=\"Close()\">\r\n          <span aria-hidden=\"true\">×</span>\r\n        </button>\r\n    </div>\r\n    <div class=\"modal-body\">\r\n        <table class=\"table table-striped tblMargin\">\r\n            <thead>\r\n                <tr>\r\n                <th style=\"width: 100px;\" class=\"customth\">Type</th>\r\n                <th style=\"width: 98px;\" class=\"customth\">Row Idx</th>\r\n                <th style=\"width: 400px;\"class=\"customth\">Message</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                <ng-container *ngFor=\"let val of Validations;let i - index\">\r\n                    <tr>\r\n                        \r\n                        <td class=\"td\" style=\"font-size:14px; text-align:center\" >\r\n                            <i class=\"fa fa-exclamation-triangle colRed\" aria-hidden=\"true\" *ngIf=\"val.type == 0\"></i>\r\n                            <i class=\"fa fa-exclamation-circle colAmber\" aria-hidden=\"true\" *ngIf=\"val.type == 1\"></i>\r\n                        </td>\r\n                        <td class=\"td\" style=\"font-size:14px\">{{val.rowIdx}}</td>\r\n                        <td class=\"td\" style=\"font-size:14px\" [innerHTML]=\"val.message\">{{val.message}}</td>\r\n                    </tr>\r\n                </ng-container>         \r\n            </tbody>\r\n        </table>\r\n    </div>\r\n    <div class=\"modal-footer\">\r\n    <button type=\"button\" class=\"btn btn btn-info btn-sm\" (click)=\"modal.close('Save click')\">Close</button>\r\n    </div>\r\n  </ng-template>\r\n\r\n\r\n\r\n<div style=\"visibility: hidden; position: fixed\"\r\n    [style.left]=\"contextMenuPosition.x\"\r\n    [style.top]=\"contextMenuPosition.y\"\r\n    [matMenuTriggerFor]=\"contextMenu\">\r\n</div>\r\n<mat-menu #contextMenu=\"matMenu\">\r\n\t<ng-template matMenuContent>\r\n\t\t<button mat-menu-item\r\n        *ngIf=\"MenuOption.Remove.visible\"\r\n        (click)=\"onColContext(MenuOption.Remove)\" \r\n        [ngClass]=\"{ 'disabled' : !MenuOption.Remove.enabled }\">\r\n        Remove</button>\r\n        <button mat-menu-item \r\n        *ngIf=\"MenuOption.Split.visible\"\r\n        (click)=\"onColContext(MenuOption.Split)\"\r\n         [ngClass]=\"{ 'disabled' : !MenuOption.Split.enabled }\">Split</button>\r\n         \r\n         <button mat-menu-item \r\n        *ngIf=\"MenuOption.Map.visible\"\r\n        (click)=\"onMapUnion(MenuOption.Map)\"\r\n         [ngClass]=\"{ 'disabled' : !MenuOption.Map.enabled }\">Map Lkp Column</button>\r\n        \r\n\r\n        <button mat-menu-item \r\n        *ngIf=\"MenuOption.AddOrigin.visible\" \r\n        (click)=\"onCompContext(MenuOption.AddOrigin)\"\r\n        [ngClass]=\"{ 'disabled' : !MenuOption.AddOrigin.enabled }\"\r\n        >Set Origin</button>\r\n        <button mat-menu-item\r\n        *ngIf=\"MenuOption.RemoveComponent.visible\"\r\n        [ngClass]=\"{ 'disabled' : !MenuOption.RemoveComponent.enabled }\"\r\n        (click)=\"onCompContext(MenuOption.RemoveComponent)\">Remove</button>\r\n        <button mat-menu-item\r\n        *ngIf=\"MenuOption.Join.visible\"\r\n        [ngClass]=\"{ 'disabled' : !MenuOption.Join.enabled }\"\r\n        (click)=\"onCompJoinContext(MenuOption.Join)\">Join</button>\r\n\r\n        <button mat-menu-item\r\n        *ngIf=\"MenuOption.RemoveRow.visible\"\r\n        [ngClass]=\"{ 'disabled' : !MenuOption.RemoveRow.enabled }\"\r\n        (click)=\"onCompContext(MenuOption.RemoveRow)\">Remove Row</button>\r\n    \r\n        <button mat-menu-item\r\n        *ngIf=\"MenuOption.Union.visible\"\r\n        [ngClass]=\"{ 'disabled' : !MenuOption.Union.enabled }\"\r\n        (click)=\"onCompUnion(MenuOption.Union)\">Union</button>\r\n\r\n        <button mat-menu-item\r\n        *ngIf=\"MenuOption.AddHeader.visible\"\r\n        [ngClass]=\"{ 'disabled' : !MenuOption.AddHeader.enabled }\"\r\n        (click)=\"onCompContext(MenuOption.AddHeader)\">Header Row</button>\r\n\r\n        <button mat-menu-item\r\n        *ngIf=\"MenuOption.SetHeader.visible\"\r\n        [ngClass]=\"{ 'disabled' : !MenuOption.SetHeader.enabled }\"\r\n        (click)=\"onCompContext(MenuOption.SetHeader)\">Set Header</button>\r\n    </ng-template>\r\n</mat-menu>\r\n\r\n\r\n<div class=\"sectionHeader\">\r\n    <div class=\"sectionContent\">\r\n        \r\n        <nav class=\"navLeft\">\r\n            <div class=\"nav nav-tabs mrg\" id=\"nav-tab\" role=\"tablist\">\r\n                <ng-container *ngFor=\"let cleansed of CleanedDtos;let i - index\">    \r\n                    <button class=\"active nav-link active\" data-toggle=\"tab\" (click)=\"SetComponents(cleansed.workSheet)\">{{cleansed.workSheet}}</button>\r\n                </ng-container>\r\n                <button class=\"btn btn-info btn-square btn-sm btnWdth margLeft\" \r\n                (click)=\"ShowOpHistory()\">Op History</button>\r\n                <button class=\"btn btn-info btn-square btn-sm btnWdth margLeft\" \r\n                *ngIf=\"Export\" (click)=\"ExportCleaned()\">Export</button>\r\n           \r\n            </div>\r\n        </nav>\r\n        \r\n    </div>\r\n    <div class=\"sectionContent sectionTop\">\r\n        <div class=\"mrgRight overFlow\" style=\"border:none;border-left:none;\">\r\n           \r\n           <!-- <table class=\"tblComponents tblMargin\" style=\"margin-bottom:10px;border-top: none;border-left:none !important; border-right: none;border-bottom:none; font-size:10px\" >\r\n                <tr>\r\n                    <td style=\"border-bottom: none !important;border-left:none;border-right:none;\">\r\n                    -->\r\n                    <div  class=\"col-sm-12\">\r\n                     <ng-container *ngFor=\"let com of Components;let i - index\">\r\n                      \r\n                            <table class=\"tblComponents tblMargin\" style=\"table-layout:auto !important;\" >\r\n                                <tr *ngIf=\"!com.processed\" class=\"componentTr\" style=\"background-color:black;height: 20px;width:100%\">\r\n                                    <td class=\"comHeader componentTd bacBlk\">\r\n                                        <i class=\"fa fa-cog whiteCog\" (click)=\"onComClick($event, com)\"></i>\r\n                                    </td>\r\n                                    <td class=\"comHeader componentTd\" [attr.colspan]=\"com.cellCount\">\r\n                                        {{com.name}}<b *ngIf=\"com.isOrigin\"> (origin)</b>\r\n                                    </td>                       \r\n                                </tr>\r\n                                <ng-container *ngFor=\"let row of com.rows;let j - index\">\r\n                                    <tr style=\"height: 20px;width:100%\" class=\"componentTr\">\r\n                                        <td class=\"bacBlk\" *ngIf=\"!com.processed\">\r\n                                            <i class=\"fa fa-cog whiteCog gldCol\"  (click)=\"onRowClick($event, row, com)\"></i>\r\n                                        </td>\r\n                                        <!--<td *ngIf=\"com.processed\">&nbsp;</td>-->\r\n                                        <ng-container *ngFor=\"let cell of row.cells;let v - index\" >\r\n                                           \r\n                                            <td class=\"rowStyle componentTd\" \r\n                                            *ngIf=\"!IsHeader(row.row) && !IsExport()\" \r\n                                            [ngClass]=\"{excelTitle: IsHeader(row.row),excelTotal: IsTotal(row.row)}\">\r\n                                            {{cell.cellValue}}</td>\r\n                                        \r\n                                            <td class=\"rowStyle componentTd\" \r\n                                            *ngIf=\"IsExport() && IsHeader(row.row)\" \r\n                                            class=\"excelTitle\">\r\n                                            {{cell.cellValue}}</td>\r\n\r\n                                            <td class=\"rowStyle componentTd\" \r\n                                            *ngIf=\"IsExport() && !IsHeader(row.row)\"\r\n                                            [ngClass]=\"{excelTitle: IsHeader(row.row),excelTotal: IsTotal(row.row)}\">\r\n                                            {{cell.cellValue}}</td> \r\n\r\n                                            <td class=\"rowStyle componentTd\" \r\n                                           \r\n                                            *ngIf=\"IsHeader(row.row) && !IsExport()\" \r\n                                           \r\n                                            [ngClass]=\"{excelTitle: IsHeader(row.row),excelTotal: IsTotal(row.row)}\"\r\n                                            >{{cell.cellValue}}\r\n                                            <i class=\"fa fa-square gldCol\" (click)=\"onColRightClick($event, cell, com)\"></i>\r\n                                        </td>\r\n                                       \r\n                                        \r\n                                        </ng-container>\r\n                                        \r\n                                    </tr>\r\n\r\n                                </ng-container>\r\n                            </table>\r\n                              \r\n                        </ng-container>\r\n                        <div style=\"height:10px;\"></div>\r\n                    </div>\r\n                    <!--</td>\r\n                </tr>\r\n            </table>-->    \r\n    </div>\r\n</div>\r\n","import { Component, OnInit, TemplateRef, ViewChild } from '@angular/core';\r\nimport { RowTypeEnum } from '../../Models/Enums/row-type-enum';\r\nimport { CleansingBl} from '../../Bl/cleansing-bl';\r\nimport { CleanedWsDto } from '../../Models/Dtos/Cleansing/cleanedWs-dto';\r\nimport { ComponentsDto } from '../../Models/Dtos/Cleansing/components-dto';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { MessageService } from '../../Services/message-service';\r\nimport { MatMenuTrigger } from '@angular/material/menu';\r\nimport { ColumnOptionsDto } from '../../Models/Dtos/Cleansing/column-dtos';\r\nimport { WsCellDto } from '../../Models/Dtos/Cleansing/ws-cell-dto';\r\nimport { MenuOption} from '../../Models/Dtos/Cleansing/menu-option';\r\nimport { OperationTypeDto } from '../../Models/Dtos/Cleansing/operation-type-dto';\r\nimport { OperationsDto } from '../../Models/Dtos/Cleansing/operations-dto';\r\nimport { ComponentOptionsDto } from '../../Models/Dtos/Cleansing/component-options-dto';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { JoinModalDto } from '../../Models/Dtos/Cleansing/join-modal-dto';\r\nimport { MapLkpDto } from '../../Models/Dtos/Cleansing/map-lkp-dto'; \r\nimport { MapCriteria } from '../../Models/map-criteria';\r\nimport { JoinCriteria } from '../../Models/Dtos/Cleansing/join-criteria';\r\nimport { ComponentLkpDto, StrLookupDto } from '../../Models/Dtos/str-lookup-dto';\r\nimport { JoinTypeEnum } from '../../Models/Enums/join-type-enum';\r\nimport { OperationValidationDto } from '../..//Models/Dtos/Cleansing/operation-validation-dto';\r\nimport { RowTypeDto } from '../../Models/Dtos/Cleansing/row-type-dto';\r\nimport { RowOptionsDto } from '../..//Models/Dtos/Cleansing/row-options-dto';\r\nimport { AuthenticationService } from '../..//Data/authentication-service';\r\n\r\n@Component({\r\n  selector: 'app-cleanse',\r\n  templateUrl: './cleanse.component.html',\r\n  styleUrls: ['./cleanse.component.css']\r\n})\r\nexport class CleanseComponent implements OnInit {\r\n@ViewChild('joinTemplate',{static: true}) joinElement : TemplateRef<any>;\r\n@ViewChild('mapTemplate',{static: true}) mapElement : TemplateRef<any>;\r\n@ViewChild('validationsTemplate',{static: true}) valElement : TemplateRef<any>;\r\n@ViewChild(MatMenuTrigger)\r\ncontextMenu: MatMenuTrigger;\r\n\r\n@ViewChild(MatMenuTrigger)\r\ncomContextMenu: MatMenuTrigger;\r\n\r\ncontextMenuPosition = { x: '0px', y: '0px' };\r\n\r\n\r\nconstructor(private _cleansingBl : CleansingBl,\r\n          private _route: ActivatedRoute,\r\n          private _router : Router,\r\n          private _messagingService : MessageService,\r\n          private _modalService: NgbModal,\r\n          private _authenticationService : AuthenticationService) { }\r\n\r\n  private _cleanseMgrId : number;\r\n  public FilePath : string = 'Please Drop File Here';\r\n  public Processed = false;\r\n  public Components : ComponentsDto[] = [];\r\n  public CleanedDtos : CleanedWsDto[];\r\n  public MenuOption : MenuOption;\r\n  public Operations : OperationsDto[];\r\n  public JoinModalDto : JoinModalDto;\r\n  public MapLkpDto : MapLkpDto;\r\n  public Validations : OperationValidationDto[];\r\n  public Export : boolean;\r\n\r\n  async ngOnInit() {\r\n   this._route.params.subscribe(params => {\r\n      this._cleanseMgrId = +params['id'];\r\n   });\r\n\r\n    this._messagingService.LoadingMsg(true);\r\n    await this.LoadOperations();\r\n    await this.Load(true);\r\n    this._messagingService.LoadingMsg(false);\r\n\r\n    this.LoadValidations();\r\n  }\r\n\r\n  onRowClick(event : MouseEvent, row : RowTypeDto, component : ComponentsDto)\r\n  { \r\n    event.preventDefault();\r\n    this.contextMenuPosition.x = event.clientX + 'px';\r\n    this.contextMenuPosition.y = event.clientY + 'px';\r\n\r\n    this.AssignMenuOptions(component.componentId, component.name, undefined,undefined, row.rowOptions);\r\n    this.contextMenu.menu.focusFirstItem('mouse');\r\n    this.contextMenu.openMenu();\r\n  }\r\n\r\n  onColRightClick(event : MouseEvent, cell : WsCellDto, component : ComponentsDto){\r\n    event.preventDefault();\r\n    this.contextMenuPosition.x = event.clientX + 'px';\r\n    this.contextMenuPosition.y = event.clientY + 'px';\r\n\r\n    var selectedColOption = component.columnOptions.find(x=> x.colIdx == cell.colIdx);\r\n    this.AssignMenuOptions(component.componentId, component.name, selectedColOption, undefined, undefined);\r\n    this.contextMenu.menu.focusFirstItem('mouse');\r\n    this.contextMenu.openMenu();\r\n  }\r\n\r\n  onComClick(event : MouseEvent,  component : ComponentsDto){\r\n    event.preventDefault();\r\n    this.contextMenuPosition.x = event.clientX + 'px';\r\n    this.contextMenuPosition.y = event.clientY + 'px';\r\n    var selectedComponentOptions = component.componentOptions;\r\n    this.AssignMenuOptions(component.componentId, component.name, undefined, selectedComponentOptions, undefined);\r\n    this.contextMenu.menu.focusFirstItem('mouse');\r\n    this.contextMenu.openMenu();\r\n  }\r\n\r\n  onCompUnion(operationType : OperationTypeDto)\r\n  {\r\n    this.onModalCommon(operationType, 2, \"Union\");\r\n  }\r\n\r\n  onMapUnion(operationType : OperationTypeDto)\r\n  {\r\n  \r\n     this.MapLkpDto = new MapLkpDto(\r\n    {\r\n      Component:this.MenuOption.ComponentName, \r\n      ComponentId : this.MenuOption.ComponentId, \r\n      ModalHeader : \"Map Lookup Column\",\r\n      OperationType : operationType\r\n    });\r\n\r\n    var component = this.Components.find(x=> x.componentId == this.MenuOption.ComponentId)!;\r\n\r\n    var selectedCol = component.columnOptions.find(x=> x.colIdx == this.MenuOption.ColIdx)!;\r\n    this.MapLkpDto.CompOneColIdx = this.MenuOption.ColIdx;\r\n    this.CreateCompNames(this.MapLkpDto.CompNames);\r\n\r\n    this._modalService.open(this.mapElement, { ariaLabelledBy: 'modal-basic-title'});\r\n  }\r\n\r\n  private CreateCompNames(comp : ComponentLkpDto[] )\r\n  {\r\n    var selectedComponent = this.Components.find(x=> x.componentId == this.MenuOption.ComponentId)!;\r\n\r\n    this.CleanedDtos.forEach(cl=>\r\n      {\r\n  \r\n        if (cl.workSheet != 'Processed')\r\n        {\r\n          cl.components.forEach(cmp=>\r\n          {\r\n            var add = false;\r\n            if (cmp.name != selectedComponent.name)\r\n            {\r\n              add = true;\r\n            }\r\n            if (cmp.name == selectedComponent.name)\r\n            {\r\n              if (this.MenuOption.WorkSheet != cl.workSheet)\r\n              {\r\n                add = true;\r\n              }\r\n            }\r\n            if (add)\r\n            {\r\n              comp.push({ Id: cl.workSheetId, Value : cl.workSheet + \" - \" + cmp.name, WorkSheet : cl.workSheet, ComponentId : cmp.componentId});\r\n            }\r\n            });\r\n        }\r\n      });\r\n\r\n  }\r\n\r\n   onModalCommon(operationType : OperationTypeDto, joinType : number, modalHeader : string)\r\n   {\r\n    this.JoinModalDto = new JoinModalDto\r\n    (\r\n      { \r\n        ComponentId:this.MenuOption.ComponentId, \r\n        CompNames : [], \r\n        OperationType : operationType,\r\n        ModalHeader : modalHeader, \r\n        JoinType : joinType\r\n      }\r\n    );\r\n    \r\n    this.CreateCompNames(this.JoinModalDto.CompNames);\r\n\r\n    this._modalService.open(this.joinElement, { ariaLabelledBy: 'modal-basic-title'});\r\n  \r\n   }\r\n\r\n  onCompJoinContext(operationType : OperationTypeDto)\r\n  {\r\n    this.onModalCommon(operationType, 1, \"Join\");\r\n  }\r\n\r\n  public OnJoinCompChange()\r\n  {\r\n\r\n    this.JoinModalDto.JoinCriteria = [];\r\n    this.JoinModalDto.JoinVisible = true;\r\n\r\n    var joinId = this.JoinModalDto.JoinCompId;\r\n    var joinComp = this.JoinModalDto.CompNames.find(x=> x.Id == joinId)!;\r\n\r\n    //get distinct header value for 1st comp\r\n    var componentOne = this.Components.find(x=> x.componentId == this.JoinModalDto.ComponentId)!;\r\n    var componentTwo = this.Components.find(x=> x.componentId == joinComp.ComponentId)!;\r\n\r\n    var componentOneRow = componentOne.rows[0];\r\n    var componentOneHeaders : StrLookupDto[] = [];\r\n    componentOneRow.cells.forEach(cell=>\r\n    {\r\n      componentOneHeaders.push(new StrLookupDto({ Id:cell.cellValue, Value:cell.cellValue}));\r\n    });\r\n\r\n    var componentTwoRow = componentTwo.rows[0];\r\n    var componentTwoHeaders : StrLookupDto[] = [];\r\n    componentTwoRow.cells.forEach(cell=>\r\n    {\r\n      componentTwoHeaders.push(new StrLookupDto({ Id:cell.cellValue, Value:cell.cellValue}));\r\n    });\r\n\r\n    var joinTypes : JoinTypeEnum[] = [];\r\n    joinTypes.push(JoinTypeEnum.Left);\r\n    joinTypes.push(JoinTypeEnum.Right);\r\n\r\n    var joinCriteria = new JoinCriteria\r\n    ({\r\n      CompOne : componentOne.name,\r\n      CompOneWs : componentOne.componentOptions.workSheet,\r\n      CompTwo : joinComp.ComponentId,\r\n      CompTwoWs : joinComp.WorkSheet,\r\n      JoinTypes : joinTypes,\r\n      CompOneFields : componentOneHeaders,\r\n      CompTwoFields : componentTwoHeaders,\r\n      SelectedJoinType : JoinTypeEnum.Left\r\n    });\r\n\r\n    this.JoinModalDto.JoinCriteria.push(joinCriteria);\r\n  }\r\n\r\n  public async JoinComplete(joinModal : JoinModalDto)\r\n  { \r\n    await this.ProcessJoinOperation(this.JoinModalDto.OperationType, joinModal.JoinCriteria);\r\n  }\r\n\r\n  public async MapComplete(mapModalDto : MapLkpDto)\r\n  {\r\n    var t = mapModalDto;\r\n    var mapCriteria = new MapCriteria();\r\n\r\n    mapCriteria.LookupComponentId = mapModalDto.JoinCompId;\r\n    mapCriteria.MapIdx = mapModalDto.MapColumn;\r\n    mapCriteria.ValueIdx = mapModalDto.ValueColumn;\r\n\r\n    await this.ProcessMapOperation(mapModalDto.OperationType, mapCriteria);\r\n  }\r\n  \r\n  \r\n  private AssignMenuOptions(componentId : number, componentName : string,  columnOption : ColumnOptionsDto | undefined, componentOptions : ComponentOptionsDto | undefined, rowOptions : RowOptionsDto | undefined)\r\n  {\r\n    this.MenuOption = new MenuOption();\r\n    this.MenuOption.ComponentId  = componentId;\r\n    this.MenuOption.ComponentName = componentName;\r\n\r\n    if (columnOption)\r\n    {\r\n      this.ColumnMenuOptions(columnOption);\r\n    }\r\n    else\r\n    {\r\n      this.ColumnMenuOptionsNull();\r\n    }\r\n\r\n    if (componentOptions)\r\n    {\r\n      this.ComponentMenuOptions(componentOptions);\r\n    }\r\n    else\r\n    {\r\n      this.ComponentMenuOptionsNull();\r\n    }\r\n\r\n    if (rowOptions)\r\n    {\r\n      this.RowMenuOptions(rowOptions);\r\n    }\r\n    else\r\n    {\r\n      this.RowMenuOptionsNull();\r\n    }\r\n  }\r\n\r\n  private ComponentMenuOptionsNull()\r\n  {\r\n    this.MenuOption.AddOrigin = new OperationTypeDto({ visible : false});\r\n    this.MenuOption.RemoveComponent = new OperationTypeDto({ visible : false});\r\n    this.MenuOption.Join = new OperationTypeDto({ visible : false});\r\n    this.MenuOption.Union = new OperationTypeDto({ visible : false});\r\n    this.MenuOption.AddHeader = new OperationTypeDto({ visible : false});\r\n  }\r\n\r\n  private ComponentMenuOptions(componentOptions : ComponentOptionsDto)\r\n  {\r\n    this.MenuOption.AddOrigin = componentOptions.addOrigin;\r\n    this.MenuOption.RemoveComponent = componentOptions.remove;\r\n    this.MenuOption.Join = componentOptions.join;\r\n    this.MenuOption.WorkSheet = componentOptions.workSheet;\r\n    this.MenuOption.WorkSheetId = componentOptions.workSheetId;\r\n    this.MenuOption.Union = componentOptions.union;\r\n    this.MenuOption.AddHeader = componentOptions.addHeader;\r\n  }\r\n\r\n  private RowMenuOptionsNull()\r\n  {\r\n    this.MenuOption.RemoveRow = new OperationTypeDto({ visible : false });\r\n    this.MenuOption.SetHeader = new OperationTypeDto({ visible : false });\r\n  }\r\n\r\n  private RowMenuOptions(rowOptions : RowOptionsDto)\r\n  {\r\n    this.MenuOption.RemoveRow = rowOptions.removeRow;\r\n    this.MenuOption.SetHeader = rowOptions.setHeader;\r\n    this.MenuOption.WorkSheet = rowOptions.workSheet;\r\n    this.MenuOption.WorkSheetId = rowOptions.workSheetId;\r\n    this.MenuOption.RowIdx = rowOptions.rowIdx;\r\n    this.MenuOption.ComponentId = rowOptions.componentId;\r\n\r\n  }\r\n  \r\n  private ColumnMenuOptions(columnOption : ColumnOptionsDto)\r\n  {\r\n    this.MenuOption.Remove = columnOption.remove;\r\n    this.MenuOption.Split = columnOption.split;\r\n    this.MenuOption.Map = columnOption.map;\r\n    this.MenuOption.WorkSheet = columnOption.workSheet;\r\n    this.MenuOption.WorkSheetId = columnOption.workSheetId;\r\n    this.MenuOption.ColIdx = columnOption.colIdx;\r\n    this.MenuOption.ComponentId = columnOption.componentId;\r\n    this.MenuOption.ComponentName = columnOption.component;\r\n  }\r\n\r\n  private ColumnMenuOptionsNull()\r\n  {\r\n    this.MenuOption.Remove = new OperationTypeDto({ visible : false });\r\n    this.MenuOption.Split = new OperationTypeDto({ visible : false });\r\n    this.MenuOption.Map = new OperationTypeDto({ visible : false });\r\n  }\r\n\r\n  public async onColContext(operationType : OperationTypeDto)\r\n  {\r\n    await this.ProcessOperation(operationType);\r\n  }\r\n\r\n  public async onCompContext(operationType : OperationTypeDto)\r\n  {\r\n    await this.ProcessOperation(operationType);\r\n  }\r\n\r\n  private async ProcessOperation(operationType)\r\n  {\r\n    this._messagingService.LoadingMsg(true);\r\n\r\n    // add operation\r\n    var compTwoWsIdx = null;\r\n    var compTwoIdx = null;\r\n  \r\n    var response = await this._cleansingBl.AddOperation(this._cleanseMgrId,operationType,  this.MenuOption, compTwoWsIdx, compTwoIdx,null,null, []);\r\n    await this.LoadOperations();\r\n    await this.Load(false);\r\n    this._modalService.dismissAll();\r\n\r\n    this._messagingService.LoadingMsg(false);\r\n\r\n    this.LoadValidations();\r\n\r\n  }\r\n\r\n  private async ProcessJoinOperation(operationType, joins : JoinCriteria[] = [])\r\n  {\r\n    this._messagingService.LoadingMsg(true);\r\n\r\n    // add operation\r\n    var compTwoWsIdx = null;\r\n    var compTwoIdx = null;\r\n  \r\n    if (this.JoinModalDto)\r\n    {\r\n      compTwoIdx = this.JoinModalDto.CompTwoIdx;\r\n      compTwoWsIdx = this.JoinModalDto.CompTwoWsIdx;\r\n    }\r\n    var response = await this._cleansingBl.AddOperation(this._cleanseMgrId,operationType, this.MenuOption, compTwoIdx,compTwoWsIdx, null, null, joins);\r\n    await this.LoadOperations();\r\n    await this.Load(false);\r\n    this._modalService.dismissAll();\r\n    this.LoadValidations();\r\n\r\n    this._messagingService.LoadingMsg(false);\r\n\r\n  }\r\n  private async ProcessMapOperation(operationType, mapCritera : MapCriteria)\r\n  {\r\n    this._messagingService.LoadingMsg(true);\r\n\r\n    // add operation\r\n    var compTwoWs = null;\r\n    var compTwo = null;\r\n    var mapColIdx = null;\r\n    var valueColIdx = null;\r\n\r\n    if (this.MapLkpDto)\r\n    {\r\n      compTwo = this.MapLkpDto.CompTwoIdx;\r\n      compTwoWs = this.MapLkpDto.CompTwoWsIdx;\r\n      mapColIdx = this.MapLkpDto.MapColumn;\r\n      valueColIdx = this.MapLkpDto.ValueColumn;\r\n      \r\n    }\r\n \r\n    var response = await this._cleansingBl.AddOperation(this._cleanseMgrId,operationType, this.MenuOption, compTwo,compTwoWs, mapColIdx, valueColIdx,[]);\r\n    await this.LoadOperations();\r\n    await this.Load(false);\r\n    this._modalService.dismissAll();\r\n\r\n    this.LoadValidations();\r\n\r\n    this._messagingService.LoadingMsg(false);\r\n\r\n  }\r\n  \r\n  private LoadValidations()\r\n  {\r\n    if (this.Validations.length >= 1)\r\n    {\r\n        this._modalService.open(this._modalService.open(this.valElement, { ariaLabelledBy: 'modal-basic-title'}));\r\n    };\r\n  }\r\n  public SetComponents(wsName : string)\r\n  {\r\n    if (wsName == \"Processed\")\r\n    {\r\n      this.Export = true;\r\n    }\r\n    else\r\n    {\r\n      this.Export = false;\r\n    }\r\n\r\n    this.Components = [];\r\n    var cleanseDto = this.CleanedDtos.find(x=> x.workSheet === wsName)!;\r\n\r\n    cleanseDto.components.forEach(com=>\r\n    {\r\n      this.Components.push(com);\r\n    });\r\n  }\r\n\r\n  public async LoadOperations()\r\n  {\r\n    var response = await this._cleansingBl.LoadOperations(this._cleanseMgrId);\r\n    if (response.status)\r\n    {\r\n      this.Operations = response.operations\r\n    \r\n    }\r\n  }\r\n\r\n  public Close()\r\n  {\r\n    this._modalService.dismissAll();\r\n  }\r\n\r\n  public async Load(show : boolean = true)\r\n  {\r\n    var response = await this._cleansingBl.Load(this._cleanseMgrId, show);\r\n    var cleaned = response.cleanedDtos;\r\n    cleaned.push(response.processed);\r\n    var cleansed = response.cleanedDtos[0];\r\n    this.CleanedDtos = response.cleanedDtos;\r\n    this.SetComponents(cleansed.workSheet);\r\n\r\n    debugger;\r\n    this.Validations = response.validations;\r\n\r\n    this.Operations.forEach(op=>\r\n    {\r\n      var ws = this.CleanedDtos.find(cd => cd.workSheetId == op.workSheetId);\r\n      op.workSheet = ws.workSheet;\r\n\r\n      var cmp = ws.components.find(c=> c.componentId == op.componentId);\r\n      if (cmp == null)\r\n      {\r\n        return;\r\n      }\r\n      op.component = cmp.name;\r\n      \r\n      if (op.colIdx > 0)\r\n      {\r\n          var col = cmp.rows[0].cells[op.colIdx];\r\n\r\n          if (col != null)\r\n          {\r\n            var val = col.cellValue;\r\n            op.field = val;\r\n          }\r\n      }\r\n    });\r\n    this.Processed = true;\r\n  }\r\n\r\n  public IsHeader(rowType : RowTypeEnum)\r\n  {\r\n    return rowType == 4;\r\n  }\r\n\r\n  public IsExport()\r\n  {\r\n    if (this.Export)\r\n    {\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  public IsTotal(rowType : RowTypeEnum)\r\n  {\r\n    return rowType == 5;\r\n  }\r\n\r\n  public ShowOpHistory()\r\n  {\r\n    document.getElementById(\"OpHistory\")!.style.width = \"480px\";\r\n  }\r\n\r\n  public CloseOpHistory()\r\n  {\r\n    document.getElementById(\"OpHistory\")!.style.width = \"0\";\r\n  }\r\n\r\n  public async DeleteOp(operationsId : number)\r\n  {\r\n    this._messagingService.LoadingMsg(true);\r\n    var response = await this._cleansingBl.DeleteOperation(operationsId);\r\n\r\n    if (response.status)\r\n    {\r\n      await this.LoadOperations();\r\n      await this.Load(false);\r\n    }\r\n\r\n    this.CloseOpHistory();\r\n   \r\n\r\n    this.LoadValidations();\r\n\r\n    this._messagingService.LoadingMsg(false);\r\n  }\r\n\r\n  public async ExportCleaned()\r\n  {\r\n    var user = this._authenticationService.currentUserValue;\r\n\r\n    this._messagingService.LoadingMsg(true);\r\n    \r\n    var exportResponse = await this._cleansingBl.Export(this._cleanseMgrId, user);\r\n\r\n    this._messagingService.LoadingMsg(false);\r\n\r\n    this._router.navigate(['/manager']);\r\n  }\r\n\r\n}\r\n","<div class=\"sectionHeader\">\r\n   \r\n    <div class=\"sectionContent\">\r\n        <div class=\"row tblMargin\">\r\n            <div class=\"col-sm-12\">\r\n                <span  class=\"errorMsg margLeftOne\" *ngIf=\"Errors?.length > 0\">The following errors Occured - </span>\r\n            </div>\r\n        </div>\r\n        <div class=\"row tblMargin\" *ngFor=\"let err of Errors;\">\r\n            <div class=\"col-sm-12\">\r\n                <span class=\"errorMsgLight margLeftOne\">{{err}}</span>\r\n            </div>\r\n        </div>\r\n\r\n <form class=\"form-horizontal\" [formGroup]=\"FileForm\" >\r\n        <div class=\"row lnHeight tblMargin\" >\r\n           \r\n                <div class=\"col-sm-2\">\r\n                    <span>Cleaned File</span>\r\n                </div>\r\n                <div class=\"col-sm-2\">\r\n                    <div class=\"dropzone\" style=\"height: 80px im !important;\">\r\n                        <div class=\"center\">\r\n                            <ngx-file-drop dropZoneLabel=\"Please Drop a file\" (onFileDrop)=\"Dropped($event)\"  customstyle=\"filedrop\">\r\n                                <ng-template ngx-file-drop-content-tmp let-openFileSelector=\"openFileSelector\">\r\n                                    <div class=\"text-wrapper\">\r\n                                        <div class=\"fileDropTxt\">{{FilePath}}</div>\r\n                                    </div>\r\n                                </ng-template>\r\n                            </ngx-file-drop>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div class=\"col-sm-2\">\r\n                    <span>Morph Account</span>\r\n                </div>\r\n                <div class=\"col-sm-2\">\r\n                    <ng-select class=\"selectStyle customMed\"\r\n                    [items]=\"ConversionFilesDto\"\r\n                    bindLabel=\"accountName\"\r\n                    placeholder=\"Please select a Account\"\r\n                    bindValue=\"filePath\"\r\n                    clearable=\"true\"\r\n                    formControlName=\"FileOne\"\r\n                    clearAllText=\"Clear\">\r\n                    </ng-select>\r\n                </div>\r\n                <div class=\"col-sm-2\">\r\n                    <button class=\"btn-sm btn-info btn-outline-rounded btnMarg\" (click)=\"GetWorkSheets()\" [disabled]=\"!FileForm.valid\">Get WorkSheets</button>\r\n                </div>\r\n            \r\n        </div>\r\n</form>\r\n<form class=\"form-horizontal\" [formGroup]=\"WorkSheetForm\" >\r\n     <div class=\"row lnHeight tblMargin tblBot\"> \r\n        \r\n            <div class=\"col-sm-2\">\r\n                Dropped Worksheets\r\n            </div>\r\n            <div class=\"col-sm-2\">\r\n                <ng-select class=\"selectStyle customMed\"\r\n                [items]=\"DroppedWorkSheets\"\r\n                bindLabel=\"name\"\r\n                placeholder=\"Please select a worksheet\"\r\n                bindValue=\"name\"\r\n                clearable=\"true\"\r\n                formControlName=\"DroppedWs\"\r\n                clearAllText=\"Clear\">\r\n                </ng-select>\r\n            </div>\r\n            <div class=\"col-sm-2\">\r\n                Processed Worksheets\r\n            </div>\r\n            <div class=\"col-sm-2\">\r\n                <ng-select class=\"selectStyle customMed\"\r\n                [items]=\"ProcessedWorkSheets\"\r\n                bindLabel=\"name\"\r\n                placeholder=\"Please select a worksheet\"\r\n                bindValue=\"name\"\r\n                clearable=\"true\"\r\n                formControlName=\"ProcessedWs\"\r\n                clearAllText=\"Clear\">\r\n                </ng-select>\r\n            </div>\r\n        <div class=\"col-sm-1\">\r\n            Start Idx\r\n        </div>\r\n        <div class=\"col-sm-1\">\r\n            <input type=\"text\" class=\"form-control txtSmall\" name=\"start\" formControlName=\"start\" />\r\n        </div>\r\n        <div class=\"col-sm-2\">\r\n            <button class=\"btn-sm btn-info btn-outline-rounded btnMarg\" (click)=\"Compare()\" [disabled]=\"!WorkSheetForm.valid\">Compare Files</button>\r\n        </div>\r\n    \r\n    </div> \r\n</form>\r\n    </div>\r\n\r\n\r\n    <!-- <div class=\"sectionContent sectionTop\" *ngIf=\"ShowResults\">\r\n        <div class=\"row tblMargin\">\r\n            <div class=\"col-sm-2\">\r\n                <span>Building Matches</span>\r\n            </div>\r\n            <div class=\"col-sm-1\">\r\n                <span>{{BldgClassMatched}} / {{BldgClassNotMatched}}</span>\r\n            </div>\r\n            <div class=\"col-sm-2\">\r\n                <span>Occupancy Matches</span>\r\n            </div>\r\n            <div class=\"col-sm-1\">\r\n                <span>{{OccupancyMatched}} / {{OccupancyNotMatched}}</span>\r\n            </div>\r\n        </div>\r\n\r\n    </div> -->\r\n   \r\n        <div class=\"sectionContent sectionTop tblBot\" *ngIf=\"ShowResults\">\r\n            <div class=\"row tblMargin\">\r\n                <div class=\"col-sm-1\">\r\n                    <button class=\"btn btn-info btn-square btn-sm wdthLrg\" (click)=\"Filter(1)\" >Failed Building</button>\r\n             \r\n                </div>\r\n                <div class=\"col-sm-1\">\r\n                    <button class=\"btn btn-info btn-square btn-sm wdthLrg\" (click)=\"Filter(2)\" >Failed Occupancy</button>\r\n             \r\n                </div> \r\n                \r\n                <div class=\"col-sm-1\">\r\n                    <button class=\"btn btn-info btn-square btn-sm wdthLrg\" (click)=\"Filter(3)\" >Reset Filters</button>\r\n                </div>\r\n\r\n                <div class=\"col-xs-2\">\r\n                    <span class=\"weight algn\">Building Matches</span>\r\n                </div>\r\n                <div class=\"col-xs-3\">\r\n                    <span> \r\n                        <span class=\"success algn\">&nbsp;{{BldgClassMatched}}</span>\r\n                        <span class=\"weight algn\"> / </span>\r\n                       <span class=\"fail algn\"> {{BldgClassNotMatched}}</span>\r\n                    </span>\r\n                </div>\r\n                <div class=\"col-xs-2 tblLeft\">\r\n                    <span class=\"weight algn\">Occupancy Matches</span>\r\n                </div>\r\n                <div class=\"col-xs-3\">\r\n                    <span>\r\n                        <span class=\"success algn\">&nbsp;{{OccupancyMatched}}</span> \r\n                        <span class=\"weight algn\"> / </span> \r\n                        <span class=\"fail algn\"> {{OccupancyNotMatched}}</span>\r\n                    </span>\r\n                </div>\r\n             \r\n            </div>\r\n         \r\n            <div class=\"row tblMargin tblBot\">\r\n                <div class=\"col-sm-12\">\r\n                <ag-grid-angular\r\n                    style=\"width: 1268px; height: 356px;\"\r\n                    class=\"ag-theme-balham marg\"\r\n                    [rowData]=\"CompareResults\"\r\n                    [columnDefs]=\"ColumnDefs\"\r\n                    [gridOptions]=\"Options\"\r\n                    [rowSelection]=\"RowSelection\">\r\n                </ag-grid-angular>\r\n                </div>\r\n            </div>\r\n    </div>\r\n\r\n</div>\r\n","import { Component, OnInit, AfterViewInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { NgxFileDropEntry, FileSystemFileEntry } from 'ngx-file-drop';\r\nimport { CompareBl } from '../../Bl/comparebl';\r\nimport { FileDto } from '../../Models/Dtos/file-dto';\r\nimport { GetWorkSheetsRequest } from '../../Models/Requests/files-request';\r\nimport { WorkSheetDto } from '../../Models/Dtos/work-sheet-dtos';\r\nimport * as XLSX from 'xlsx';\r\nimport { MessageService } from '../../Services/message-service';\r\nimport { CompareRequest } from '../../Models/Requests/compare-request';\r\nimport { CompareResultsDto } from '../../Models/Dtos/compare-results-dto';\r\nimport { GridOptions } from 'ag-grid-community';\r\nimport { ConversionFileDto } from '../../Models/Dtos/conversion-dto';\r\n\r\n@Component({\r\n  selector: 'app-compare',\r\n  templateUrl: './compare.component.html',\r\n  styleUrls: ['./compare.component.css']\r\n})\r\nexport class CompareComponent implements OnInit, AfterViewInit {\r\n  public FileForm : FormGroup;\r\n  public WorkSheetForm : FormGroup;\r\n\r\n  public ConversionFilesDto : ConversionFileDto[];\r\n  public FilesOne : FileDto[];\r\n  public FilePath : string;\r\n  public Errors : string[] = [];\r\n  public DroppedWorkSheets : WorkSheetDto[] =[];\r\n  public ProcessedWorkSheets : WorkSheetDto[] =[];\r\n  public BldgClassMatched : number;\r\n  public BldgClassNotMatched : number;\r\n  public OccupancyMatched : number;\r\n  public OccupancyNotMatched : number;\r\n  public ShowResults : boolean = false;\r\n  public CompareResults : CompareResultsDto[];\r\n  public RowSelection : string = 'single';\r\n  public Options:GridOptions;\r\n  private _processFileName : string;\r\n  private _file : File;\r\n\r\n  public ColumnDefs = [\r\n    {headerName: 'LocNum', field: 'locNum', width:85, headerClass:'ag-custom-header',filter:true },\r\n    { headerName: 'Building Input', resizable: true,field:'buildingInput', width:240,headerClass:'ag-custom-header',filter:true },\r\n  \r\n    { headerName: 'Building', field:'droppedBldg', width:100,headerClass:'ag-custom-header',filter:true },\r\n  { headerName: 'Morph Building', field:'processedBldg', width:140,headerClass:'ag-custom-header',filter:true },\r\n  { headerName: 'Match', field:'isBuildingMatch', width:80,headerClass:'ag-custom-header',filter:true,\r\n  cellRenderer: function(params) { \r\n    //var input = document.createElement('input');\r\n    //input.type=\"checkbox\";\r\n    //input.readOnly = true;\r\n    //input.checked=params.value;\r\n\r\n    let eIconGui = document.createElement('span');   \r\n    if (params.data.isBuildingMatch)      \r\n      eIconGui.innerHTML = '<em class=\"fa fa-check success\"></em>'; \r\n    else\r\n    eIconGui.innerHTML = '<em class=\"fa fa-times failure\"></em>';     \r\n\r\n    return eIconGui;\r\n} }, \r\n  { headerName: 'Occupancy Input', field:'occupancyInput', resizable: true, width:240,headerClass:'ag-custom-header',filter:true },\r\n  { headerName: 'Occupancy', field:'droppedOccupancy', width:140,headerClass:'ag-custom-header',filter:true },\r\n  { headerName: 'Morph Occupancy', field:'processedOccupancy', width:150,headerClass:'ag-custom-header',filter:true },\r\n  { headerName: 'Match', field:'isOccupancyMatch', width:80,headerClass:'ag-custom-header',filter:true,\r\n  cellRenderer: function(params) { \r\n    let eIconGui = document.createElement('span');   \r\n    if (params.data.isOccupancyMatch)      \r\n      eIconGui.innerHTML = '<em class=\"fa fa-check success\"></em>'; \r\n    else\r\n    eIconGui.innerHTML = '<em class=\"fa fa-times failure\"></em>';     \r\n\r\n    return eIconGui;\r\n}}\r\n  \r\n  \r\n  ];\r\n\r\n  constructor(private _formBuilder: FormBuilder,private _compareBl : CompareBl,\r\n    private _messagingService : MessageService) { }\r\n\r\n  ngOnInit() {\r\n    window.addEventListener(\"dragover\", e => {\r\n      e && e.preventDefault();\r\n    }, false);\r\n    window.addEventListener(\"drop\", e => {\r\n      e && e.preventDefault();\r\n    }, false);\r\n\r\n    this.FilePath = \"Please Drop a file here\";\r\n    this.Errors.push('Please select an File');\r\n    this.constructFormBuilder();\r\n    this.loadLookups();\r\n\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this.initGrid();\r\n\r\n  }\r\n\r\n  public Filter(type : number)\r\n  {\r\n    var filter : any;\r\n    switch (type)\r\n    {\r\n      case 1 :\r\n        filter = {\r\n          isBuildingMatch: {\r\n            filterType: 'text',\r\n            type: 'contains',\r\n            filter: false\r\n          }\r\n        }\r\n        break;\r\n      case 2 :\r\n        filter = {\r\n          isOccupancyMatch: {\r\n            filterType: 'text',\r\n            type: 'contains',\r\n            filter: false\r\n          }\r\n        }\r\n        break;\r\n      case 3 :\r\n        break;\r\n    }      \r\n      this.Options.api.setFilterModel(null);\r\n      if (type < 3)\r\n        this.Options.api.setFilterModel(filter);\r\n  }\r\n\r\n\r\n  private initGrid()\r\n  {\r\n    this.Options = <GridOptions>{\r\n   \r\n      getRowStyle: (params) => {\r\n        if (params.node.rowIndex % 2 === 0) {\r\n          return {background: '#e7e7e7'};\r\n        }\r\n      },\r\n      pagination: true,\r\n      paginationPageSize: 50,\r\n      cacheBlockSize: 50\r\n    };\r\n  }\r\n\r\n  public IsImportFormValid()\r\n  {\r\n    var ctrls = this.FileForm.controls;\r\n    var fileOne = ctrls['FileOne'].value;\r\n    if (this.Errors.length == 0 && fileOne)\r\n      return true;\r\n\r\n    return false;\r\n  }\r\n\r\n  public Dropped(files: NgxFileDropEntry[]) {\r\n    this.ShowResults = false;\r\n    this._messagingService.LoadingMsg(true);\r\n    this.Errors = [];\r\n    if (files.length > 1)\r\n    {\r\n       this.Errors.push(\"You can only upload 1 file at a time\");\r\n       return;\r\n    }\r\n\r\n    for (const droppedFile of files)\r\n    {\r\n      if (droppedFile.fileEntry.isFile) {\r\n        const fileEntry = droppedFile.fileEntry as FileSystemFileEntry;\r\n\r\n        fileEntry.file((file:File) =>\r\n        {\r\n\r\n         let ext = file.name.split('.')[file.name.split('.').length - 1];\r\n\r\n         if(ext.toLowerCase() == 'xlsx')\r\n         {\r\n\r\n           this._file = file;\r\n           this.FilePath = file.name;\r\n           this.ReadXl(file);\r\n         }\r\n         else\r\n         {\r\n            this.Errors.push(fileEntry.name + \" does not have a valid file type\");\r\n            this.Errors.push('Please select an SOV');\r\n         }\r\n        });\r\n      }\r\n    }\r\n    this._messagingService.LoadingMsg(false);\r\n  }\r\n\r\n  private ReadXl(file:File)\r\n  {\r\n    const reader: FileReader = new FileReader();\r\n     \r\n    reader.onload = (e: any) => {\r\n     \r\n      const bstr: string = e.target.result;\r\n      const wb: XLSX.WorkBook = XLSX.read(bstr, {type: 'binary'});\r\n\r\n\r\n      var sheets = wb.SheetNames;\r\n      this.DroppedWorkSheets = [];\r\n      sheets.forEach(x=>\r\n        {\r\n            this.DroppedWorkSheets.push(new WorkSheetDto({ name : x}));\r\n        });\r\n    };\r\n\r\n\t\treader.readAsBinaryString(file);\r\n\r\n  }\r\n\r\n  private async loadLookups()\r\n  {\r\n    var response = await this._compareBl.Get();\r\n\r\n    if (response.status)\r\n      this.ConversionFilesDto = response.conversionFiles;\r\n  }\r\n\r\n  private constructFormBuilder()\r\n  {\r\n    this.FileForm = this._formBuilder.group({  \r\n      FileOne: [null, Validators.required]\r\n    });\r\n\r\n    this.WorkSheetForm = this._formBuilder.group({  \r\n      DroppedWs : [null, Validators.required],\r\n      ProcessedWs: [null, Validators.required],\r\n      start : [null, Validators.required]\r\n    });\r\n\r\n    var ctrls = this.WorkSheetForm.controls;\r\n\r\n    ctrls['start'].setValue(1);\r\n  }\r\n\r\n  public async GetWorkSheets()\r\n  {\r\n    this._messagingService.LoadingMsg(true);\r\n    //get files to query\r\n    var ctrls = this.FileForm.controls;\r\n\r\n    this._processFileName = ctrls['FileOne'].value;\r\n\r\n    var t = this.ConversionFilesDto.find(x=> x.filePath == this._processFileName);\r\n    var request = new GetWorkSheetsRequest({CleanedFileName : t.filePath});\r\n\r\n    var getWorksheetsResponse = await this._compareBl.GetWorkSheets(request);\r\n\r\n    if (getWorksheetsResponse.status)\r\n      this.ProcessedWorkSheets = getWorksheetsResponse.workSheets;\r\n\r\n      this._messagingService.LoadingMsg(false);\r\n  }\r\n\r\n  public async Compare()\r\n  {\r\n    this._messagingService.LoadingMsg(true);\r\n    var ctrls = this.WorkSheetForm.controls;\r\n    var processedWs = ctrls['ProcessedWs'].value;\r\n    var droppedWs = ctrls['DroppedWs'].value;\r\n    var startIdx = ctrls['start'].value;\r\n\r\n    var t = this.ConversionFilesDto.find(x=> x.filePath == this._processFileName);\r\n\r\n    var compareRequest = new CompareRequest({ProcessedFile : this._processFileName,\r\n                                            ProcessedWs : processedWs,\r\n                                            DroppedWs : droppedWs,\r\n                                            AccountName : t.accountName,\r\n                                            StartIdx : startIdx });\r\n\r\n    var compareResponse = await this._compareBl.Compare(compareRequest, this._file);\r\n\r\n    if (compareResponse.status)\r\n    {\r\n      this.BldgClassMatched = compareResponse.totalBldgMatched;\r\n      this.BldgClassNotMatched = compareResponse.totalBldgNotMatched;\r\n      this.OccupancyMatched = compareResponse.totalOccupancyMatched;\r\n      this.OccupancyNotMatched = compareResponse.totalOccupancyNotMatched;\r\n      this.CompareResults = compareResponse.compareResults;\r\n      this.ShowResults = true;\r\n    }\r\n    \r\n    this._messagingService.LoadingMsg(false);\r\n   \r\n  }\r\n\r\n}\r\n","import { Component, OnInit, Input } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-context-menu',\r\n  templateUrl: './context-menu.component.html',\r\n  styleUrls: ['./context-menu.component.css']\r\n})\r\nexport class ContextMenuComponent implements OnInit {\r\n\r\n  @Input() x : number = 0;\r\n  @Input() y : number = 0;\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  \r\n\r\n}\r\n","<div class=\"contextmenu\" [ngStyle]=\"{'left.px': x, 'top.px': y-80}\">\r\n    this is your contextmenu\r\n  </div>\r\n","<div class=\"col-md-12\">\r\n    <div class=\"card cardCust\">\r\n<div class=\"sectionHeader\">\r\n  <div class=\"card-body\">\r\n <form class=\"form-horizontal\" [formGroup]=\"ImportForm\" >\r\n    <div class=\"sectionContent\">\r\n        <div class=\"row tblMargin\" >\r\n            <div class=\"col-sm-12\">\r\n                <span  class=\"errorHdrMsg margLeftOne\" *ngIf=\"Errors?.length > 0\">The following errors occured - </span>\r\n            </div>\r\n        </div>\r\n        <div class=\"row tblMargin\" *ngFor=\"let err of Errors;\">\r\n            <div class=\"col-sm-12\">\r\n                <span class=\"errorMsg margLeftOne\">{{err}}</span>\r\n            </div>\r\n        </div>\r\n\r\n        <div class=\"row lnHeight tblMargin\">\r\n            <div class=\"col-1 rwLeft\"></div>\r\n            <div class=\"col-sm-3\" *ngIf=\"!IsEdit\">\r\n\r\n                <input (change)=\"this.onFilechange($event)\" class=\"form-control\" type=\"file\" id=\"formFile\" style=\"border : none !important\">\r\n               \r\n            </div>\r\n            <div class=\"col-sm-2\"></div>\r\n            <div class=\"col-sm-4\"></div>\r\n        </div>\r\n        <div class=\"row lnHeight tblMargin\" >\r\n            <div class=\"col-1 rwLeft\" >\r\n                <!--<div class=\"dropzone\" >\r\n                    <div class=\"center\">\r\n                            <ngx-file-drop dropZoneLabel=\"Please Drop files here\" (onFileDrop)=\"dropped($event)\"  customstyle=\"filedrop\">\r\n                                <ng-template ngx-file-drop-content-tmp let-openFileSelector=\"openFileSelector\">\r\n                                    <div class=\"text-wrapper\">\r\n                                        <div class=\"fileDropTxt\">{{FilePath}}</div>\r\n                                    </div>\r\n                                </ng-template>\r\n                            </ngx-file-drop>\r\n                    </div>\r\n                </div>-->\r\n               </div>\r\n\r\n\r\n            <div class=\"col-lg-1\">\r\n                <label>Name <span class=\"man\">*</span></label>\r\n            </div>\r\n            <div class=\"col-sm-2\">\r\n                <input type=\"text\" class=\"form-control txtSmall dtTxt\" name=\"account\" formControlName=\"Name\"  />\r\n            </div>\r\n    \r\n            <div class=\"col-lg-1 cmbMarg\">\r\n                <label class=\"lblWidth\">WorkSheet <span class=\"man\">*</span></label>\r\n            </div>\r\n            <div class=\"col-xs-3 cmbMarg\">\r\n                <ng-select class=\"selectStyle cmbSize\"\r\n                [items]=\"WorkSheets\"\r\n                bindLabel=\"Name\"\r\n                placeholder=\"Please select a WorkSheet\"\r\n                bindValue=\"Name\"\r\n                clearable=\"true\"\r\n                formControlName=\"WorkSheet\"\r\n                clearAllText=\"Clear\">\r\n                </ng-select>\r\n    \r\n            </div>\r\n    \r\n            <div class=\"col-1 rwLeft\" *ngIf=\"IsEdit\"></div>\r\n            <div class=\"col-lg-1 cmbMarg\">\r\n\r\n                <label>Currency <span class=\"man\">*</span></label>\r\n            </div>\r\n            <div class=\"col-xs-3 cmbMarg\">\r\n                <ng-select class=\"selectStyle cmbSize\"\r\n                [items]=\"Currencies\"\r\n                bindLabel=\"name\"\r\n                placeholder=\"Please select a Currency\"\r\n                bindValue=\"currencyId\"\r\n                formControlName=\"Currency\"\r\n                clearable=\"true\"\r\n                clearAllText=\"Clear\">\r\n                </ng-select>\r\n            </div>\r\n        </div>\r\n\r\n        <div class=\"row lnHeight tblMargin\" >\r\n            <div class=\"col-1 rwLeft\"> </div>\r\n            <div class=\"col-sm-1\">\r\n                <label>Acc Num <span class=\"man\">*</span></label>\r\n            </div>\r\n            <div class=\"col-sm-2\"> \r\n                <input type=\"text\" class=\"form-control txtSmall dtTxt\" name=\"num\" formControlName=\"Num\"  />\r\n            </div>\r\n\r\n            <div class=\"col-lg-1 cmbMarg\">\r\n                <label>Inception</label>\r\n            </div>\r\n            <div class=\"col-xs-3 cmbMarg\">\r\n                <input type=\"text\" class=\"form-control dtTxt\" \r\n                placeholder=\"31/12/9999\" ngbDatepicker #d=\"ngbDatepicker\" \r\n                dateFormat=\"dd/mm/yyyy\" formControlName=\"Inception\" (focus)=\"d.open()\"/>\r\n            </div>\r\n\r\n            <div class=\"col-lg-1 cmbMarg\">\r\n                <label>Expiry</label>\r\n            </div>\r\n            <div class=\"col-xs-3 cmbMarg\">\r\n                <input type=\"text\" class=\"form-control dtTxt\" placeholder=\"31/12/9999\" ngbDatepicker #e=\"ngbDatepicker\" formControlName=\"Expiry\" dateFormat=\"dd/mm/yyyy\" (focus)=\"e.open()\"/>\r\n            </div>\r\n        </div>\r\n\r\n        <div class=\"row lnHeight tblMargin\">\r\n            <div class=\"col-1 rwLeft\"></div>\r\n            <div class=\"col-sm-1\">\r\n                <label>Total TIV <span class=\"man\">*</span></label>\r\n            </div>\r\n            <div class=\"col-sm-2\"> \r\n                <input type=\"text\" class=\"form-control txtSmall dtTxt\" name=\"tiv\" formControlName=\"Tiv\"  />\r\n            </div>\r\n          \r\n            <div class=\"col-lg-1 cmbMarg\">UserText 1</div>\r\n            <div class=\"col-xs-3 cmbMarg\">\r\n                <input type=\"text\" class=\"form-control txtSmall dtTxt\" name=\"usrTxt1\" formControlName=\"UsrTxt1\"  />\r\n            </div>\r\n\r\n            <div class=\"col-lg-1 cmbMarg\">UserDef 1</div>\r\n            <div class=\"col-xs-3 cmbMarg\">\r\n                <input type=\"text\" class=\"form-control txtSmall dtTxt\" name=\"usrDef1\" formControlName=\"UsrDef1\"  />\r\n            </div>\r\n        </div>\r\n\r\n        <div class=\"row lnHeight tblMargin\">\r\n        <div class=\"col-1 rwLeft\"></div>\r\n          <!--  <div class=\"col-sm-1\" *ngIf=\"!IsEdit\"> </div>-->\r\n            <div class=\"col-lg-1\">\r\n                Limit\r\n            </div>\r\n            <div class=\"col-sm-2\"> \r\n                <input type=\"text\" class=\"form-control txtSmall dtTxt\" name=\"limit\" formControlName=\"Limit\"  />\r\n            </div>\r\n          \r\n            <div class=\"col-lg-1 cmbMarg\">Deductible</div>\r\n            <div class=\"col-sm-2\">\r\n                <input type=\"text\" class=\"form-control txtSmall dtTxt\" name=\"deductible\" formControlName=\"Deductible\"  />\r\n            </div>\r\n\r\n            <div class=\"col-sm-3\">&nbsp;</div>\r\n        </div>\r\n       \r\n    <div class=\"row tblMargin\" *ngIf=\"IsEdit\">\r\n            <div class=\"col-1 rwLeft\"></div>\r\n            <div class=\"col-sm-1\" >\r\n            <label>File Path</label>\r\n        </div>\r\n        <div class=\"col-sm-5\"> \r\n            <input type=\"text\" class=\"form-control txtSmall\" name=\"filePath\" readonly formControlName=\"FilePath\" />\r\n        </div>\r\n        <div class=\"col-sm-7\"></div>\r\n    </div>\r\n\r\n    <div class=\"row tblMargin margBtm\" *ngIf=\"!IsEdit\">\r\n        <div class=\"col-sm-9\" >&nbsp;</div>\r\n        <div class=\"col-sm-3\">\r\n            <button class=\"btn-sm btn-info btn-outline-rounded btnMarg btnMargRt\" (click)=\"Save(true)\" [disabled]=\"!ImportForm.valid\">Next > Mappings</button>\r\n        </div>\r\n        \r\n        \r\n    </div>\r\n\r\n    <div class=\"row tblMargin margBtm\" *ngIf=\"IsEdit\">\r\n        <div class=\"col-sm-9\">&nbsp;</div>\r\n        <div class=\"col-sm-3\">\r\n            <button class=\"btn-sm btn-info btn-outline-rounded btnMarg btnMargRt\" (click)=\"Save(true)\" [disabled]=\"!ImportForm.valid\">Next > Map Fields</button>\r\n        </div>\r\n       \r\n        \r\n    </div>\r\n    \r\n\r\n</div>\r\n\r\n</form>\r\n</div>\r\n</div>\r\n</div>\r\n","\"use strict\"\r\n\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { FileSystemFileEntry, NgxFileDropEntry } from 'ngx-file-drop';\r\nimport { LookupBl } from '../../Bl/lookup-bl';\r\nimport { CurrencyDto } from '../../Models/Dtos/currency-dto';\r\nimport {WorkSheetDto} from '../../Models/Dtos/work-sheet-dtos';\r\nimport * as XLSX from 'xlsx';\r\nimport { ConversionService } from '../../Services/conversion.service';\r\nimport { ConversionDto } from '../../Models/Dtos/conversion-dto';\r\nimport { AccountDto } from '../../Models/Dtos/account-dto';\r\nimport {ManagerBl } from '../../Bl/manager-bl';\r\nimport {NgbDate} from \"@ng-bootstrap/ng-bootstrap\";\r\nimport { Router } from '@angular/router';\r\nimport { FieldDto } from '../../Models/Dtos/field-dto';\r\n\r\n@Component({\r\n  selector: 'app-import',\r\n  templateUrl: './import.component.html',\r\n  styleUrls: ['./import.component.css']\r\n})\r\nexport class ImportComponent implements OnInit {\r\n\r\n  public ImportForm : FormGroup;\r\n  public FilePath : string = 'Please Drop SOV File Here';\r\n  public Errors : string[] = [];\r\n  public Currencies : CurrencyDto[];\r\n  public WorkSheets : WorkSheetDto[] =[];\r\n\r\n  private _file : File;\r\n\r\n  private _conversion : ConversionDto;\r\n\r\n  public IsEdit : boolean = false;\r\n\r\n  public AddFields : FieldDto;\r\n\r\n  constructor(private _formBuilder: FormBuilder, private _lookupBl: LookupBl, \r\n    private _conversionService : ConversionService,\r\n    private _managerBl : ManagerBl, private _router : Router) { }\r\n\r\n\r\n  ngOnInit() {\r\n\r\n    window.addEventListener(\"dragover\", e => {\r\n      e && e.preventDefault();\r\n    }, false);\r\n    window.addEventListener(\"drop\", e => {\r\n      e && e.preventDefault();\r\n    }, false);\r\n\r\n    this.AddFields = new FieldDto();\r\n     this._conversion = this._conversionService.Get();\r\n  \r\n    this.ConstructFormBuilder();\r\n\r\n    if (!this._conversion.edit){\r\n      this.Errors.push('Please select an SOV');\r\n    }\r\n      else\r\n      {\r\n        //this.FilePath = this._conversion.file;\r\n        this.IsEdit = true;\r\n      }\r\n\r\n    this.LoadLookups();\r\n\r\n    if (this._conversion.edit)\r\n    {\r\n      this.LoadVals();\r\n    }\r\n\r\n  }\r\n\r\n  onFilechange(event: any) {\r\n    console.log(event.target.files[0])\r\n    var file = event.target.files[0]\r\n\r\n    let ext = file.name.split('.')[file.name.split('.').length - 1];\r\n    if(ext == 'xlsx')\r\n    {\r\n      this._file = file;\r\n      this.FilePath = file.name;\r\n      this.ReadXl(file);\r\n    }\r\n    else\r\n    {\r\n       this.Errors.push(file.name + \" does not have a valid file type\");\r\n       this.Errors.push('Please select an SOV');\r\n    }\r\n\r\n  }\r\n\r\n  private LoadVals()\r\n  {\r\n    var ctrls = this.ImportForm.controls;\r\n\r\n    ctrls['Name'].setValue(this._conversion.account.name);\r\n\r\n    ctrls['WorkSheet'].setValue(this._conversion.workSheetName);\r\n\r\n    ctrls['Currency'].setValue(this._conversion.currency.currencyId);\r\n    ctrls['Num'].setValue(this._conversion.account.accountNum);\r\n\r\n    var inceptNormal = new Date(this._conversion.account.incept);\r\n\r\n    var ngIncept = this.FormatNgDate(inceptNormal);\r\n    ctrls['Inception'].setValue(ngIncept);\r\n\r\n    var expiryNormal = new Date(this._conversion.account.expiry);\r\n\r\n    var ngExpiry = this.FormatNgDate(expiryNormal);\r\n    ctrls['Expiry'].setValue(ngExpiry);\r\n\r\n    ctrls['Tiv'].setValue(this._conversion.totalTiv);\r\n    ctrls['FilePath'].setValue(this._conversion.file);\r\n    ctrls['UsrTxt1'].setValue(this._conversion.account.userText1);\r\n    ctrls['UsrDef1'].setValue(this._conversion.account.userDef1);\r\n    ctrls['Deductible'].setValue(this._conversion.account.policyDeductible);\r\n    ctrls['Limit'].setValue(this._conversion.account.policyLimit);\r\n  }\r\n\r\n  private FormatNgDate(date : Date)\r\n  {\r\n    return {year: date.getFullYear(), month: date.getMonth() + 1, day: date.getDate()};\r\n  }\r\n\r\n  private async LoadLookups()\r\n  {\r\n    var lookupResponse = await this._lookupBl.GetImportLookup();\r\n\r\n    if (lookupResponse.status)\r\n    {\r\n      this.Currencies = lookupResponse.currencies;\r\n    }\r\n    \r\n  }\r\n  private ConstructFormBuilder()\r\n  {\r\n    this.ImportForm = this._formBuilder.group({\r\n      Name: [null, Validators.required],\r\n      Currency: [null, Validators.required],\r\n      WorkSheet : [null, Validators.required],\r\n      Num : [null, Validators.required],\r\n      Inception : [null],\r\n      Expiry : [null],\r\n      Tiv : [null,Validators.required],\r\n      FilePath : [null],\r\n      UsrDef1 : [null],\r\n      UsrTxt1 : [null],\r\n      Deductible : [null],\r\n      Limit : [null]\r\n      });\r\n  }\r\n\r\n  private ReadXl(file:File)\r\n  {\r\n    const reader: FileReader = new FileReader();\r\n     \r\n    reader.onload = (e: any) => {\r\n     \r\n      const bstr: string = e.target.result;\r\n      const wb: XLSX.WorkBook = XLSX.read(bstr, {type: 'binary'});\r\n\r\n\r\n      var sheets = wb.SheetNames;\r\n      this.WorkSheets = [];\r\n      sheets.forEach(x=>\r\n        {\r\n            this.WorkSheets.push(new WorkSheetDto({ Name : x}));\r\n        });\r\n    };\r\n\r\n\t\treader.readAsBinaryString(file);\r\n       \r\n  }\r\n\r\n  public async Save(mapNew : boolean)\r\n  {\r\n   // this._loadingBarService.start();\r\n    if (!this._conversion.edit)\r\n    {\r\n      this._conversion.account = new AccountDto();\r\n    }\r\n\r\n    var ctrls = this.ImportForm.controls;\r\n\r\n    var name = ctrls['Name'].value;\r\n    this._conversion.name = name;\r\n    this._conversion.account.name = name;\r\n\r\n    var worksheet = ctrls['WorkSheet'].value;\r\n    this._conversion.workSheetName = worksheet;\r\n\r\n    var currencyId = ctrls['Currency'].value;\r\n    var currency = this.Currencies.find(x=> x.currencyId == currencyId);\r\n    this._conversion.currency = currency;\r\n    this._conversion.currencyId = currencyId;\r\n\r\n    var accNum = ctrls['Num'].value;\r\n    this._conversion.account.accountNum = accNum;\r\n\r\n    var inception = ctrls['Inception'].value;\r\n\r\n    if (inception)\r\n    {\r\n      if (inception.year == 9999)\r\n      {\r\n        this._conversion.account.incept = new Date('9999/12/31');\r\n      }\r\n      else\r\n      {\r\n        this._conversion.account.incept = this.transform(inception);\r\n      }\r\n     \r\n    }\r\n    else\r\n    {\r\n      inception = new Date('9999/12/31');\r\n      this._conversion.account.incept = inception;\r\n    }\r\n   \r\n\r\n    var expiry = ctrls['Expiry'].value;\r\n\r\n    if (expiry)\r\n    {\r\n      if (expiry.year == 9999)\r\n      {\r\n        this._conversion.account.expiry = new Date('9999/12/31');\r\n      }\r\n      else{\r\n        this._conversion.account.expiry = this.transform(expiry);\r\n      }\r\n      \r\n    }\r\n    else{\r\n      expiry = new Date('9999/12/31');\r\n      this._conversion.account.expiry= expiry;\r\n    }\r\n    //this._conversion.account.expiry = this.transform(expiry);\r\n\r\n    var tiv = ctrls['Tiv'].value;\r\n    this._conversion.totalTiv = tiv;\r\n\r\n    var usrTxt = ctrls['UsrTxt1'].value;\r\n    this._conversion.account.userText1 = usrTxt;\r\n\r\n    var usrDef = ctrls['UsrDef1'].value;\r\n    this._conversion.account.userDef1 = usrDef;\r\n\r\n    var deductible = ctrls['Deductible'].value;\r\n    this._conversion.account.policyDeductible = deductible;\r\n\r\n    var limit = ctrls['Limit'].value;\r\n    this._conversion.account.policyLimit = limit;\r\n\r\n    if (!this._conversion.edit)\r\n    {\r\n      //now we should create or save the conversion.\r\n      var uploadResponse = await this._managerBl.UploadFile( this._file,  worksheet,name);\r\n\r\n      if (uploadResponse.status)\r\n      {\r\n        this._conversion.file = uploadResponse.fileName;\r\n        this._conversion.workSheetName = uploadResponse.workSheetName;\r\n      }\r\n      else{\r\n        //we should display messages to user here\r\n        this.Errors = uploadResponse.messages;\r\n        return;\r\n      }\r\n\r\n    }\r\n\r\n    this._conversion.saveConversion = true;\r\n    this._conversion.saveAccount = true;\r\n\r\n    this._conversionService.Set(this._conversion);\r\n\r\n    var saveConversionResponse = await this._managerBl.SaveImport(this._conversion);\r\n    \r\n    //this._loadingBarService.complete();\r\n    \r\n    if (saveConversionResponse.status)\r\n    {\r\n      this._conversion.saveConversion = false;\r\n      this._conversion.saveAccount = false;\r\n    \r\n      this._conversion.convId = saveConversionResponse.conversionId;\r\n      this._conversionService.Set(this._conversion);\r\n\r\n      if (mapNew)\r\n        this._router.navigate(['/mappingNew']);\r\n      else\r\n        this._router.navigate(['/mapping']);\r\n    }\r\n  }\r\n\r\n  transform(value: NgbDate): Date {\r\n    return new Date(value.year, value.month, value.day);\r\n}\r\n\r\n    \r\n  \r\n\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators, SelectControlValueAccessor } from '@angular/forms';\r\nimport { AuthenticationService} from '../../Data/authentication-service';\r\nimport { AuthenticateRequest} from \"../../Models/Requests/authenticate-request\";\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { MediatorService } from '../../Services/mediator.service';\r\nimport { NotificationMessage } from '../../Models/notification-message';\r\n\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n\r\n  public LoginForm: FormGroup;\r\n  private _returnUrl : string; \r\n\r\n  constructor(private _formBuilder: FormBuilder,\r\n     private _authenticationService : AuthenticationService,\r\n     private _router : Router, private _mediatorService  : MediatorService,\r\n     private _route: ActivatedRoute) { }\r\n\r\n  ngOnInit() {\r\n\r\n    //debugger;\r\n    //this._authenticationService.logout();\r\n    this._returnUrl = this._route.snapshot.queryParams['returnUrl'] \r\n    this.LoginForm = this._formBuilder.group({\r\n      username: ['', Validators.required],\r\n      password: ['', Validators.required]\r\n  });\r\n  }\r\n\r\n  public async OnSubmit() {\r\n\r\n    var ctrls = this.LoginForm.controls;\r\n\r\n    var userName = ctrls['username'].value;\r\n    var pwd = ctrls['password'].value;\r\n    var authenticateRequest = new AuthenticateRequest({ userName: userName, Pwd : pwd });\r\n    var response = await this._authenticationService.Login(authenticateRequest);\r\n\r\n   \r\n    if (!response.status)\r\n      return; \r\n\r\n    this._mediatorService.Publish(new NotificationMessage ({ Subject: \"Successful Login\", Refresh : true, body : \"\" }));\r\n\r\n    if (!this._returnUrl)\r\n      this._returnUrl = \"manager\";\r\n\r\n    if (response.changePwd)\r\n      this._router.navigate(['/changePwd'],{ queryParams: { returnUrl: this._returnUrl } } );\r\n    else\r\n      this._router.navigate([this._returnUrl]);\r\n  }\r\n\r\n}\r\n","﻿<div class=\"col-md-6 offset-md-3 mt-5\">\r\n  \r\n    <div class=\"card\">\r\n        <h4 class=\"card-header bg fnt\">Login</h4>\r\n        <div class=\"card-body\">\r\n            <form [formGroup]=\"LoginForm\" (ngSubmit)=\"OnSubmit()\">\r\n                <div class=\"form-group\">\r\n                    <label for=\"username\">Username</label>\r\n                    <input type=\"text\" formControlName=\"username\" class=\"form-control\"  />\r\n                    <!-- <input type=\"text\" formControlName=\"username\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.username.errors }\" />\r\n                     <div *ngIf=\"submitted && f.username.errors\" class=\"invalid-feedback\"> \r\n                        <div *ngIf=\"f.username.errors.required\">Username is required</div>\r\n                    </div> -->\r\n                </div>\r\n                <div class=\"form-group\">\r\n                    <label for=\"password\">Password</label>\r\n                    <input type=\"password\" formControlName=\"password\" class=\"form-control\"/>\r\n                    <!-- <div *ngIf=\"submitted && f.password.errors\" class=\"invalid-feedback\">\r\n                        <div *ngIf=\"f.password.errors.required\">Password is required</div>\r\n                    </div> -->\r\n                </div>\r\n                 <button  class=\"btn-sm btn-info btn-outline-rounded\" [disabled]=\"!LoginForm.valid\">\r\n                    Login\r\n                </button> \r\n             </form>\r\n        </div>\r\n    </div>\r\n</div>\r\n","<ng-template #content let-c=\"close\" let-d=\"dismiss\">    \r\n    <div class=\"modal-header bg-dark\">\r\n        <h4 class=\"modal-title modalTitle\" id=\"modal-basic-title\">Delete Mapped Locations</h4>  \r\n        <button type=\"button\" class=\"close modalClose\" aria-label=\"Close\" (click)=\"CloseModal()\">\r\n            <span aria-hidden=\"true\">×</span>\r\n          </button>\r\n    </div>    \r\n    <div class=\"modal-body\">    \r\n        <p>Are you sure you want to delete all mapped Locations?</p>    \r\n    </div>    \r\n    <div class=\"modal-footer\">  \r\n        <button type=\"button\" class=\"btn-sm btn-success btn-outline-rounded btn-info\" (click)=\"DeleteLocations()\">Yes</button>    \r\n        <button type=\"button\" class=\"btn-sm btn-success btn-outline-rounded btn-info\" (click)=\"CloseModal()\">No</button>    \r\n    </div>    \r\n</ng-template>\r\n\r\n<div class=\"sectionHeader\">\r\n\r\n    <div class=\"sectionContent\">\r\n        <form>\r\n        <div class=\"row tblMargin\">\r\n            \r\n            <div class=\"col-sm-1 \">\r\n                <div class=\"checkbox chk\">\r\n                    <input type=\"checkbox\" id=\"c1\" name=\"cb\" [(ngModel)]=\"Imported\">\r\n                    <label for=\"c1\">Imported</label>\r\n                </div>\r\n\r\n            </div>\r\n            <div class=\"col-sm-1 \">\r\n                <div class=\"checkbox chk\">\r\n                    <input type=\"checkbox\" id=\"c2\" name=\"cb2\" [(ngModel)]=\"InProgress\">\r\n                    <label for=\"c2\">Progress</label>\r\n                </div>\r\n            </div>   \r\n            <div class=\"col-sm-1\">\r\n                <div class=\"checkbox chk\">\r\n                    <input type=\"checkbox\" id=\"c23\" name=\"cb23\" [(ngModel)]=\"Completed\">\r\n                    <label for=\"c23\">Complete</label>\r\n                </div>\r\n            </div> \r\n            <div class=\"col-sm-1\">\r\n                <div class=\"checkbox chk\">\r\n                    <input type=\"checkbox\" id=\"c24\" name=\"cb24\" [(ngModel)]=\"Failed\">\r\n                    <label for=\"c24\">Failed</label>\r\n                </div>\r\n            </div> \r\n                   <!--<p> <input type=\"checkbox\" id=\"c1\" name=\"cb\" [(ngModel)]=\"Imported\" >\r\n                    <label for=\"c1\" class=\"noLnHeight\">Imported</label>\r\n                   -->\r\n                <!-- <label class=\"checkbox-inline\"><input type=\"checkbox\" [(ngModel)]=\"Imported\" name=\"imported\">Imported</label>\r\n                \r\n                    <label class=\"checkbox-inline\"><input type=\"checkbox\" [(ngModel)]=\"InProgress\" name=\"inprogress\">in Progress</label> -->\r\n                \r\n                   <!-- <input type=\"checkbox\" id=\"c2\" name=\"cb1\" [(ngModel)]=\"InProgress\" >\r\n                    <label for=\"c2\" class=\"noLnHeight\">In Progress</label>\r\n\r\n                    <input type=\"checkbox\" id=\"c3\" name=\"completed\" [(ngModel)]=\"Completed\">\r\n                    <label for=\"c3\" class=\"noLnHeight\">Complete</label>\r\n                   -->\r\n                \r\n                    <!--</p> <label class=\"checkbox-inline\"><input type=\"checkbox\" [(ngModel)]=\"Completed\" name=\"completed\">Complete</label>\r\n            </div> -->\r\n            <div class=\"col-sm-1\"></div>\r\n            <div class=\"col-xs-1\">\r\n                <label class=\"lblMargin\">Account</label>\r\n            </div>\r\n            <div class=\"col-sm-2\">\r\n                <input type=\"text\" class=\"form-control txtSmall\" name=\"account\" [(ngModel)]=\"Account\"  />\r\n            </div>\r\n            <div class=\"col-sm-2\">\r\n                <button class=\"btn-sm btn-success btn-outline-rounded btn-info\" (click)=\"Filter()\">Filter</button>\r\n            </div>\r\n            <div class=\"col-sm-1\">\r\n                <button class=\"btn-sm btn-success btn-outline-rounded btn-info\" (click)=\"Import()\">New Import</button>\r\n            </div>\r\n        </div>\r\n    </form>\r\n\r\n\r\n    <div class=\"row tblMargin\">\r\n        <div class=\"sectionContent sectionTop\">\r\n            <ag-grid-angular\r\n                *ngIf=\"HasLoaded\"\r\n                style=\"width: 1467px;\"\r\n                class=\"ag-theme-balham marg\"\r\n                [rowData]=\"_conversions\"\r\n                [columnDefs]=\"ColumnDefs\"\r\n                [gridOptions]=\"Options\"\r\n                (cellDoubleClicked)='onCellClicked($event)'\r\n                [rowSelection]=\"RowSelection\"\r\n                [overlayNoRowsTemplate]=\"NoRowsTemplate\"\r\n                (gridReady)=\"onGridReady($event)\">\r\n            </ag-grid-angular>\r\n            <div class=\"marg\">\r\n                <app-pager [Paging]=\"Paging\" [TypeId]=\"1\" (PagingChanged)=\"PageChanged($event)\"></app-pager>\r\n            </div>\r\n        </div>\r\n      \r\n    </div>\r\n    <!--<div class=\"row tblMargin\">\r\n        <gui-grid style=\"margin-right:12px;margin-left:12px;\"\r\n\t\t\t\t  [rowHeight]=\"28\"\r\n                  [width]=\"1460\"\r\n\t\t\t\t  [source]=\"_conversions\"\r\n                  [paging]=true>\r\n                  <gui-grid-column header=\"ConversionId\" width=\"100\" field=\"convId\">\r\n                  </gui-grid-column>\r\n                \r\n            \r\n                <gui-grid-column header=\"Status\" field=\"status\" width=\"120\" >\r\n                    <ng-template let-value=\"value\">\r\n                        {{Status[value]}}\r\n                    </ng-template>\r\n                </gui-grid-column>\r\n                <gui-grid-column header=\"Account Name\" field=\"account\" width=\"275\">\r\n                    <ng-template let-value=\"value\">\r\n                        {{value.name}}\r\n                    </ng-template>\r\n                </gui-grid-column>\r\n                <gui-grid-column header=\"File\" field=\"file\" width=\"320\">\r\n                </gui-grid-column>\r\n                <gui-grid-column header=\"Currency\" field=\"currency\" width=\"120\">\r\n                    <ng-template let-value=\"value\">\r\n                        {{value.name}}\r\n                    </ng-template>\r\n                </gui-grid-column>\r\n                <gui-grid-column header=\"User\" field=\"user\" width=\"130\">\r\n                    <ng-template let-value=\"value\">\r\n                        {{value.name}}\r\n                    </ng-template>\r\n                </gui-grid-column>\r\n                <gui-grid-column header=\"Received\" field=\"received\" width=\"130\">\r\n                    <ng-template let-value=\"value\">\r\n                        {{value}}\r\n                    </ng-template>\r\n                </gui-grid-column>\r\n            \r\n                \r\n\t\t</gui-grid>\r\n    </div>\r\n-->\r\n   <!-- <div class=\"row tblMargin\">\r\n        <div class=\"col-sm-11\"> \r\n            <ngb-pagination [collectionSize]=\"Pages * 10\" [maxSize]=\"10\" [(page)]=\"SelectedPage\" [rotate]=\"true\" size=\"sm\" (pageChange)=\"Filter($event)\" ></ngb-pagination>\r\n        </div>\r\n    \r\n    </div>-->\r\n</div>\r\n\r\n","import { Component, OnInit, AfterViewInit, TemplateRef, ViewChild} from '@angular/core';\r\nimport { ManagerBl } from '../../Bl/manager-bl';\r\nimport { ConversionDto } from '../../Models/Dtos/conversion-dto';\r\nimport { Status } from '../../Models/Enums/status.enum';\r\nimport { ConversionService } from '../../Services/conversion.service';\r\nimport { Router } from '@angular/router';\r\nimport { MessageService } from '../../Services/message-service';\r\nimport { GridOptions } from 'ag-grid-community';\r\nimport * as moment from 'moment';\r\nimport { AuthenticationService } from '../../Data/authentication-service';\r\nimport { RouterLinkComponent } from '../../AgGrid/router-link/router-link.component';\r\nimport { RouterLinkTwoComponent } from '../../AgGrid/router-link-two/router-link-two.component';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { PagingDto } from '../..//Models/Dtos/paging-dto';\r\nimport { PagingBl } from '../../Bl/paging-bl';\r\nimport { PagingRequest } from '../../Models/Requests/paging-request';\r\nimport { PagingResponse } from '../../Models/Response/paging-response';\r\n\r\n\r\n@Component({\r\n  selector: 'app-manager',\r\n  templateUrl: './manager.component.html',\r\n  styleUrls: ['./manager.component.css']\r\n})\r\n\r\nexport class ManagerComponent implements OnInit, AfterViewInit {\r\n  @ViewChild('content',{static: true}) contentElement : TemplateRef<any>;\r\n\r\n  public Options:GridOptions;\r\n  public Account : string;\r\n  public _conversions : ConversionDto[] = [];\r\n\r\n  private _convId : number;\r\n  public Status = Status;\r\n  public SelectedRow : number;\r\n  //private _progressRef: NgProgressRef;\r\n  public SelectedPage : number = 1;\r\n  public Pages : number = 0;\r\n  public Imported : boolean = true;\r\n  public InProgress : boolean = true;\r\n  public Completed : boolean = true;\r\n  public Failed : boolean = true;\r\n  public HasLoaded : boolean = false;\r\n  public RowSelection : string = 'single';\r\n  private _gridApi : any;\r\n  public Paging : PagingResponse;\r\n\r\n\r\n\r\n  public NoRowsTemplate =\r\n  \"<span style='font-weight:bold; color:#17a2b8; font-size:12px'>No Records Returned</span>\";\r\n\r\n\r\n  public ColumnDefs = [\r\n    {headerName: 'ConversionId', field: 'convId', width:100, headerClass:'ag-custom-header',pinned: 'left' },\r\n    {headerName: 'Status', field: 'status' , width:120,headerClass:'ag-custom-header',resizable: true, valueGetter: function(params) {\r\n    \r\n      var st = Status;\r\n      if (params.data)\r\n        return st[params.data.status]\r\n      \r\n      return st[1];\r\n    }},\r\n    {headerName: 'Account Name', field: 'account.name', width:275, headerClass:'ag-custom-header', resizable: true},\r\n    {headerName: 'File',  field: 'file', width:300, headerClass:'ag-custom-header', resizable: true},\r\n    {headerName: 'Currency', field: 'currency.name', width:130, headerClass:'ag-custom-header', resizable: true},\r\n    {headerName: 'User', field: 'user.name', width:130, headerClass:'ag-custom-header', resizable: true},\r\n   \r\n    {headerName: 'Date Received', field: 'received', width:130, headerClass:'ag-custom-header', resizable: true,\r\n    cellRenderer: (data) => {\r\n\r\n      return moment(data.data.received).format('DD/MM/YYYY')\r\n  }},\r\n  {headerName: 'Files', field: 'zipPath', width:140, headerClass:'ag-custom-header', resizable: true,\r\n  cellRendererFramework: RouterLinkComponent,\r\n  cellRendererParams: {\r\n    onClick: function(conversionDto : ConversionDto)\r\n    {\r\n      this.Export(conversionDto);\r\n    }.bind(this),\r\n    label: 'Download'\r\n  }},\r\n\r\n  {headerName: 'Locations', field: 'hasLocations', width:140, headerClass:'ag-custom-header', resizable: true,\r\n  cellRendererFramework: RouterLinkTwoComponent,\r\n  cellRendererParams: {\r\n    onClick: function(conversionDto : ConversionDto)\r\n    {\r\n      this._convId = conversionDto.convId;\r\n      this._conversionService.Set(conversionDto);\r\n      this._modalService.open(this.contentElement, { ariaLabelledBy: 'modal-basic-title'});\r\n    }.bind(this),\r\n    label: 'Clear Locations'\r\n  }},\r\n  \r\n   \r\n  \r\n  ];\r\n\r\n  constructor(private _router : Router,private _managerBl : ManagerBl, private _conversionService : ConversionService,\r\n    private _messagingService : MessageService,\r\n    private _authenticationService : AuthenticationService,\r\n    private _modalService: NgbModal, private _pagingBl : PagingBl\r\n   ) { }\r\n\r\n  async ngOnInit() {\r\n    \r\n    var pagingRequest = new PagingRequest ({ TypeId : 1, Filters : \"\", Current : 1, RecsPerPage : 15 });\r\n    await this.PageInit(pagingRequest);\r\n    this.initGrid()\r\n  }\r\n\r\n  private async Export(conversion : ConversionDto)\r\n  {\r\n    await this._managerBl.Download(conversion);\r\n  }\r\n\r\n  async ngAfterViewInit() {\r\n    \r\n    //this._paging = new PagingDto({ RecFirst: 1, PecLast : 15, First:1,Current:1, RecsPerPage:15 });\r\n    //this.GetNew(this._paging);\r\n    //this.initGrid();\r\n    //await this.GetNew(this._paging);\r\n  }\r\n\r\n  public async DeleteLocations()\r\n  {\r\n    //this._messagingService.LoadingMsg(true);\r\n    var response = await this._managerBl.DeleteLocations(this._convId);\r\n\r\n    if (response.status)\r\n    {\r\n      //await this.Get(1, null);\r\n      //this._gridApi.setDatasource(this.dataSource);\r\n      var pagingDto= new PagingDto({ RecFirst: 1, RecLast : 15, Filters: \"\", TypeId : 1 });\r\n      await this.GetNew(pagingDto);\r\n \r\n    }\r\n    \r\n   // this._messagingService.LoadingMsg(false);\r\n    var conv = this._conversionService.Get();\r\n    debugger;\r\n    conv.hasLocations = false;\r\n    this._conversionService.Set(conv);\r\n    this._modalService.dismissAll();\r\n  }\r\n\r\n\r\n\r\n  onCellClicked(params)\r\n  {\r\n    this.Select(params.data);\r\n  }\r\n\r\n  private initGrid()\r\n  {\r\n \r\n    this.Options = <GridOptions>{\r\n   \r\n      getRowStyle: (params) => {\r\n        if (params.node.rowIndex % 2 === 0) {\r\n          return {background: '#e7e7e7'};\r\n        }\r\n      }\r\n    };\r\n  }\r\n\r\n  async onGridReady(params) {\r\n    this._gridApi = params.api;\r\n   params.api.setDomLayout('autoHeight');\r\n   //params.api.setDatasource(this.dataSource);\r\n  \r\n\r\n \r\n  }\r\n\r\n  async Filter()\r\n  {\r\n    var pagingRequest = new PagingRequest ({ TypeId : 1, Filters : \"\", Current : 1, RecsPerPage : 15 });\r\n    await this.PageInit(pagingRequest);\r\n  }\r\n\r\n  Import()\r\n  {\r\n    this._router.navigate(['/import']);\r\n  }\r\n\r\n  SetClickedRow = function(index){\r\n    this.SelectedRow = index;\r\n  }\r\n\r\n  public Select(conversion : ConversionDto)\r\n  {\r\n    this._conversionService.Set(conversion);\r\n    this._router.navigate(['/import']);\r\n  }\r\n\r\n  public CloseModal()\r\n  {\r\n    this._modalService.dismissAll();\r\n  }\r\n\r\n \r\n  public async PageInit(pagingRequest : PagingRequest)\r\n  {\r\n    var status : number[] = [];\r\n\r\n    if (this.Imported)\r\n    {\r\n      status.push(1);\r\n    }\r\n    if (this.InProgress)\r\n    {\r\n      status.push(2);\r\n    }\r\n    if (this.Completed)\r\n    {\r\n      status.push(4);\r\n    } \r\n\r\n    if (this.Failed)\r\n    {\r\n      status.push(3);\r\n    }\r\n    var response = await this._pagingBl.PageConversions(pagingRequest, this.Account, status,this._authenticationService.currentUserValue.userId);\r\n    \r\n    this.Paging = response;\r\n  }\r\n\r\n\r\n  public async PageChanged(pagingDto : PagingDto)\r\n  {\r\n    await this.GetNew(pagingDto);\r\n   \r\n  }\r\n\r\n  private async GetNew(pagingDto : PagingDto)\r\n  {\r\n\r\n    this._messagingService.LoadingMsg(true);\r\n   //this._loadingBarService.start();\r\n    //this._messagingService.LoadingMsg(true);\r\n    var status : number[] = [];\r\n\r\n    if (this.Imported)\r\n    {\r\n      status.push(1);\r\n    }\r\n    if (this.InProgress)\r\n    {\r\n      status.push(2);\r\n    }\r\n    if (this.Completed)\r\n    {\r\n      status.push(4);\r\n    } \r\n\r\n    if (this.Failed)\r\n    {\r\n      status.push(3);\r\n    }\r\n\r\n    var managerResponse = await this._managerBl.Get(pagingDto, this.Account, status,this._authenticationService.currentUserValue.userId);\r\n\r\n    if (managerResponse.status)\r\n    {\r\n      this._conversions = managerResponse.conversions;\r\n\r\n      //this._paging = new PagingDto();\r\n\r\n      //this._paging.RecFirst = managerResponse.recFirst;\r\n      //this._paging.RecLast = managerResponse.recLast;\r\n      //this._paging.First = managerResponse.first;\r\n      //this._paging.Last = managerResponse.last;\r\n      //this._paging.Current = managerResponse.current;\r\n      //this._paging.RecsPerPage = managerResponse.recsPerPage;\r\n     //this._paging.Total  = managerResponse.total;\r\n\r\n     this._messagingService.LoadingMsg(false);\r\n      this.HasLoaded = true;\r\n    }\r\n  }\r\n\r\n}\r\n","<div class=\"sectionHeader\">\r\n   \r\n    <div class=\"sectionContent\">\r\n        <form name=\"addForm\">\r\n        <div class=\"row lnHeight tblMargin\">\r\n            <div class=\"col-sm-2\">\r\n                <ng-select class=\"selectStyle customMed\"\r\n                [items]=\"Headers\"\r\n                placeholder=\"Please select an Xl Col\"\r\n                clearable=\"true\"\r\n                name=\"cmbAdd\"\r\n                bindLabel=\"header\"\r\n                bindValue=\"header\"\r\n                [(ngModel)]=\"SelectedAdd\"\r\n                clearAllText=\"Clear\">\r\n                </ng-select>\r\n            </div>\r\n            <div class=\"col-xs-2\">\r\n                <button class=\"btn-sm btn-info btn-outline-rounded  btnMarg\" [disabled]=\"!SelectedAdd\" (click)=\"AddColumn()\" >Add Column</button>\r\n            </div>\r\n\r\n            <!--<div class=\"col-sm-1\"><label>Suggestions</label></div>-->\r\n\r\n            <div class=\"col-sm-2\">\r\n                <ng-select class=\"selectStyle customMed\"\r\n                [items]=\"Suggestions\"\r\n                placeholder=\"Please select a Suggestion\"\r\n                clearable=\"true\"\r\n                bindLabel=\"displayField\"\r\n                bindValue=\"id\"\r\n                [(ngModel)]=\"SelectedSuggestion\"\r\n                name=\"cmbSuggestions\"\r\n                clearAllText=\"Clear\">\r\n                </ng-select>\r\n            </div>\r\n            <div class=\"col-xs-2\">\r\n                <button class=\"btn-sm btn-info btn-outline-rounded  btnMarg\" [disabled]=\"!SelectedSuggestion\"  (click)=\"AddSuggestion()\" >Add Suggestion</button>\r\n            </div>\r\n            <div class=\"col-sm-1 chkMarg\">\r\n                <div class=\"checkbox chk\">\r\n                    <!--<input type=\"checkbox\" id=\"c2\" name=\"cb2\" [(ngModel)]=\"GeoCode\">\r\n                    <label for=\"c2\">GeoCode</label>\r\n                    -->\r\n                </div>\r\n            </div>\r\n            <div class=\"col-xs-2\">\r\n                <button class=\"btn-sm btn-info btn-outline-rounded btnMarg\" [disabled]=\"MapDisabled\" (click)=\"SaveFields()\">Map Fields > Locations</button>\r\n            </div>\r\n            <div class=\"col-sm-2\" style=\"display: flex; justify-content: space-between;\" >\r\n                <p class=\"smlTxt\">{{ValTxt}}\r\n                \r\n                <button type=\"button\" class=\"btn btn-info btn-xs fa fa-arrow-down\" *ngIf=\"!IsCollapsed\" (click)=\"IsCollapsed = !IsCollapsed\"></button> \r\n                <button type=\"button\" class=\"btn btn-info  btn-xs fa fa-arrow-up\" *ngIf=\"IsCollapsed\" (click)=\"IsCollapsed = !IsCollapsed\"></button> \r\n        \r\n                </p>\r\n            </div>\r\n        </div>\r\n\r\n        \r\n        </form>\r\n    </div>\r\n    <div class=\"sectionContent sectionTop\" [ngbCollapse]=\"IsCollapsed\">\r\n            <div class=\"col-sm-8\">\r\n                <table class=\"table table-striped tblMargin\">\r\n                    <thead>\r\n                        <tr>\r\n                          <th class=\"customth\">Validation</th>\r\n                          <th class=\"customth\">Field</th>\r\n\r\n                          <th class=\"customth\">Validation</th>\r\n                          <th class=\"customth\">Field</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        <ng-container *ngFor=\"let matrix of Validations | toMatrix:2;let i - index\">\r\n                            <tr class=\"trLineHeightSml\">\r\n                                <td class=\"td mrgBtm\">\r\n                                    <div *ngIf=\"matrix[0]\" class=\"mrgBtm\">\r\n                                        <i *ngIf=\"EnumType(matrix[0].warningType) == 2\" class=\"fa fa-exclamation-triangle faWarning mrgBtm\"></i> \r\n                                        <i *ngIf=\"EnumType(matrix[0].warningType) == 1\" class=\"fa fa-exclamation-triangle faError mrgBtm\"></i> \r\n                                        \r\n                                        {{matrix[0].valText}}\r\n                                    </div>\r\n                                </td>\r\n                                <td class=\"td mrgBtm\"> \r\n                                 {{matrix[0].field.name }}\r\n                                </td>\r\n                      \r\n\r\n                                <td class=\"td\">\r\n                                    <p *ngIf=\"matrix[1]\">\r\n                                        <i *ngIf=\"EnumType(matrix[1].warningType) == 2\" class=\"fa fa-exclamation-triangle faWarning\"></i> \r\n                                        <i *ngIf=\"EnumType(matrix[1].warningType) == 1\" class=\"fa fa-exclamation-triangle faError\"></i> \r\n                                        \r\n                                        {{matrix[1].valText }}\r\n                                        </p>\r\n                                </td>\r\n                                <td class=\"td\">\r\n                                   <p *ngIf=\"matrix[1]\">\r\n                                    {{matrix[1].field.name }}\r\n                                   </p>\r\n                                </td>\r\n                              \r\n                            </tr>\r\n                        </ng-container>\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        </div>\r\n    <div class=\"sectionContent sectionTop\">\r\n\r\n        <div class=\"col-sm-12\">\r\n            <form> \r\n                <div style=\"overflow:scroll;width:100%;overflow:auto\">\r\n                    <table class=\"table tblMargin\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th class=\"customth mapHead fnt thBrd\">Excel Address</th>\r\n                                <ng-container *ngFor=\" let mapping of MappingHeaders;let i - index\">\r\n                                <th class=\"customth colStyleCnt thBrd\">{{mapping.header.address}}</th>\r\n                                </ng-container>\r\n                            </tr>\r\n                            <tr>\r\n                                <th class=\"customth mapHead fnt thBrd\">Excel Column</th>\r\n                               \r\n                                <ng-container *ngFor=\" let mapping of MappingHeaders;let i - index\">\r\n                                <th class=\"customth colStyle fnt thBrd\">{{mapping.header.header}}</th>\r\n                                </ng-container>\r\n                            </tr>\r\n                           \r\n\r\n                            <tr>\r\n                                <th class=\"customth mapHead fnt thBrd\">Map To</th>\r\n                                <ng-container *ngFor=\" let mapping of MappingHeaders;let i - index\">\r\n                                <th class=\"customth colStyle thBrd\">\r\n                                    <ng-select class=\"selectStyle customMed fntSizeSm noDisplay\"\r\n                                    [items]=\"mapping.fields\"\r\n                                    placeholder=\"Please select a column\"\r\n                                    clearable=\"true\"\r\n                                    bindLabel=\"name\"\r\n                                    bindValue=\"fieldId\"\r\n                                    name=\"{{mapping.colIdx}}\"\r\n                                    [(ngModel)]=\"mapping.selected.fieldId\"\r\n                                    (change)=\"OnChange()\"\r\n                                    clearAllText=\"Clear\">\r\n                                    </ng-select>\r\n                                </th>\r\n                                </ng-container>\r\n                            </tr>\r\n\r\n                            <tr>\r\n                                <th class=\"customth thBrd\"></th>\r\n                                <ng-container *ngFor=\" let mapping of MappingHeaders;let i - index\">\r\n                                <th class=\"customth colStyle thBrd\">\r\n                                    <app-numeric-ctrl [Mapping]=\"mapping\" (valueChange)='changeNumeric($event)'></app-numeric-ctrl>\r\n                                </th>\r\n                                </ng-container>\r\n                            </tr>\r\n                        </thead>\r\n                            \r\n                        <tbody>\r\n                            <ng-container *ngFor=\" let sample of SampleData;let i - index\">\r\n                                <tr class=\"tdRow\">\r\n                                    <td class=\"td colStyle\"></td>\r\n                                    <ng-container *ngFor=\" let col of sample;let j - index\">\r\n                                    <td class=\"td colStyle\">\r\n                                        {{ col }}\r\n                                    </td>\r\n                                    </ng-container>\r\n                                </tr>\r\n                            </ng-container>\r\n            \r\n                    \r\n                    \r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n        </form>\r\n        </div>\r\n    </div>\r\n\r\n</div>","import { Component, OnInit, AfterViewInit } from '@angular/core';\r\nimport { ConversionService } from '../../Services/conversion.service';\r\nimport { MappingBl } from '../../Bl/mapping-bl';\r\nimport { FieldDto } from '../../Models/Dtos/field-dto';\r\nimport { Router } from '@angular/router';\r\nimport { MappingValDto } from '../../Models/Dtos/mapping-val-dto';\r\nimport { Severity } from '../../Models/Enums/severity.enum';\r\nimport { MessageService } from '../../Services/message-service';\r\nimport { HeaderDto } from '../../Models/Dtos/header-dto';\r\nimport { MapHeaderDto } from \"../../Models/Dtos/map-header-dto\";\r\n\r\n@Component({\r\n  selector: 'app-mapping-new',\r\n  templateUrl: './mapping-new.component.html',\r\n  styleUrls: ['./mapping-new.component.css']\r\n})\r\nexport class MappingNewComponent implements OnInit, AfterViewInit {\r\n\r\n  constructor( private _conversionService : ConversionService, private _mappingBl : MappingBl,\r\n    private _router : Router,\r\n    private _messagingService : MessageService) { }\r\n\r\n  public GeoCode : boolean = false;\r\n  public Suggestions : MapHeaderDto[];\r\n  public Headers : HeaderDto[];\r\n // public Mappings : ColMapDto[];\r\n  public SelectedAdd : string;\r\n  public SelectedSuggestion : number = null;\r\n \r\n  public IsCollapsed : boolean = true;\r\n  public Validations : MappingValDto[];\r\n  public MapDisabled = true;\r\n  //public Ctr : number = 0;\r\n  public MappingHeaders : MapHeaderDto[];\r\n\r\n  private _allValidations : MappingValDto[];\r\n\r\n  private _hasMappingsChanged : boolean = false;\r\n  public ValTxt : string;\r\n\r\n  public SampleData : string[][];\r\n\r\n  async ngAfterViewInit() {\r\n\r\n    this._messagingService.LoadingMsg(true);\r\n    //this._loadingBarService.start();\r\n\r\n    var conversion = this._conversionService.Get();\r\n    if (conversion.convId === -99)\r\n    {\r\n      this._router.navigate(['/manager']);\r\n      return;\r\n    }\r\n\r\n    var conversion = this._conversionService.Get();\r\n\r\n    this.GeoCode = conversion.geoCode;\r\n    \r\n    var conversionMappingsResponse = await this._mappingBl.GetValidations();\r\n \r\n    if (conversionMappingsResponse.status)\r\n      this._allValidations = conversionMappingsResponse.validations;\r\n\r\n    if (!conversion.convId)\r\n    {\r\n     // this._loadingBarService.complete();\r\n      this._messagingService.LoadingMsg(false);\r\n      return;\r\n    }\r\n     \r\n    var colMapResponse = await this._mappingBl.Map(conversion.convId);\r\n\r\n    this.MappingHeaders = colMapResponse.mapHeaders;\r\n\r\n    this.SampleData = colMapResponse.sampleData;\r\n    let i = 1;\r\n    if (colMapResponse.status)\r\n    {\r\n      colMapResponse.suggestionsNew.forEach(x=>\r\n      {\r\n        x.displayField = x.header.header + \" : \" + x.selected.name;\r\n        x.id = i;\r\n        i++;\r\n      });\r\n\r\n      this.Suggestions = colMapResponse.suggestionsNew;\r\n      this.Headers = colMapResponse.headers;\r\n\r\n      this.ConfigValidations();\r\n    }\r\n\r\n    this._messagingService.LoadingMsg(false);\r\n  }\r\n\r\n  async ngOnInit() {}\r\n\r\n  public EnumType (severity : Severity)\r\n  {\r\n    if (severity == Severity.High)\r\n      return 1;\r\n\r\n    if (severity == Severity.Medium)\r\n    return 2;\r\n    \r\n  }\r\n\r\n  private ConfigValidations()\r\n  {\r\n    this.Validations = [];\r\n\r\n    var warningCtr = 0;\r\n    var errorCtr = 0;\r\n    this.MapDisabled = false;\r\n    var selectMappings = this.MappingHeaders.filter(fil=> fil.selected.fieldId > 0);\r\n\r\n\r\n\r\n    var duplicate = this.reduce();\r\n\r\n    var p : number[] = [];\r\n    selectMappings.forEach(sl=>\r\n    {\r\n        p.push(sl.selected.fieldId);\r\n    });\r\n    this._allValidations.forEach(av=>\r\n    {\r\n        var hasField = p.find(x=> x == av.field.fieldId || (av.field.fieldId == 18 && x == 3044));\r\n        \r\n        if (!hasField)\r\n        {\r\n          if (av.warningType == Severity.High)\r\n            errorCtr++;\r\n          \r\n          if (av.warningType == Severity.Medium)\r\n            warningCtr++;\r\n\r\n          if (!this.MapDisabled && av.warningType == Severity.High)\r\n          {\r\n            this.MapDisabled = true;\r\n          }\r\n          this.Validations.push(av);\r\n        } \r\n    });\r\n\r\n    duplicate.forEach(d=>\r\n    {\r\n      errorCtr++;\r\n    });\r\n\r\n    this.ValTxt = \"(\" + warningCtr + \" Warnings, \" + errorCtr + \" Errors)\"\r\n  }\r\n\r\n  reduce(){\r\n    var valFields : number[] = [];\r\n    var multipleHeaders : MapHeaderDto[] = [];\r\n  \r\n    this.MappingHeaders.forEach(mh=>\r\n    {\r\n       if (mh.selected.fieldId > 0)\r\n       {\r\n\r\n       \r\n        var headers = this.MappingHeaders.filter(x=> x.selected.fieldId == mh.selected.fieldId);\r\n\r\n        if (headers.length > 1)\r\n        {\r\n          var exists = multipleHeaders.find(x=> x.selected.fieldId == mh.selected.fieldId);\r\n          if (!exists)\r\n          {\r\n            var field = mh.fields.find(x=> x.fieldId == mh.selected.fieldId);\r\n            if (!field.combination)\r\n            {\r\n              multipleHeaders.push(mh);\r\n            }\r\n          }\r\n            \r\n        }\r\n      }\r\n\r\n        \r\n    });\r\n\r\n    var ctr = this._allValidations.length + 1;\r\n    multipleHeaders.forEach(mh=>\r\n    {\r\n      var field = mh.fields.find(x=> x.fieldId == mh.selected.fieldId);\r\n\r\n      var headers = this.MappingHeaders.filter(x=> x.selected.fieldId == field.fieldId);\r\n      var mlNames = \"\";\r\n      headers.forEach(x=>\r\n      {\r\n          mlNames = mlNames + x.header.header + \", \"\r\n      });\r\n\r\n      mlNames = mlNames.slice(0, -2); \r\n      this.Validations.push(new MappingValDto ({ mappingValId : ctr, field : field, warningType : Severity.High, valText :\"Excel columns - \" + mlNames + \" have been mapped multiple times \" }));\r\n      valFields.push(field.fieldId);\r\n      ctr++;\r\n    });\r\n    return valFields;\r\n  }\r\n\r\n  \r\n\r\n  public async AddSuggestion()\r\n  {\r\n    var sug = this.Suggestions[this.SelectedSuggestion-1];\r\n    var newAdd = this.CreateNewHeaderDto(sug.header.header,sug.selected);\r\n\r\n    this.IncrementMappings();\r\n\r\n    this.MappingHeaders.unshift(newAdd);\r\n\r\n    this.SelectedSuggestion = null;\r\n  \r\n    this.ConfigValidations();\r\n  }\r\n\r\n  public async AddColumn()\r\n  {\r\n    var newAdd = this.CreateNewHeaderDto(this.SelectedAdd, null);\r\n\r\n    this.IncrementMappings();\r\n\r\n    this.MappingHeaders.unshift(newAdd);\r\n\r\n    this.SelectedAdd = null;\r\n \r\n    this.ConfigValidations();\r\n  }\r\n\r\n  private CreateNewHeaderDto(colName : string, selected : FieldDto)\r\n  {\r\n    var headerDto = this.MappingHeaders.find(x=> x.header.header == colName);\r\n\r\n    var newAdd = new MapHeaderDto(\r\n    {\r\n      header: headerDto.header ,\r\n      fields : headerDto.fields,\r\n      selected : new FieldDto({ fieldId : 0, name : '' }),\r\n      priority: 1,\r\n      colIdx : 1\r\n    });\r\n\r\n    if (selected)\r\n      newAdd.selected = selected;\r\n\r\n    this.AddToSampleData(headerDto.colIdx-1);\r\n      return newAdd;\r\n  }\r\n\r\n  private AddToSampleData(colIdx : number)\r\n  {\r\n    this.SampleData.forEach(x=>\r\n    {\r\n      var headerVal = x[colIdx];\r\n\r\n      x.unshift(headerVal);\r\n    });\r\n  }\r\n\r\n  private IncrementMappings()\r\n  {\r\n    this.MappingHeaders.forEach(x=>\r\n    {\r\n      x.colIdx++;\r\n    });\r\n\r\n  }  \r\n\r\n  public OnChange()\r\n  {\r\n    this.ConfigValidations();\r\n  }\r\n  \r\n  public async SaveFields()\r\n  {\r\n    this._messagingService.LoadingMsg(true);\r\n    var conversion = this._conversionService.Get();\r\n    conversion.geoCode = this.GeoCode;\r\n\r\n    var response = await this._mappingBl.SaveMapping(this.MappingHeaders, conversion);\r\n\r\n    if (response.status)\r\n    {\r\n      conversion.rmsFieldMappingsDto = response.rmsFieldMappingsDto;\r\n      this._conversionService.Set(conversion);\r\n    }\r\n    //this._loadingBarService.complete();\r\n    this._messagingService.LoadingMsg(false);\r\n    this._router.navigate(['/locations']);\r\n\r\n    \r\n  }\r\n  public changeNumeric(mapHeaderDto : MapHeaderDto)\r\n  {\r\n    var found = this.MappingHeaders.find(x=> x.colIdx == mapHeaderDto.colIdx);\r\n\r\n    if (found)\r\n      found.priority = mapHeaderDto.priority;\r\n  }\r\n}\r\n","\r\n\r\n<div class=\"sectionHeader\">\r\n   \r\n    <div class=\"sectionContent\">\r\n        <form name=\"addForm\">\r\n        <div class=\"row lnHeight tblMargin\">\r\n            <div class=\"col-sm-2\">\r\n                <ng-select class=\"selectStyle customMed\"\r\n                [items]=\"Headers\"\r\n                placeholder=\"Please select a Header\"\r\n                clearable=\"true\"\r\n                name=\"cmbAdd\"\r\n                bindLabel=\"header\"\r\n                bindValue=\"header\"\r\n                [(ngModel)]=\"SelectedAdd\"\r\n                clearAllText=\"Clear\">\r\n                </ng-select>\r\n            </div>\r\n            <div class=\"col-xs-2\">\r\n                <button class=\"btn-sm btn-info btn-outline-rounded  btnMarg\" [disabled]=\"!SelectedAdd\" (click)=\"AddColumn()\" >Add Column</button>\r\n            </div>\r\n\r\n            <div class=\"col-sm-1\"><label>Suggestions</label></div>\r\n\r\n            <div class=\"col-sm-3\">\r\n                <ng-select class=\"selectStyle customMed\"\r\n                [items]=\"Suggestions\"\r\n                placeholder=\"Please select a Suggestion\"\r\n                clearable=\"true\"\r\n                bindLabel=\"displayField\"\r\n                bindValue=\"id\"\r\n                [(ngModel)]=\"SelectedSuggestion\"\r\n                name=\"cmbSuggestions\"\r\n                clearAllText=\"Clear\">\r\n                </ng-select>\r\n            </div>\r\n            <div class=\"col-sm-2\">\r\n                <button class=\"btn-sm btn-info btn-outline-rounded  btnMarg\" [disabled]=\"!SelectedSuggestion\"  (click)=\"AddSuggestion()\" >Add Suggestion</button>\r\n            </div>\r\n            \r\n            <div class=\"col-xs-2\">\r\n                <button class=\"btn-sm btn-info btn-outline-rounded btnMarg\" [disabled]=\"MapDisabled\" (click)=\"SaveFields()\">Map Fields</button>\r\n            </div>\r\n            <div class=\"col-sm-2\" style=\"display: flex; justify-content: space-between;\" >\r\n                <p class=\"smlTxt\">{{ValTxt}}\r\n                \r\n                <button type=\"button\" class=\"btn btn-info btn-circle btn-xs fa fa-angle-double-down \" *ngIf=\"!IsCollapsed\" (click)=\"IsCollapsed = !IsCollapsed\"></button> \r\n                <button type=\"button\" class=\"btn btn-info btn-circle btn-xs fa fa-angle-double-up \" *ngIf=\"IsCollapsed\" (click)=\"IsCollapsed = !IsCollapsed\"></button> \r\n        \r\n                </p>\r\n            </div>\r\n        </div>\r\n\r\n        \r\n        </form>\r\n    </div>\r\n    <div class=\"sectionContent sectionTop\" [ngbCollapse]=\"IsCollapsed\">\r\n            <div class=\"col-sm-8\">\r\n                <table class=\"table table-striped tblMargin\">\r\n                    <thead>\r\n                        <tr>\r\n                          <th class=\"customth\">Validation</th>\r\n                          <th class=\"customth\">Field</th>\r\n\r\n                          <th class=\"customth\">Validation</th>\r\n                          <th class=\"customth\">Field</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        <ng-container *ngFor=\"let matrix of Validations | toMatrix:2;let i - index\">\r\n                            <tr class=\"trLineHeightSml\">\r\n                                <td class=\"td mrgBtm\">\r\n                                    <div *ngIf=\"matrix[0]\" class=\"mrgBtm\">\r\n                                        <i *ngIf=\"EnumType(matrix[0].warningType) == 2\" class=\"fa fa-exclamation-triangle faWarning mrgBtm\"></i> \r\n                                        <i *ngIf=\"EnumType(matrix[0].warningType) == 1\" class=\"fa fa-exclamation-triangle faError mrgBtm\"></i> \r\n                                        \r\n                                        {{matrix[0].valText}}\r\n                                    </div>\r\n                                </td>\r\n                                <td class=\"td mrgBtm\"> \r\n                                 {{matrix[0].field.name }}\r\n                                </td>\r\n                      \r\n\r\n                                <td class=\"td\">\r\n                                    <p *ngIf=\"matrix[1]\">\r\n                                        <i *ngIf=\"EnumType(matrix[1].warningType) == 2\" class=\"fa fa-exclamation-triangle faWarning\"></i> \r\n                                        <i *ngIf=\"EnumType(matrix[1].warningType) == 1\" class=\"fa fa-exclamation-triangle faError\"></i> \r\n                                        \r\n                                        {{matrix[1].valText }}\r\n                                        </p>\r\n                                </td>\r\n                                <td class=\"td\">\r\n                                   <p *ngIf=\"matrix[1]\">\r\n                                    {{matrix[1].field.name }}\r\n                                   </p>\r\n                                </td>\r\n                              \r\n                            </tr>\r\n                        </ng-container>\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        </div>\r\n    <div class=\"sectionContent sectionTop\">\r\n\r\n            <div class=\"col-sm-12\">\r\n                <form> \r\n                <table class=\"table table-striped tblMargin\">\r\n                    <thead>\r\n                        <tr>\r\n                          <th class=\"customth fntSize\">Excel Column</th>\r\n                          <th class=\"customth fntSize\">Excel</th>\r\n                          <th class=\"customth fntSize\">Mapping Column</th>\r\n                          <th class=\"customth noBck fntSize\"></th>\r\n                          <th class=\"customth fntSize\">Excel Column</th>\r\n                          <th class=\"customth fntSize\">Excel</th>\r\n                          <th class=\"customth fntSize\">Mapping Column</th>\r\n                          <th class=\"customth noBck\"></th>\r\n                          <th class=\"customth fntSize\">Excel Column</th>\r\n                          <th class=\"customth fntSize\">Excel</th>\r\n                          <th class=\"customth fntSize\">Mapping Column</th>\r\n                          <th class=\"customth noBck noBrdRight\"></th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        <ng-container *ngFor=\"let matrix of Mappings | toMatrix:3;let i - index\">\r\n                            <tr class=\"trLineHeight\">\r\n                                <td class=\"td fntSizeSm fntBld\">\r\n                                    <p *ngIf=\"matrix[0]\">\r\n                                        {{matrix[0].column.header}}\r\n                                      </p>\r\n                                </td>\r\n                                <td class=\"td txtAlign fntSizeSm fntBld\">\r\n                                    <p *ngIf=\"matrix[0]\">\r\n                                        {{matrix[0].column.address}}\r\n                                      </p>\r\n                                </td>\r\n                                <td class=\"td fntSizeSm\">\r\n                                  \r\n                                    <ng-select *ngIf=\"matrix[0]\" class=\"selectStyle customMed fntSizeSm\"\r\n                                    [items]=\"matrix[0].fields\"\r\n                                    placeholder=\"Please select a column\"\r\n                                    clearable=\"true\"\r\n                                    bindLabel=\"name\"\r\n                                    bindValue=\"fieldId\"\r\n                                    name=\"{{matrix[0].id}}\"\r\n                                    [(ngModel)]=\"matrix[0].selected.fieldId\"\r\n                                    (change)=\"OnChange()\"\r\n                                    clearAllText=\"Clear\">\r\n                                    </ng-select>\r\n                                     \r\n                                </td>\r\n                                <td class=\"td noBck\"></td>\r\n                                <td class=\"td fntSizeSm fntBld\">\r\n                                    <p *ngIf=\"matrix[1]\">\r\n                                        {{matrix[1].column.header}}\r\n                                      </p>\r\n                                </td>\r\n                                <td class=\"td txtAlign fntSizeSm fntBld\">\r\n                                    <p *ngIf=\"matrix[1]\">\r\n                                        {{matrix[1].column.address}}\r\n                                      </p>\r\n                                </td>\r\n                                <td class=\"td\">\r\n                                    <ng-select *ngIf=\"matrix[1]\" class=\"selectStyle customMed fntSizeSm\"\r\n                                    [items]=\"matrix[1].fields\"\r\n                                    placeholder=\"Please select a column\"\r\n                                    clearable=\"true\"\r\n                                    bindLabel=\"name\"\r\n                                    bindValue=\"fieldId\"\r\n                                    name=\"{{matrix[1].id}}\"\r\n                                    [(ngModel)]=\"matrix[1].selected.fieldId\"\r\n                                    (change)=\"OnChange()\"\r\n                                    clearAllText=\"Clear\">\r\n                                    </ng-select>\r\n                                </td>\r\n                                <td class=\"td noBck\"></td>\r\n                                <td class=\"td fntSizeSm fntBld\"><p *ngIf=\"matrix[2]\">\r\n                                    {{matrix[2].column.header}}\r\n                                  </p></td>\r\n                                  <td class=\"td txtAlign fntSizeSm fntBld\">\r\n                                    <p *ngIf=\"matrix[2]\">\r\n                                        {{matrix[2].column.address}}\r\n                                      </p>\r\n                                </td>\r\n                                  <td class=\"td\">\r\n                                    <ng-select *ngIf=\"matrix[2]\" class=\"selectStyle customMed fntSizeSm\"\r\n                                    [items]=\"matrix[2].fields\"\r\n                                    style=\"height:34ppx !important\"\r\n                                    placeholder=\"Please select a column\"\r\n                                    clearable=\"true\"\r\n                                    bindLabel=\"name\"\r\n                                    bindValue=\"fieldId\"\r\n                                    name=\"{{matrix[2].id}}\"\r\n                                    [(ngModel)]=\"matrix[2].selected.fieldId\"\r\n                                    (change)=\"OnChange()\"\r\n                                    clearAllText=\"Clear\">\r\n                                    </ng-select>\r\n                                </td>\r\n                                <td class=\"td noBck noBrdRight\"></td>\r\n                            </tr>\r\n             \r\n                       \r\n                        </ng-container>\r\n                    </tbody>\r\n                    </table>\r\n            </form>\r\n            </div>\r\n    </div>\r\n\r\n</div>\r\n\r\n\r\n","import { Component, OnInit, AfterViewInit } from '@angular/core';\r\nimport { ConversionService } from '../../Services/conversion.service';\r\nimport { MappingBl } from '../../Bl/mapping-bl';\r\nimport { ColMapDto } from '../../Models/Dtos/col-map-dto';\r\nimport { FieldDto } from '../../Models/Dtos/field-dto';\r\nimport { Router } from '@angular/router';\r\nimport { MappingValDto } from '../../Models/Dtos/mapping-val-dto';\r\nimport { Severity } from '../../Models/Enums/severity.enum';\r\n//import { LoadingBarService } from 'ngx-loading-bar';\r\nimport { MessageService } from '../../Services/message-service';\r\nimport { HeaderDto } from '../../Models/Dtos/header-dto';\r\n\r\n@Component({\r\n  selector: 'app-mapping',\r\n  templateUrl: './mapping.component.html',\r\n  styleUrls: ['./mapping.component.css']\r\n})\r\nexport class MappingComponent implements OnInit, AfterViewInit {\r\n\r\n  // public progress: NgProgress,\r\n  constructor( private _conversionService : ConversionService, private _mappingBl : MappingBl,\r\n    private _router : Router,\r\n    private _messagingService : MessageService) { }\r\n\r\n  //private _progressRef: NgProgressRef;\r\n  public Suggestions : ColMapDto[];\r\n  public Headers : HeaderDto[];\r\n  public Mappings : ColMapDto[];\r\n  public SelectedAdd : string;\r\n  public SelectedSuggestion : number = null;\r\n \r\n  public IsCollapsed : boolean = true;\r\n  public Validations : MappingValDto[];\r\n  public MapDisabled = true;\r\n\r\n  private _allValidations : MappingValDto[];\r\n\r\n  public ValTxt : string;\r\n\r\n \r\n  public OnChange()\r\n  {\r\n    this.ConfigValidations();\r\n  }\r\n\r\n  async ngAfterViewInit() {\r\n\r\n    this._messagingService.LoadingMsg(true);\r\n    //this._loadingBarService.start();\r\n\r\n    var conversion = this._conversionService.Get();\r\n    if (conversion.convId === -99)\r\n    {\r\n      this._router.navigate(['/manager']);\r\n      return;\r\n    }\r\n\r\n    var conversion = this._conversionService.Get();\r\n\r\n    var conversionMappingsResponse = await this._mappingBl.GetValidations();\r\n \r\n    if (conversionMappingsResponse.status)\r\n      this._allValidations = conversionMappingsResponse.validations;\r\n\r\n    if (!conversion.convId)\r\n    {\r\n     // this._loadingBarService.complete();\r\n      this._messagingService.LoadingMsg(false);\r\n      return;\r\n    }\r\n     \r\n    var colMapResponse = await this._mappingBl.Map(conversion.convId);\r\n\r\n    let i = 1;\r\n    if (colMapResponse.status)\r\n    {\r\n      colMapResponse.suggestions.forEach(x=>\r\n      {\r\n        x.displayField = x.column.header + \" : \" + x.selected.name;\r\n        x.id = i;\r\n        i++;\r\n      });\r\n\r\n      this.Suggestions = colMapResponse.suggestions;\r\n      this.Headers = colMapResponse.headers;\r\n\r\n      i = 0;\r\n      colMapResponse.columnMappings.forEach(x=>\r\n        {\r\n          x.id = i;\r\n            i++;\r\n        });\r\n      this.Mappings = colMapResponse.columnMappings;\r\n      this.ConfigValidations();\r\n    }\r\n\r\n    //this._loadingBarService.complete();\r\n    this._messagingService.LoadingMsg(false);\r\n  }\r\n  async ngOnInit() {}\r\n\r\n  public EnumType (severity : Severity)\r\n  {\r\n    if (severity == Severity.High)\r\n      return 1;\r\n\r\n    if (severity == Severity.Medium)\r\n    return 2;\r\n    \r\n  }\r\n\r\n  private ConfigValidations()\r\n  {\r\n    this.Validations = [];\r\n\r\n    var warningCtr = 0;\r\n    var errorCtr = 0;\r\n    this.MapDisabled = false;\r\n    var selectMappings = this.Mappings.filter(fil=> fil.selected.fieldId > 0);\r\n\r\n    var p : number[] = [];\r\n\r\n    var t = selectMappings.forEach(sl=>\r\n      {\r\n          p.push(sl.selected.fieldId);\r\n      });\r\n\r\n      this._allValidations.forEach(av=>\r\n        {\r\n            var hasField = p.find(x=> x == av.field.fieldId || (av.field.fieldId == 18 && x == 3044));\r\n            \r\n            if (!hasField)\r\n            {\r\n              if (av.warningType == Severity.High)\r\n                errorCtr++;\r\n              \r\n              if (av.warningType == Severity.Medium)\r\n                warningCtr++;\r\n\r\n              if (!this.MapDisabled && av.warningType == Severity.High)\r\n              {\r\n                this.MapDisabled = true;\r\n              }\r\n              this.Validations.push(av);\r\n            } \r\n        });\r\n\r\n        this.ValTxt = \"(\" + warningCtr + \" Warnings, \" + errorCtr + \" Errors)\"\r\n  }\r\n  public AddColumn()\r\n  {\r\n    var replace : ColMapDto[] = [];\r\n    var colHeaderDto = this.Mappings.find(x=> x.column.header == this.SelectedAdd);\r\n    var newAdd = new ColMapDto({column:colHeaderDto.column, fields:this.Mappings[0].fields, selected : new FieldDto});\r\n\r\n    replace.push(newAdd);\r\n    this.Mappings.forEach(x=>\r\n    {\r\n        replace.push(x);\r\n    });\r\n\r\n    let i = 0;\r\n    replace.forEach(x=>\r\n      {\r\n        x.id = i;\r\n        i++;\r\n\r\n      });\r\n   this.SelectedAdd = null;\r\n   this.Mappings = replace;\r\n  }\r\n\r\n  public AddSuggestion()\r\n  {\r\n    var colCtr = this.Mappings.length + 1;\r\n    var replace  = ColMapDto[colCtr] = [];\r\n    var suggestion = this.Suggestions.find(x=> x.id == this.SelectedSuggestion);\r\n\r\n \r\n    replace.push(suggestion);\r\n\r\n    this.Mappings.forEach(x=>\r\n    {\r\n        replace.push(x);\r\n    });\r\n    let i = 0;\r\n    replace.forEach(x=>\r\n    {\r\n      x.Id = i;\r\n      i++;\r\n\r\n    });\r\n    this.SelectedSuggestion = null;\r\n    this.Mappings = replace;\r\n    this.ConfigValidations();\r\n  }\r\n\r\n  public async SaveFields()\r\n  {\r\n    this._messagingService.LoadingMsg(true);\r\n    var conversion = this._conversionService.Get();\r\n    var response = await this._mappingBl.SaveMapping(null, conversion);\r\n\r\n    if (response.status)\r\n    {\r\n      conversion.rmsFieldMappingsDto = response.rmsFieldMappingsDto;\r\n      this._conversionService.Set(conversion);\r\n    }\r\n    //this._loadingBarService.complete();\r\n    this._messagingService.LoadingMsg(false);\r\n    this._router.navigate(['/locations']);\r\n\r\n    \r\n  }\r\n}\r\n","import { AfterViewInit, Component, EventEmitter, Input, OnInit,Output,TemplateRef, ViewChild } from '@angular/core';\r\n\r\nimport { PagingResponse } from '../../Models/Response/paging-response';\r\nimport { PagingDto } from '../../Models/Dtos/paging-dto'\r\n\r\n@Component({\r\n  selector: 'app-pager',\r\n  templateUrl: './pager.component.html',\r\n  styleUrls: ['./pager.component.css']\r\n})\r\nexport class PagerComponent implements OnInit {\r\n\r\n  private _paging : PagingResponse;\r\n  private _typeId : number;\r\n\r\n  @Input() set Paging(value: PagingResponse) {\r\n  \r\n    this._paging = value;\r\n    if (value == null)\r\n      return;\r\n    this.SendPagingDto();\r\n  }\r\n\r\n  \r\n  get Paging(): PagingResponse {\r\n    return this._paging;\r\n  }\r\n\r\n  @Input() set TypeId(value: number) {\r\n    this._typeId = value;\r\n  \r\n  }\r\n\r\n  get TypeId(): number {\r\n    return this._typeId;\r\n  }\r\n\r\n  @Output() PagingChanged= new EventEmitter<PagingDto>();\r\n\r\n \r\n  public IsPagePrevious() : boolean\r\n  {\r\n    if (this._paging.current > 1)\r\n    {\r\n      return false;\r\n    }\r\n\r\n    return true;\r\n  }\r\n  public IsPageLast() : boolean\r\n  {\r\n    if (this._paging.current > 1)\r\n    {\r\n    \r\n      return false;\r\n    }\r\n\r\n    return true;\r\n  }\r\n\r\n  public IsPageNext() : boolean\r\n  {\r\n    if (this._paging.current < this._paging.totalPages)\r\n    {\r\n      return false;\r\n    }\r\n\r\n    return true;\r\n  }\r\n\r\n  public IsPageFinal() : boolean\r\n  {\r\n    if (this._paging.current ==  this._paging.totalPages)\r\n    {\r\n    \r\n      return true;\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  public Next()\r\n  {\r\n    this._paging.current++;\r\n   \r\n    this.SendPagingDto();\r\n  }\r\n\r\n  public Last()\r\n  {\r\n    this._paging.current = this._paging.totalPages;\r\n\r\n    this.SendPagingDto();\r\n  }\r\n\r\n  public Previous()\r\n  {\r\n    this._paging.current--;\r\n   \r\n    this.SendPagingDto();\r\n  }\r\n\r\n  public First()\r\n  {\r\n    this._paging.current = 1;\r\n   \r\n    this.SendPagingDto();\r\n  }\r\n\r\n  private SendPagingDto()\r\n  {\r\n    var first = this.CalRecFirst(this.Paging.current, this.Paging.recsPerPage);\r\n    var recLast = this.CalcRecLast(this.Paging.current, this.Paging.recsPerPage);\r\n\r\n    this.Paging.recFirst = first+1;\r\n    this.Paging.recLast = recLast;\r\n\r\n    var pagingDto = new PagingDto({ TypeId : this.TypeId, Filters : \"\", RecFirst : first, RecLast : this.Paging.recsPerPage });\r\n    this.PagingChanged.emit(pagingDto);\r\n  }\r\n\r\n  private CalRecFirst(current : number, recsPerPage : number)\r\n  {\r\n    var t = current * recsPerPage;\r\n    var recFirst = t - (recsPerPage - 1);\r\n    return recFirst;\r\n  }\r\n\r\n  private CalcRecLast(current : number, recsPerPage : number)\r\n  {\r\n    var t = current * recsPerPage;\r\n    if (t > this.Paging.total)\r\n    {\r\n      t = this.Paging.total;\r\n    }\r\n\r\n    return t;\r\n  }\r\n}\r\n","\r\n<div class=\"row main\" style=\" margin: 0 auto;\" *ngIf=\"Paging != null\">\r\n<div class=\"col-xs-2 txt\">{{Paging.recFirst}} to {{Paging.recLast}} of {{Paging.total}}\r\n\r\n    <button type=\"button\"\r\n    class=\"btn bthLink\" style=\"margin-left:14px;\"\r\n    [disabled]=\"IsPageLast()\"\r\n    (click)=\"First()\"><<</button>\r\n\r\n<button type=\"button\" class=\"btn bthLink\" [disabled]=\"IsPagePrevious()\"\r\n(click)=\"Previous()\"><</button>\r\n</div>\r\n<div class=\"col-x-1 txt\" style=\"margin-left:6px;\">Page {{Paging.current}} Of {{Paging.totalPages}}</div>\r\n\r\n<div class=\"col-xs-2\" style=\"margin-right:10px\"><button type=\"button\"  (click)=\"Next()\"\r\n    class=\"btn bthLink\"\r\n    [disabled]=\"IsPageNext()\">>\r\n</button>\r\n<button type=\"button\" [disabled]=\"IsPageFinal()\"\r\n    class=\"btn bthLink\" (click)=\"Last()\"\r\n    >>></button>\r\n</div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { style, state, transition, animate, keyframes, trigger } from '@angular/animations';\r\nimport { Toast, ToastrService, ToastPackage } from 'ngx-toastr';\r\n\r\n@Component({\r\n  selector: 'app-toast-msg',\r\n  templateUrl: './toast-msg.component.html',\r\n  styleUrls: ['./toast-msg.component.css'],\r\n  animations: [\r\n    trigger('flyInOut', [\r\n      state('inactive', style({\r\n        opacity: 0,\r\n      })),\r\n      transition('inactive => active', animate('400ms ease-out', keyframes([\r\n        style({\r\n          transform: 'translate3d(100%, 0, 0) skewX(-30deg)',\r\n          opacity: 0,\r\n        }),\r\n        style({\r\n          transform: 'skewX(20deg)',\r\n          opacity: 1,\r\n        }),\r\n        style({\r\n          transform: 'skewX(-5deg)',\r\n          opacity: 1,\r\n        }),\r\n        style({\r\n          transform: 'none',\r\n          opacity: 1,\r\n        }),\r\n      ]))),\r\n      transition('active => removed', animate('400ms ease-out', keyframes([\r\n        style({\r\n          opacity: 1,\r\n        }),\r\n        style({\r\n          transform: 'translate3d(100%, 0, 0) skewX(30deg)',\r\n          opacity: 0,\r\n        }),\r\n      ]))),\r\n    ]),\r\n  ],\r\n  preserveWhitespaces: false,\r\n})\r\nexport class ToastMsgComponent extends Toast{\r\n\r\n  // constructor is only necessary when not using AoT\r\n  constructor(\r\n    protected toastrService: ToastrService,public toastPackage: ToastPackage) {\r\n    super(toastrService, toastPackage);\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  action(event: Event) {\r\n    event.stopPropagation();\r\n    this.toastPackage.triggerAction();\r\n    return false;\r\n  }\r\n\r\n}\r\n","<div class=\"row\" class=\"toContainer\">\r\n    <div class=\"col-sm-9 size\" >\r\n      <div *ngIf=\"title\" \r\n        [class]=\"options.titleClass\" \r\n        [attr.aria-label]=\"title\"\r\n       > {{ title }}\r\n      </div>\r\n    \r\n        <div id=\"left\" class=\"col-sm-6 size\">\r\n          <div *ngIf=\"message && options.enableHtml\" role=\"alert\" aria-live=\"polite\"\r\n        class=\"custom-message\"\r\n        [class]=\"options.messageClass\" [innerHTML]=\"message\">\r\n      </div>\r\n      <div *ngIf=\"message && !options.enableHtml\" role=\"alert\" aria-live=\"polite\"\r\n        class=\"custom-message\"\r\n        [class]=\"options.messageClass\"  [attr.aria-label]=\"message\">\r\n        {{ message }}\r\n      </div>\r\n        </div>\r\n\r\n\r\n    </div>\r\n  <!--  <div class=\"col-9 text-right\">\r\n       <a *ngIf=\"!options.closeButton\" class=\"btn btn-pink btn-sm\" (click)=\"action($event)\">\r\n        {{ undoString }}\r\n      </a> \r\n      <a *ngIf=\"options.closeButton\" (click)=\"remove()\" class=\"btn btn-sm toast-close-button\">\r\n        &times;\r\n      </a>\r\n    </div>-->\r\n  </div>\r\n  \r\n","import { Component, OnInit, ViewChild, TemplateRef } from '@angular/core';\r\nimport { MessageService } from '../../Services/message-service';\r\nimport { AuthenticationService } from '../../Data/authentication-service';\r\nimport { Router } from '@angular/router';\r\nimport { MediatorService } from '../../Services/mediator.service';\r\nimport { UserDto } from '../../Models/Dtos/user-dto';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { Subscription } from 'rxjs';\r\nimport { SignalRService } from '../../Services/signal-rservice';\r\nimport { NotificationMessage } from '../../Models/notification-message';\r\nimport { ToastrService } from 'ngx-toastr';\r\n\r\n@Component({\r\n  selector: 'app-top',\r\n  templateUrl: './top.component.html',\r\n  styleUrls: ['./top.component.css']\r\n})\r\nexport class TopComponent implements OnInit {\r\n\r\n  @ViewChild('confirm',{static: true}) confirmElement : TemplateRef<any>;\r\n\r\n  public show = true;\r\n  public isLogged : boolean;\r\n  public Selected = 1;\r\n  public Progress = 0;\r\n  public isAdmin : boolean;\r\n  private _interval : NodeJS.Timer;\r\n  private _closeInterval : NodeJS.Timer;\r\n  public User: UserDto;\r\n  private _isRunning = false;\r\n\r\n  messageSubscription: Subscription;\r\n\r\n  constructor(private _messageService: MessageService, \r\n    private _authenticationService : AuthenticationService,\r\n    private _router : Router, private _mediatorService : MediatorService,\r\n    private _modalService: NgbModal,private toastr: ToastrService,\r\n    public Router: Router) { }\r\n\r\n  ngOnInit() {\r\n\r\n    this._mediatorService.Refresh.subscribe(x=>\r\n      {\r\n        this.RefreshUser();\r\n      });\r\n\r\n    this.RefreshUser(); \r\n    \r\n    this._messageService.Loading.subscribe(status=>\r\n      {\r\n        this.load(status);\r\n      });\r\n\r\n      this._mediatorService.Notify.subscribe(message =>\r\n        {\r\n\r\n          var html = this.createMessageHtml(message);\r\n    \r\n          this.toastr.error(html, \"\", {\r\n            enableHtml: true,\r\n            positionClass: 'toast-top-left',\r\n            closeButton: true,\r\n            timeOut: 100000\r\n          });\r\n          this.toastr.show();\r\n        });\r\n  }\r\n\r\n  RefreshUser()\r\n  {\r\n    this.User = this._authenticationService.currentUserValue;\r\n    if (this.User)\r\n    {\r\n      this.isLogged = true;\r\n      if (this.User.userType.userTypeId >= 2)\r\n        this.isAdmin = true;\r\n    }\r\n  }\r\n\r\n  LogOut()\r\n  {\r\n    this._modalService.open(this.confirmElement, { ariaLabelledBy: 'modal-basic-title'});\r\n  }\r\n\r\n  Confirm()\r\n  {\r\n    this._authenticationService.logout();\r\n    this.isLogged = false;\r\n    this.isAdmin = false;\r\n    this._router.navigate(['/login']);\r\n    this._modalService.dismissAll();\r\n  }\r\n\r\n  Cancel()\r\n  {\r\n    this._modalService.dismissAll();\r\n  }\r\n\r\n  private load(status : boolean)\r\n  {\r\n\r\n     if (this._interval && status)\r\n     {\r\n       clearInterval(this._interval);\r\n     }\r\n\r\n      if (status) {\r\n        this._interval = setInterval(() => {\r\n          if (this.Progress >= 100) {\r\n            this.Progress = 0;\r\n          } else {\r\n            this.Progress++;\r\n          }\r\n        }, 100);\r\n      }\r\n      else {\r\n        clearInterval(this._interval);\r\n        this.stop();\r\n      }\r\n  }\r\n\r\n\r\n  private stop()\r\n  {\r\n    this._closeInterval = setInterval(() => {\r\n\r\n      this.Progress+=3;\r\n      if (this.Progress > 100)\r\n      {\r\n        this.Progress = 0;\r\n        clearInterval(this._closeInterval);\r\n\r\n      }\r\n    }, 30);  \r\n  }\r\n\r\n  createMessageHtml(message : NotificationMessage) : string\r\n  {\r\n    \r\n    var messageHtml : string;\r\n    var titleClass=\"\";\r\n    switch(message.messageType) \r\n    {\r\n      case 1:\r\n        titleClass=\"infoTitle\";\r\n        break;\r\n      case 2:\r\n        titleClass=\"errorTitle\";\r\n        break;\r\n      case 3:\r\n        titleClass=\"successTitle\";\r\n\r\n        break;\r\n    }\r\n  \r\n    messageHtml = '<table class=toastTbl><tr><td class=' + titleClass + '>' + message.subject + '</td></tr>';\r\n\r\n    messageHtml = messageHtml + '<tr><td class=messageBody>' + message.body + '</td></tr>' ;\r\n\r\n    if (message.messages)\r\n    {\r\n      if (message.messages.length > 0)\r\n      {\r\n        messageHtml = messageHtml + '<tr><td class=messageBody>The following errors occured - </td></tr>'\r\n        message.messages.forEach(x=> \r\n        {\r\n          messageHtml = messageHtml + '<tr><td class=messageBody>' + x + '</td></tr>' ;\r\n        });\r\n      \r\n      }\r\n    }\r\n\r\n    messageHtml = messageHtml + '</table>';\r\n    return messageHtml;\r\n    \r\n  }\r\n}\r\n","<ng-template #confirm let-modal>\r\n  <div class=\"modal-header bg-dark modal-lg\">\r\n    <h4 class=\"modal-title modalTitle\" id=\"modal-basic-title\">Confirm LogOut</h4>\r\n    <button type=\"button\" class=\"close modalClose\" aria-label=\"Close\" (click)=\"modal.dismiss('Cross click')\">\r\n      <span aria-hidden=\"true\">×</span>\r\n    </button>\r\n  </div>\r\n  <div class=\"modal-body\">\r\n\r\n      <div class=\"row padTxtTop\">\r\n          <div class=\"col-sm-12\">\r\n          Are you sure sure you wish to logout - {{User.userName}} ?\r\n          </div>\r\n      </div>\r\n    <div class=\"row padTxtTop margTop\">\r\n      <div class=\"col-sm-3\">\r\n        <button class=\"btn-sm btn-success btn-outline-rounded btn-info\"  (click)=\"Confirm()\">Log Out</button>\r\n      </div>\r\n\r\n      <div class=\"col-sm-3\">\r\n        <button class=\"btn-sm btn-success btn-outline-rounded btn-info\" (click)=\"Cancel()\">Cancel</button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n</ng-template>\r\n\r\n  \r\n   <nav class=\"navbar navbar-expand-lg bgGloss fixed-top marg padBot\" id=\"mainNav\">\r\n    <app-bar [value]=\"Progress\"></app-bar> \r\n\r\n      <a class=\"navbar-brand js-scroll-trigger fnt\" [routerLink]=\"['/']\" >MORPH</a>\r\n      <button class=\"navbar-toggler navbar-toggler-right\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarResponsive\" aria-controls=\"navbarResponsive\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n        Menu\r\n        <i class=\"fas fa-bars\"></i>\r\n      </button>\r\n      <div class=\"collapse navbar-collapse\" id=\"navbarResponsive\">\r\n        <ul class=\"navbar-nav text-uppercase ml-auto\">\r\n          <li class=\"nav-item dropdown\">\r\n            <div ngbDropdown class=\"d-inline-block\">\r\n              <button class=\"btn-sm btn-info btnMarg margTop btnRadius\" id=\"dropdownMenuButton\" ngbDropdownToggle>\r\n                Tools\r\n              </button>\r\n              <div ngbDropdownMenu aria-labelledby=\"dropdownMenuButton\"  class=\"drpMenu\" style=\"background-color:#117a8b\">\r\n                <button ngbDropdownItem class=\"cmbItems\"  [routerLink]=\"['/cleanse']\">Cleanser</button>\r\n                <button ngbDropdownItem class=\"cmbItems\" [routerLink]=\"['/compare']\" >Compare files</button>\r\n                <button ngbDropdownItem class=\"cmbItems\" [routerLink]=\"['/viewEncoders']\" >Encoders</button>\r\n             \r\n              </div>\r\n            </div>\r\n          </li> \r\n\r\n\r\n          <li class=\"nav-item dropdown\" *ngIf=\"isAdmin\">\r\n            <div ngbDropdown class=\"d-inline-block\">\r\n              <button class=\"btn-sm btn-info btnMarg margTop btnRadius\" id=\"dropdownMenuButton\" ngbDropdownToggle>\r\n                Admin\r\n              </button>\r\n              <div ngbDropdownMenu aria-labelledby=\"dropdownMenuButton\"  class=\"drpMenu\" style=\"background-color:#117a8b\">\r\n                <button ngbDropdownItem class=\"cmbItems\"  [routerLink]=\"['/users']\">Users</button>\r\n                <button ngbDropdownItem class=\"cmbItems\" [routerLink]=\"['/mi']\" >MI Admin</button>\r\n                <button ngbDropdownItem class=\"cmbItems\" [routerLink]=\"['/changed']\" >User Inputs</button>\r\n              </div>\r\n            </div>\r\n          </li> \r\n          <li class=\"nav-item\">\r\n            <a class=\"nav-link js-scroll-trigger\" [ngClass]=\"{'activeLink': Router.url === '/manager'}\" [routerLink]=\"['/manager']\">Manager</a>\r\n          </li>\r\n          <li class=\"nav-item\">\r\n            <a class=\"nav-link js-scroll-trigger\" [ngClass]=\"{'activeLink': Router.url === '/import'}\" [routerLink]=\"['/import']\" >Import</a>\r\n          </li>\r\n          <li class=\"nav-item\">\r\n            <a class=\"nav-link js-scroll-trigger\" [ngClass]=\"{'activeLink': Router.url === '/mappingNew'}\" [routerLink]=\"['/mappingNew']\">Map Fields</a>\r\n          </li>\r\n          <li class=\"nav-item\">\r\n            <a class=\"nav-link js-scroll-trigger\" [ngClass]=\"{'activeLink': Router.url === '/locations'}\" [routerLink]=\"['/locations']\">Locations</a>\r\n          </li>\r\n\r\n          <li class=\"nav-item\" *ngIf=\"isLogged\" title=\"Sign Out\">\r\n          <i class=\"fa fa-sign-out logOut \" aria-hidden=\"true\"   (click)=\"LogOut()\">\r\n\r\n          </i>\r\n          \r\n          </li>\r\n        </ul>\r\n        \r\n      </div>\r\n\r\n  </nav> \r\n\r\n\r\n\r\n\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-assumptions',\r\n  templateUrl: './assumptions.component.html',\r\n  styleUrls: ['./assumptions.component.css']\r\n})\r\nexport class AssumptionsComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","<p>assumptions works!</p>\r\n","<div id=\"occOptions\" class=\"sidenav\">\r\n  <!--<a href=\"javascript:void(0)\" class=\"closebtn\" onclick=\"CloseOccupancy()\">&times;</a>\r\n  --><button type=\"button\" class=\"close modalClose closebtn\" aria-label=\"Close\" (click)=\"CloseOccupancy()\">\r\n    <span aria-hidden=\"true\">×</span>\r\n  </button>\r\n  <h4 class=\"modal-title modalTitle sideTitle header\" id=\"modal-basic-title\">Change Occupancy Input</h4>\r\n  <div class=\"modal-body\">\r\n    <form>\r\n      <div class=\"row\">\r\n        <div class=\"col-sm-12 lblTxt bld\">\r\n          The Occupancy Input is - <b class=\"imp\">{{FieldInput}}</b>\r\n        </div>\r\n      </div>\r\n      <div class=\"row topSpace\">\r\n        <div class=\"col-sm-12 lblTxt bld bottom\">Most used Occupancies - </div>\r\n      </div>\r\n      <ng-container  *ngFor=\"let comm of CommonOccupancies; let i = index\" >\r\n        <div class=\"row\">\r\n          <div class=\"col-sm-1 lblTxt bld\">{{i}})</div>\r\n          <div class=\"col-sm-1 lblTxt\">{{comm.scheme}}</div>\r\n        <div class=\"col-sm-9 lblTxt\">\r\n          <label>{{comm.name}}</label>\r\n        </div>\r\n      </div>\r\n      </ng-container>\r\n\r\n      <div class=\"row topSpace\">\r\n        <div class=\"col-sm-12 lblTxt bld\">\r\n          Selected Occupancy is -\r\n        </div>\r\n      </div>\r\n      <div class=\"row topSpace\">\r\n        <div class=\"col-sm-12 ctrls\">\r\n          <ng-select class=\"selectStyle customMed\"\r\n          id=\"testNameP\"\r\n          [items]=\"OccupancyCopies\"\r\n          class=\"cmbWidth\"\r\n          bindLabel=\"name\"\r\n          [(ngModel)]=\"SelectedOccupancyTypeId\"\r\n          (ngModelChange)=\"onOccChange()\"\r\n          placeholder=\"Please select an Occupancy\"\r\n          bindValue=\"id\"\r\n          clearable=\"true\"\r\n          style=\"padding-left:10px;\"\r\n          name=\"occInputLookup\"\r\n          clearAllText=\"Clear\">\r\n          </ng-select>\r\n        </div>\r\n      </div>\r\n      <div class=\"row padTxtTop topSpace\">\r\n        <div class=\"col-sm-12 lblTxt bld\">\r\n          Apply to All Occupancies containing the input -\r\n        </div>\r\n      </div>\r\n      <div class=\"row padTxtTop\">\r\n        <div class=\"smlPd col-sm-10\">\r\n          <input type=\"text\" class=\"form-control ctrls\" [(ngModel)]=\"SelectedTxt\"  name=\"locName\" (ngModelChange)=\"onOccTxtChanged()\" />\r\n        </div>\r\n      </div>\r\n      <div class=\"row padTxtTop\">\r\n        <div class=\"col-sm-6 smlPd\">\r\n          <button class=\"btn-nav btn-sm btn-outline-rounded\" [disabled]=\"!Apply\" (click)=\"ApplyOccInputValue()\"> Apply To All ({{SameValCtr}}) </button>\r\n        </div>\r\n      </div>\r\n    </form>\r\n    </div>\r\n</div>\r\n\r\n<div id=\"buildingOptions\" class=\"sidenav\">\r\n  <button type=\"button\" class=\"close modalClose closebtn\" aria-label=\"Close\" (click)=\"CloseBuilding()\">\r\n    <span aria-hidden=\"true\">×</span>\r\n  </button>\r\n  <h4 class=\"modal-title modalTitle sideTitle header\" id=\"modal-basic-title\">Change By Building Input</h4>\r\n  <div class=\"modal-body\">\r\n    <form>\r\n      <div class=\"row\">\r\n        <div class=\"col-sm-12 lblTxt bld\">\r\n          The Building Input is - <b class=\"imp\">{{FieldInput}}</b>\r\n        </div>\r\n      </div>\r\n      <div class=\"row topSpace\">\r\n        <div class=\"col-sm-11 ctrls smlPd\">\r\n          <ng-select class=\"selectStyle customMed\"\r\n            #i\r\n            [items]=\"BuildingClassCopies\"\r\n            class=\"cmbWidth\"\r\n            bindLabel=\"name\"\r\n            [(ngModel)]=\"SelectedBuildingId\"\r\n            (ngModelChange)=\"onBuildingChange()\"\r\n            placeholder=\"Please select a Building Class\"\r\n            bindValue=\"id\"\r\n            clearable=\"true\"\r\n            name=\"bldgLookup\"\r\n            clearAllText=\"Clear\">\r\n            </ng-select>\r\n        </div>\r\n      </div>\r\n      <div class=\"row padTxtTop topSpace\">\r\n        <div class=\"col-sm-12 lblTxt bld\">\r\n          Apply to All Building Input's containing the following text -\r\n        </div>\r\n      </div>\r\n      <div class=\"row padTxtTop\">\r\n        <div class=\"smlPd col-sm-10 noRpad\">\r\n          <input type=\"text\" class=\"form-control ctrls\" [(ngModel)]=\"SelectedTxt\"  name=\"bldgInput\" (ngModelChange)=\"onBuildingTxtChanged()\" />\r\n        </div>\r\n      </div>\r\n      <div class=\"row padTxtTop\">\r\n        <div class=\"col-sm-6 smlPd\">\r\n          <button class=\"btn-nav btn-sm btn-outline-rounded\" [disabled]=\"!Apply\" (click)=\"ApplyBuildingInputValue()\"> Apply To All ({{SameValCtr}}) </button>\r\n        </div>\r\n      </div>\r\n    </form>\r\n    </div>\r\n</div>\r\n  \r\n  \r\n  <ng-template #assumptionsModel let-modal>\r\n      <div class=\"modal-header bg-dark\">\r\n        <h4 class=\"modal-title modalTitle\" id=\"modal-basic-title\">Assumptions</h4>\r\n        <button type=\"button\" class=\"close modalClose\" aria-label=\"Close\" (click)=\"modal.dismiss('Cross click')\">\r\n          <span aria-hidden=\"true\">×</span>\r\n        </button>\r\n      </div>\r\n      <div class=\"modal-body\">\r\n          The following describes all assumptions made during the processing of this account -\r\n          <table class=\"table table-striped tblMargin\">\r\n              <thead>\r\n                  <tr>\r\n                    <th class=\"customth\">#</th>\r\n                    <th class=\"customth\">Assumption</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  <ng-container *ngFor=\"let ass of Assumptions; let i = index\">\r\n              <tr class=\"trLineHeight\" (click)=\"SetClickedRow(i)\" [class.active]=\"i == SelectedRow\">\r\n                  <td class=\"td\">{{ass.order}}</td>\r\n                  <td class=\"td\">{{ass.assumption}}</td>\r\n              </tr>\r\n              </ng-container>\r\n            </tbody>\r\n          </table>\r\n      </div>\r\n      <div class=\"modal-footer\">\r\n        <button type=\"button\" class=\"btn btn btn-info btn-sm\" (click)=\"modal.close('Save click')\">Ok</button>\r\n      </div>\r\n  </ng-template>\r\n\r\n  <ng-template #summary let-modal>\r\n    <div class=\"modal-header bg-dark\">\r\n      <h4 class=\"modal-title modalTitle\" id=\"modal-basic-title\">Filters</h4>\r\n      <button type=\"button\" class=\"close modalClose\" aria-label=\"Close\" (click)=\"modal.dismiss('Cross click')\">\r\n        <span aria-hidden=\"true\">×</span>\r\n      </button>\r\n    </div>\r\n    <div class=\"modal-body\">\r\n      <div class=\"row\">\r\n        <div class=\"col-sm-12\">\r\n          Filter by unknown values  -\r\n        </div>\r\n      </div>\r\n      <table>\r\n        <tr>\r\n          <td class=\"trantd\">\r\n            <ng-select class=\"selectStyle sumCmbWidth\"\r\n            [items]=\"SummaryDto.occupancy\"\r\n            bindLabel=\"text\"\r\n            [(ngModel)]=\"SummaryDto.selectedOccupancy\"\r\n            (ngModelChange)=\"onUnknownChanged(SummaryDto.selectedOccupancy,1)\"\r\n            placeholder=\"Select an Occupancy\"\r\n            bindValue=\"text\"\r\n            clearable=\"true\"\r\n            name=\"lkpOccupancy\"\r\n            clearAllText=\"Clear\">\r\n            </ng-select>\r\n          </td>\r\n          <td class=\"trantd\">\r\n            <ng-select class=\"selectStyle sumCmbWidth\"\r\n            [items]=\"SummaryDto.buildingClass\"\r\n            bindLabel=\"text\"\r\n            [(ngModel)]=\"SummaryDto.selectedBuilding\"\r\n            (ngModelChange)=\"onUnknownChanged(SummaryDto.selectedBuilding, 2)\"\r\n            placeholder=\"Select a Building class\"\r\n            bindValue=\"text\"\r\n            clearable=\"true\"\r\n            name=\"lkpBuilding\"\r\n            clearAllText=\"Clear\">\r\n            </ng-select>\r\n          </td>\r\n          <td class=\"trantd\">\r\n            <ng-select class=\"selectStyle sumCmbWidth\"\r\n            [items]=\"SummaryDto.sprinkler\"\r\n            bindLabel=\"text\"\r\n            [(ngModel)]=\"SummaryDto.selectedSprinkler\"\r\n            (ngModelChange)=\"onUnknownChanged(SummaryDto.selectedSprinkler,3)\"\r\n            placeholder=\"Select a Sprinkler value\"\r\n            bindValue=\"text\"\r\n            clearable=\"true\"\r\n            name=\"lkpSprinkler\"\r\n            clearAllText=\"Clear\">\r\n            </ng-select>\r\n          </td>\r\n          <td class=\"trantd\">\r\n            <button type=\"button\" class=\"btn btn btn-info btn-sm alignBtn\"\r\n            [disabled]=\"filterDisabled()\" (click)=\"filter()\">Filters</button>\r\n    \r\n          </td>\r\n        </tr>\r\n      </table>\r\n      <div class=\"row\" style=\"margin-top:10px;\">\r\n        <div class=\"col-sm-12\">\r\n          Filter by Distinct values  -\r\n        </div>\r\n      </div>  \r\n      <table>\r\n        <tr>\r\n          <td class=\"trantd\">\r\n            <ng-select class=\"selectStyle sumCmbWidth\"\r\n            [items]=\"SummaryDto.distinctInputs.occupancy\"\r\n            bindLabel=\"text\"\r\n            [(ngModel)]=\"SummaryDto.distinctInputs.selectedDisOccupancy\"\r\n            (ngModelChange)=\"onDisChanged(SummaryDto.distinctInputs.selectedDisOccupancy,1)\"\r\n            placeholder=\"Select an Occupancy\"\r\n            bindValue=\"text\"\r\n            clearable=\"true\"\r\n            name=\"lkpDisOccupancy\"\r\n            clearAllText=\"Clear\">\r\n            </ng-select>\r\n          </td>\r\n          <td class=\"trantd\">\r\n            <ng-select class=\"selectStyle sumCmbWidth\"\r\n            [items]=\"SummaryDto.distinctInputs.building\"\r\n            bindLabel=\"text\"\r\n            [(ngModel)]=\"SummaryDto.distinctInputs.selectedDisBuilding\"\r\n            (ngModelChange)=\"onDisChanged(SummaryDto.distinctInputs.selectedDisBuilding, 2)\"\r\n            placeholder=\"Select a Building class\"\r\n            bindValue=\"text\"\r\n            clearable=\"true\"\r\n            name=\"lkpDisBuilding\"\r\n            clearAllText=\"Clear\">\r\n            </ng-select>\r\n          </td>\r\n          <td class=\"trantd\">\r\n            <ng-select class=\"selectStyle sumCmbWidth\"\r\n            [items]=\"SummaryDto.distinctInputs.sprinkler\"\r\n            bindLabel=\"text\"\r\n            [(ngModel)]=\"SummaryDto.distinctInputs.selectedDisSprinkler\"\r\n            (ngModelChange)=\"onDisChanged(SummaryDto.distinctInputs.selectedDisSprinkler,3)\"\r\n            placeholder=\"Select a Sprinkler value\"\r\n            bindValue=\"text\"\r\n            clearable=\"true\"\r\n            name=\"lkpDisSprinkler\"\r\n            clearAllText=\"Clear\">\r\n            </ng-select>\r\n          </td>\r\n          <td class=\"trantd\">\r\n            <button type=\"button\" class=\"btn btn btn-info btn-sm alignBtn\"\r\n            [disabled]=\"distinctFilterDisabled()\" (click)=\"distinctFilter()\">Filters</button>\r\n    \r\n          </td>\r\n        </tr>\r\n      </table>\r\n    \r\n   <!-- <div class=\"row\" style=\"margin-top:10px;\">\r\n      <div class=\"col-sm-12\">\r\n        Filter by Morph Rating  -\r\n      </div>\r\n      <table>\r\n        <tr>\r\n          <td class=\"trantd\">\r\n            <ng-select class=\"selectStyle sumCmbWidth\"\r\n            [items]=\"SummaryDto.occupancyRating\"\r\n            bindLabel=\"text\"\r\n            [(ngModel)]=\"SummaryDto.selectedOccupancyRating\"\r\n            (ngModelChange)=\"onRatingChanged(SummaryDto.selectedOccupancyRating,1)\"\r\n            placeholder=\"Select an Occupancy Rating\"\r\n            bindValue=\"text\"\r\n            clearable=\"true\"\r\n            name=\"lkpOccupancyRating\"\r\n            clearAllText=\"Clear\">\r\n            </ng-select>\r\n          </td>\r\n          <td class=\"trantd\">\r\n            <ng-select class=\"selectStyle sumCmbWidth\"\r\n            [items]=\"SummaryDto.buildingRating\"\r\n            bindLabel=\"text\"\r\n            [(ngModel)]=\"SummaryDto.selectedBuildingRating\"\r\n            (ngModelChange)=\"onRatingChanged(SummaryDto.selectedBuildingRating, 2)\"\r\n            placeholder=\"Select a Building Rating\"\r\n            bindValue=\"text\"\r\n            clearable=\"true\"\r\n            name=\"lkpBuildingRating\"\r\n            clearAllText=\"Clear\">\r\n            </ng-select>\r\n          </td>\r\n          <td class=\"trantd\">\r\n           &nbsp;\r\n          </td>\r\n          <td class=\"trantd\">\r\n            <button type=\"button\" class=\"btn btn btn-info btn-sm alignBtn\"\r\n            [disabled]=\"ratingFilterDisabled()\" (click)=\"ratingFilter()\">Filters1</button>\r\n    \r\n          </td>\r\n        </tr>\r\n      </table>\r\n    </div> -->\r\n    </div>\r\n    <div class=\"modal-footer\">\r\n      <button type=\"button\" class=\"btn btn btn-info btn-sm\" (click)=\"modal.close('Save click')\">Close</button>\r\n    </div>\r\n  </ng-template>\r\n\r\n  <ng-template #state let-modal>\r\n    <div class=\"modal-header bg-dark\">\r\n      <h4 class=\"modal-title modalTitle\" id=\"modal-basic-title\">Change State</h4>\r\n      <button type=\"button\" class=\"close modalClose\" aria-label=\"Close\" (click)=\"modal.dismiss('Cross click')\">\r\n        <span aria-hidden=\"true\">×</span>\r\n      </button>\r\n    </div>\r\n    <div class=\"modal-body\">\r\n    <form>\r\n      <div class=\"row\">\r\n          <div class=\"col-sm-4\">\r\n      \r\n              <ng-select class=\"selectStyle customMed\"\r\n              #i\r\n              [items]=\"States\"\r\n              class=\"cmbWidth\"\r\n              bindLabel=\"name\"\r\n              [(ngModel)]=\"SelectedStateId\"\r\n              (ngModelChange)=\"onStateChange()\"\r\n              placeholder=\"Please select a State\"\r\n              bindValue=\"stateId\"\r\n              clearable=\"true\"\r\n              name=\"stateLookup\"\r\n              clearAllText=\"Clear\">\r\n              </ng-select>\r\n          </div>\r\n      </div>\r\n      <div class=\"row padTxtTop\">\r\n        <div class=\"col-sm-3\">\r\n          <button class=\"btn-sm btn-success btn-outline-rounded btn-info\" [disabled]=\"!Apply\" (click)=\"ApplyStateCode(true)\"> Apply To All ({{SameValCtr}}) </button>\r\n        </div>\r\n\r\n        <div class=\"col-sm-3\">\r\n          <button class=\"btn-sm btn-success btn-outline-rounded btn-info\" (click)=\"ApplyStateCode(false)\" [disabled]=\"!Apply\">Apply</button>\r\n        </div>\r\n      </div>\r\n      </form>\r\n    </div>\r\n\r\n  </ng-template>\r\n\r\n  <ng-template #txt let-modal>\r\n    <div class=\"modal-header bg-dark\">\r\n      <h4 class=\"modal-title modalTitle\" id=\"modal-basic-title\">Change {{ModalTitle}}</h4>\r\n      <button type=\"button\" class=\"close modalClose\" aria-label=\"Close\" (click)=\"modal.dismiss()\">\r\n        <span aria-hidden=\"true\">×</span>\r\n      </button>\r\n    </div>\r\n    <div class=\"modal-body\">\r\n    <form>\r\n      <div class=\"row\">\r\n          <div class=\"col-sm-12\">\r\n            <input type=\"text\" class=\"form-control\" [(ngModel)]=\"SelectedTxt\"  name=\"txte\" (ngModelChange)=\"onTxtChanged()\" />\r\n          </div>\r\n      </div>\r\n      <div class=\"row padTxtTop\">\r\n        <div class=\"col-sm-3\">\r\n          <button class=\"btn-sm btn-success btn-outline-rounded btn-info\" [disabled]=\"!Apply\" (click)=\"ApplyValue(true)\"> Apply To All ({{SameValCtr}}) </button>\r\n        </div>\r\n        <div class=\"col-sm-3\">\r\n          <button class=\"btn-sm btn-success btn-outline-rounded btn-info\" (click)=\"ApplyValue(false)\" [disabled]=\"!Apply\">Apply</button>\r\n        </div>\r\n      </div>\r\n      </form>\r\n      </div>\r\n  </ng-template>\r\n\r\n  <ng-template #occInput let-modal>\r\n    <div class=\"modal-header bg-dark\">\r\n      <h4 class=\"modal-title modalTitle\" id=\"modal-basic-title\">Change By Occupancy Input</h4>\r\n      <button type=\"button\" class=\"close modalClose\" aria-label=\"Close\" (click)=\"ModalOccupancyClose()\">\r\n        <span aria-hidden=\"true\">×</span>\r\n      </button>\r\n    </div>\r\n    <div class=\"modal-body\">\r\n      <form>\r\n        <div class=\"row\">\r\n          <div class=\"col-sm-12 lblTxt bld\">\r\n            The Occupancy Input is - {{FieldInput}}\r\n          </div>\r\n        </div>\r\n        <br/>\r\n        <div class=\"row\">\r\n          <div class=\"col-sm-5 lblTxt bld\">Most used Occupancies - </div>\r\n          <div class=\"col-sm-8 lblTxt\"></div>\r\n        </div>\r\n        <ng-container *ngFor=\"let comm of CommonOccupancies; let i = index\" >\r\n          <div class=\"row\">\r\n            <div class=\"col-sm-1 lblTxt bld\">{{i}})</div>\r\n            <div class=\"col-sm-1 lblTxt\">{{comm.scheme}}</div>\r\n          <div class=\"col-sm-6 lblTxt\">\r\n            <label>{{comm.name}}</label>\r\n          </div>\r\n          </div>\r\n        </ng-container>\r\n        <div class=\"row\">\r\n            <div class=\"col-sm-12\">\r\n              <ng-select class=\"selectStyle customMed\"\r\n              #i\r\n              [items]=\"Occupancies\"\r\n              class=\"cmbWidth\"\r\n              bindLabel=\"name\"\r\n              [(ngModel)]=\"SelectedOccupancyTypeId\"\r\n              (ngModelChange)=\"onOccChange()\"\r\n              placeholder=\"Please select an Occupancy\"\r\n              bindValue=\"id\"\r\n              clearable=\"true\"\r\n              name=\"occLookup\"\r\n              clearAllText=\"Clear\">\r\n              </ng-select>\r\n            </div>\r\n        </div>\r\n        <div class=\"row padTxtTop\">\r\n          <div class=\"col-sm-12 lblTxt bld\">\r\n            Apply to All Occupancies containing the input -\r\n          </div>\r\n        </div>\r\n        <div class=\"row padTxtTop\">\r\n          <div class=\"col-sm-6\">\r\n            <input type=\"text\" class=\"form-control\" [(ngModel)]=\"SelectedTxt\"  name=\"locName\" (ngModelChange)=\"onOccTxtChanged()\" />\r\n          </div>\r\n        </div>\r\n       \r\n        <div class=\"row padTxtTop\">\r\n          <div class=\"col-sm-3\">\r\n            <button class=\"btn-sm btn-success btn-outline-rounded btn-info\" [disabled]=\"!Apply\" (click)=\"ApplyOccInputValue()\"> Apply To All ({{SameValCtr}}) </button>\r\n          </div>\r\n        </div>\r\n        </form>\r\n        </div>\r\n  </ng-template>\r\n\r\n  <ng-template #occ let-modal>\r\n    <div class=\"modal-header bg-dark\">\r\n      <h4 class=\"modal-title modalTitle\" id=\"modal-basic-title\">Change Occupancy</h4>\r\n      <button type=\"button\" class=\"close modalClose\" aria-label=\"Close\" (click)=\"CloseModal()\">\r\n        <span aria-hidden=\"true\">×</span>\r\n      </button>\r\n    </div>\r\n    <div class=\"modal-body\">\r\n    <form>\r\n      <div class=\"row\">\r\n        <div class=\"col-sm-12 lblTxt bld\">\r\n          The Occupancy Input is - {{FieldInput}}\r\n        </div>\r\n      </div>\r\n      <br/>\r\n      <div class=\"row\">\r\n        <div class=\"col-sm-5 lblTxt bld\">Most used Occupancies - </div>\r\n        <div class=\"col-sm-8 lblTxt\"></div>\r\n      </div>\r\n      <ng-container *ngFor=\"let comm of CommonOccupancies; let i = index\" >\r\n        <div class=\"row\">\r\n          <div class=\"col-sm-1 lblTxt bld\">{{i}})</div>\r\n          <div class=\"col-sm-1 lblTxt\">{{comm.scheme}}</div>\r\n        <div class=\"col-sm-6 lblTxt\">\r\n          <label>{{comm.name}}</label>\r\n        </div>\r\n        </div>\r\n      </ng-container>\r\n      <div class=\"row\">\r\n          <div class=\"col-sm-12\">\r\n            <ng-select class=\"selectStyle customMed\"\r\n            #i\r\n            [items]=\"Occupancies\"\r\n            class=\"cmbWidth\"\r\n            bindLabel=\"name\"\r\n            [(ngModel)]=\"SelectedOccupancyTypeId\"\r\n            (ngModelChange)=\"onOccChange()\"\r\n            placeholder=\"Please select an Occupancy\"\r\n            bindValue=\"id\"\r\n            clearable=\"true\"\r\n            name=\"occLookup\"\r\n            clearAllText=\"Clear\">\r\n            </ng-select>\r\n          </div>\r\n      </div>\r\n      <div class=\"row padTxtTop\">\r\n        <div class=\"col-sm-3\">\r\n          <button class=\"btn-sm btn-success btn-outline-rounded btn-info\" [disabled]=\"!Apply\" (click)=\"ApplyValue(true, false)\"> Apply To All ({{SameValCtr}}) </button>\r\n        </div>\r\n        <div class=\"col-sm-4\" *ngIf=\"IsUnknown\">\r\n          <button class=\"btn-sm btn-success btn-outline-rounded btn-info\" [disabled]=\"!Apply\" (click)=\"ApplyValue(false, true)\"> Apply To Unknown ({{LocsWithNoOccupancyCtr}}) </button>\r\n        </div>\r\n        <div class=\"col-sm-3\">\r\n          <button class=\"btn-sm btn-success btn-outline-rounded btn-info\" (click)=\"ApplyValue(false, false)\" [disabled]=\"!Apply\">Apply</button>\r\n        </div>\r\n      </div>\r\n      </form>\r\n      </div>\r\n\r\n  </ng-template>\r\n\r\n  <ng-template #building let-modal>\r\n    <div class=\"modal-header bg-dark\">\r\n      <h4 class=\"modal-title modalTitle\" id=\"modal-basic-title\">Change Building Class</h4>\r\n      <button type=\"button\" class=\"close modalClose\" aria-label=\"Close\" (click)=\"modal.dismiss()\">\r\n        <span aria-hidden=\"true\">×</span>\r\n      </button>\r\n    </div>\r\n    <div class=\"modal-body\">\r\n    <form>\r\n      <div class=\"row\">\r\n        <div class=\"col-sm-12 lblTxt\">\r\n          The Building Class Input is - <b>{{FieldInput}}</b>\r\n        </div>\r\n      </div>\r\n      <div class=\"row\">\r\n          <div class=\"col-sm-12 topSpace\">\r\n            <ng-select class=\"selectStyle customMed\"\r\n            #i\r\n            [items]=\"BuildingClass\"\r\n            class=\"cmbWidth\"\r\n            bindLabel=\"name\"\r\n            [(ngModel)]=\"SelectedBuildingId\"\r\n            (ngModelChange)=\"onBuildingChange()\"\r\n            placeholder=\"Please select a Building Class\"\r\n            bindValue=\"id\"\r\n            clearable=\"true\"\r\n            name=\"bldgLookup\"\r\n            clearAllText=\"Clear\">\r\n            </ng-select>\r\n          </div>\r\n      </div>\r\n      <div class=\"row padTxtTop\">\r\n        <div class=\"col-sm-3\">\r\n          <button class=\"btn-sm btn-success btn-outline-rounded btn-info\" [disabled]=\"!Apply\" (click)=\"ApplyValue(true)\"> Apply To All ({{SameValCtr}}) </button>\r\n        </div>\r\n\r\n        <div class=\"col-sm-3\">\r\n          <button class=\"btn-sm btn-success btn-outline-rounded btn-info\" (click)=\"ApplyValue(false)\" [disabled]=\"!Apply\">Apply</button>\r\n        </div>\r\n      </div>\r\n      </form>\r\n      </div>\r\n\r\n  </ng-template>\r\n\r\n  <ng-template #country let-modal>\r\n    <div class=\"modal-header bg-dark\">\r\n      <h4 class=\"modal-title modalTitle\" id=\"modal-basic-title\">Change Country</h4>\r\n      <button type=\"button\" class=\"close modalClose\" aria-label=\"Close\" (click)=\"modal.dismiss('Cross click')\">\r\n        <span aria-hidden=\"true\">×</span>\r\n      </button>\r\n    </div>\r\n    <div class=\"modal-body\">\r\n    <form>\r\n      <div class=\"row\">\r\n          <div class=\"col-sm-4\">\r\n      \r\n              <ng-select class=\"selectStyle customMed\"\r\n              #i\r\n              [items]=\"Countries\"\r\n              class=\"cmbWidth\"\r\n              bindLabel=\"isoCode\"\r\n              [(ngModel)]=\"SelectedCountryId\"\r\n              (ngModelChange)=\"onCountryChange()\"\r\n              placeholder=\"Please select a Country\"\r\n              bindValue=\"countryId\"\r\n              clearable=\"true\"\r\n              name=\"countryLookup\"\r\n              clearAllText=\"Clear\">\r\n              </ng-select>\r\n            </div>\r\n      </div>\r\n      <div class=\"row padTxtTop\">\r\n        <div class=\"col-sm-3\">\r\n          <button class=\"btn-sm btn-success btn-outline-rounded btn-info\" [disabled]=\"!Apply\" (click)=\"ApplyValue(true)\"> Apply To All ({{SameValCtr}}) </button>\r\n        </div>\r\n\r\n        <div class=\"col-sm-3\">\r\n          <button class=\"btn-sm btn-success btn-outline-rounded btn-info\" (click)=\"ApplyValue(false)\" [disabled]=\"!Apply\">Apply</button>\r\n        </div>\r\n      </div>\r\n      </form>\r\n      </div>\r\n\r\n  </ng-template>\r\n\r\n  <ng-template #locName let-modal>\r\n    <div class=\"modal-header bg-dark\">\r\n      <h4 class=\"modal-title modalTitle\" id=\"modal-basic-title\">Custom Location Name</h4>\r\n      <button type=\"button\" class=\"close modalClose\" aria-label=\"Close\" (click)=\"modal.dismiss('Cross click')\">\r\n        <span aria-hidden=\"true\">×</span>\r\n      </button>\r\n    </div>\r\n    <div class=\"modal-body\">\r\n    <form>\r\n      <div class=\"row\">\r\n        <div class=\"col-sm-12\">\r\n          <input type=\"text\" class=\"form-control\" [(ngModel)]=\"SelectedTxt\"  name=\"locName\" (ngModelChange)=\"onTxtChanged()\" />\r\n        </div>\r\n      </div>\r\n      <div class=\"row padTxtTop\">\r\n        <div class=\"col-sm-3\">\r\n          <button class=\"btn-sm btn-success btn-outline-rounded btn-info\" [disabled]=\"!Apply\" (click)=\"ApplyValue(true,false)\"> Apply To All </button>\r\n        </div>\r\n      </div>\r\n      </form>\r\n      </div>\r\n\r\n  </ng-template>\r\n\r\n  <ng-template #county let-modal>\r\n    <div class=\"modal-header bg-dark\">\r\n      <h4 class=\"modal-title modalTitle\" id=\"modal-basic-title\">Change County</h4>\r\n      <button type=\"button\" class=\"close modalClose\" aria-label=\"Close\" (click)=\"modal.dismiss('Cross click')\">\r\n        <span aria-hidden=\"true\">×</span>\r\n      </button>\r\n    </div>\r\n    <div class=\"modal-body\">\r\n      <form>\r\n        <div class=\"row\">\r\n          <div class=\"col-sm-12\">\r\n            <input type=\"text\" class=\"form-control\" [(ngModel)]=\"SelectedTxt\"  name=\"county\" (ngModelChange)=\"onTxtChanged()\" />\r\n          </div>\r\n        </div>\r\n        <div class=\"row padTxtTop\">\r\n          <div class=\"col-sm-3\">\r\n            <button class=\"btn-sm btn-success btn-outline-rounded btn-info\" [disabled]=\"!Apply\" (click)=\"ApplyValue(true)\"> Apply To All ({{SameValCtr}}) </button>\r\n          </div>\r\n          <div class=\"col-sm-3\">\r\n            <button class=\"btn-sm btn-success btn-outline-rounded btn-info\" [disabled]=\"!Apply\" (click)=\"ApplyValue(true,false)\"> Apply To All</button>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </div>\r\n\r\n  </ng-template>\r\n\r\n  <ng-template #sprinkler let-modal>\r\n    <div class=\"modal-header bg-dark\">\r\n      <h4 class=\"modal-title modalTitle\" id=\"modal-basic-title\">Change Sprinkler</h4>\r\n      <button type=\"button\" class=\"close modalClose\" aria-label=\"Close\" (click)=\"modal.dismiss('Cross click')\">\r\n        <span aria-hidden=\"true\">×</span>\r\n      </button>\r\n    </div>\r\n    <div class=\"modal-body\">\r\n    <form>\r\n      <div class=\"row\">\r\n        <div class=\"col-sm-12 lblTxt bld\">\r\n          The Sprinkler Input is - {{FieldInput}}\r\n        </div>\r\n      </div>\r\n      <div class=\"row\">\r\n          <div class=\"col-sm-4\">\r\n      \r\n              <ng-select class=\"selectStyle customMed\"\r\n              #i\r\n              [items]=\"Sprinklers\"\r\n              class=\"cmbWidth\"\r\n              bindLabel=\"value\"\r\n              [(ngModel)]=\"SelectedSprinklerId\"\r\n              (ngModelChange)=\"onSprinklerChange()\"\r\n              placeholder=\"Please select a Sprinkler\"\r\n              bindValue=\"sprinklerId\"\r\n              clearable=\"true\"\r\n              name=\"sprinklerLookup\"\r\n              clearAllText=\"Clear\">\r\n              </ng-select>\r\n            </div>\r\n      </div>\r\n      <div class=\"row padTxtTop\">\r\n        <div class=\"col-sm-3\">\r\n          <button class=\"btn-sm btn-success btn-outline-rounded btn-info\" [disabled]=\"!Apply\" (click)=\"ApplyValue(true)\"> Apply To All ({{SameValCtr}}) </button>\r\n        </div>\r\n\r\n        <div class=\"col-sm-3\">\r\n          <button class=\"btn-sm btn-success btn-outline-rounded btn-info\" (click)=\"ApplyValue(false)\" [disabled]=\"!Apply\">Apply</button>\r\n        </div>\r\n      </div>\r\n      </form>\r\n      </div>\r\n\r\n  </ng-template>\r\n\r\n  <ng-template #load let-modal>\r\n    <div class=\"modal-header bg-dark\">\r\n      <h4 class=\"modal-title modalTitle\" id=\"modal-basic-title\">{{ParsingHeader}}</h4>\r\n    \r\n    </div>\r\n    <div class=\"modal-body\">\r\n      <div class=\"row\">\r\n        <div class=\"col-sm-12\">\r\n          <ngb-progressbar [value]=\"ProgressPercent\" style=\"padding-left: 4px;padding-right: 4px;\"\r\n          [striped]=\"true\" [animated]=\"true\"></ngb-progressbar>\r\n        </div>\r\n      </div>\r\n      <div class=\"row\">\r\n        <div class=\"col-sm-12\">\r\n          <span class=\"bld lblTxt noLineHeight\"> {{ProgressTxt}}</span>\r\n        </div>\r\n      </div>\r\n     \r\n    </div>\r\n\r\n  </ng-template>\r\n\r\n<div class=\"sectionHeader\">\r\n    <div class=\"sectionContent sectionTop\">\r\n        <div class=\"row padBtmBtns\">\r\n          <div class=\"col-sm-4\">\r\n              <button class=\"btn btn-info btn-square btn-sm margLeft\" [disabled]=\"HasLoaded\" (click)=\"Load()\" >Map</button>\r\n              <button class=\"btn btn-info btn-square btn-sm margLeft\" [disabled]=\"!HasLoaded\" (click)=\"Refresh()\" >Load</button> \r\n              <button class=\"btn btn-info btn-square btn-sm margLeft wdth\" [disabled]=\"!HasCompleted\" (click)=\"ViewAssumptions(assumptionsModel)\">Assumptions</button>\r\n              <button class=\"btn btn-info btn-square btn-sm margLeft wdth\" [disabled]=\"!HasCompleted\" (click)=\"CustomName()\">Loc Name</button>\r\n              <button class=\"btn btn-info btn-square btn-sm margLeft wdth\" [disabled]=\"!HasReconciled\" (click)=\"Reconcile()\">Reconcile</button>\r\n              <button class=\"btn btn-info btn-square btn-sm margLeft wdthLrg\" [disabled]=\"!HasCompleted\" (click)=\"ViewSummary(summary)\">{{SummaryBtn}}</button>\r\n              <button class=\"btn btn-info btn-square btn-sm margLeft wdthLrg\" [disabled]=\"!HasCompleted\" (click)=\"resetFilters()\">Reset Filters</button>\r\n          </div>\r\n\r\n          <div class=\"col-xs-1 padTxtTop\">\r\n            <span> Total Tiv -  </span>\r\n          </div>\r\n          <div class=\"col-sm-1 padTxtTop\">\r\n          <span class=\"bld\">{{TotalTiv | number}}</span> \r\n          </div>\r\n\r\n          <div class=\"col-xs-1 padTxtTop\">\r\n            <span class=\"bld\">{{CountryTxt}}</span>\r\n          </div>\r\n        \r\n\r\n        <div class=\"col-sm-1\">\r\n          <button class=\"btn btn-info btn-square btn-sm margLeft\" (click)=\"Export()\" [disabled]=\"!HasLoaded\">Export</button>\r\n        </div>  \r\n      </div>\r\n    </div>5\r\n    <div class=\"sectionContent sectionTop\" *ngIf=\"HasCompleted\">\r\n      <nav class=\"navLeft\">\r\n        <div class=\"nav nav-tabs\" id=\"nav-tab\" role=\"tablist\">\r\n          <button class=\"active nav-link active\" id=\"mapping-tab\" data-toggle=\"tab\" href=\"#mappings\">Locations Mappings</button>\r\n          <button class=\"nav-link\" id=\"locations-tab\" data-toggle=\"tab\" href=\"#locations\">Location Confidence</button>\r\n          <button class=\"nav-link\" id=\"morph-tab\" data-toggle=\"tab\" href=\"#morph\">Morph Confidence</button>\r\n        </div>\r\n      </nav>\r\n      <div class=\"tab-content clearfix\">\r\n        <div class=\"tab-pane active\" id=\"mappings\" #mappingsTab>\r\n          <ag-grid-angular\r\n          \r\n          style=\"width: 1478px; height: 542px;\"\r\n          class=\"ag-theme-balham marg\"\r\n          [rowData]=\"Locations\"\r\n          [columnDefs]=\"ColumnDefs\"\r\n          [gridOptions]=\"Options\"\r\n          (gridReady)=\"onGridReady($event)\"\r\n          [rowSelection]=\"RowSelection\"\r\n          [overlayNoRowsTemplate]=\"NoRowsTemplate\"\r\n          (cellDoubleClicked)='onCellClicked($event)'\r\n          (firstDataRendered)='onFirstDataRendered()' >\r\n          </ag-grid-angular>\r\n        </div>\r\n        <div class=\"tab-pane\" id=\"locations\">\r\n          <table id=\"locationTivs\" style=\"width: 601px;\" class=\"marg\">\r\n            <tr>\r\n              <th style=\"width:200px;\" class=\"customth th\">Country</th>\r\n              <th style=\"width:200px;\" class=\"customth th\">Total TIV</th>\r\n              <th style=\"width:200px;\" class=\"customth th\">Building TIV</th>\r\n              <th style=\"width:200px;\" class=\"customth th\">Occupancy TIV</th>\r\n            </tr>\r\n            <ng-container *ngFor = \"let row of Confidence.locationTivDtos\">\r\n            <tr class=\"tdRow\">\r\n              <td class=\"cusTd bld\">\r\n                {{row.country}}\r\n              </td>\r\n              <td class=\"cusTd bld\">\r\n                {{ row.totalTiv | number:'1.0':'en-US' }}\r\n              </td>\r\n              <td class=\"cusTd bld\">\r\n                {{ row.bldgTiv | number:'1.0':'en-US' }}\r\n              </td>\r\n              <td class=\"cusTd bld\">\r\n                {{ row.occTiv | number:'1.0':'en-US' }}\r\n              </td>\r\n            </tr>\r\n            <ng-container *ngFor = \"let stRow of row.locationStateTivDtos\">\r\n              <tr class=\"tdRow\">\r\n                <td class=\"cusTd padLeft\">\r\n                  <a [routerLink]=\"\"  (click)=\"SetStateFilter(stRow.state)\" >{{stRow.state}}</a>\r\n                </td>\r\n                <td class=\"cusTd\">\r\n                 {{ stRow.totalTiv | number:'1.0':'en-US' }}\r\n                </td>\r\n                <td class=\"cusTd\">\r\n                  {{ stRow.bldgTiv | number:'1.0':'en-US' }}\r\n                </td>\r\n                <td class=\"cusTd\">\r\n                  {{ stRow.occTiv | number:'1.0':'en-US' }}\r\n                </td>\r\n              </tr>\r\n            </ng-container>\r\n            </ng-container>\r\n            <tfoot class=\"tfoot\">\r\n              <tr>\r\n                <td>Grand total</td>\r\n                <td>{{Confidence.totalTiv | number:'1.0':'en-US'}}</td>\r\n                <td>{{Confidence.bldgTiv | number:'1.0':'en-US'}}</td>\r\n                <td>{{Confidence.occTiv | number:'1.0':'en-US'}}</td>\r\n              </tr>\r\n          </table>\r\n        </div>\r\n        <div class=\"tab-pane\" id=\"morph\">\r\n          \r\n          <table id=\"locationRating\" style=\"width: 801px;\" class=\"marg\">\r\n            <tr>\r\n              <th style=\"width:200px;\" class=\"customth th\">Country</th>\r\n              <th style=\"width:200px;\" class=\"customth th\">Building Confidence</th>\r\n              <th style=\"width:200px;\" class=\"customth th\">Occupancy Confidence</th>\r\n            </tr>\r\n            <ng-container *ngFor = \"let row of Confidence.locationConfidenceDtos\">\r\n            <tr class=\"tdRow\">\r\n              <td class=\"cusTd bld\">\r\n                {{row.country}}\r\n              </td>\r\n              <td class=\"cusTd bld\">\r\n                {{row.sumBldgRating}}%\r\n              </td>\r\n              <td class=\"cusTd bld\">\r\n                {{row.sumOccRating}}%\r\n              </td>\r\n            </tr>\r\n            <ng-container *ngFor = \"let stRow of row.stateLocationConfidenceDtos\">\r\n              <tr class=\"tdRow\">\r\n                <td class=\"cusTd padLeft\">\r\n                  <a [routerLink]=\"\"  (click)=\"SetStateFilter(stRow.state)\" >{{stRow.state}}</a>\r\n                </td>\r\n                <td class=\"cusTd\">\r\n                  {{stRow.sumBldgRating}}%\r\n                </td>\r\n                <td class=\"cusTd\">\r\n                  {{stRow.sumOccRating}}%\r\n                </td>\r\n              </tr>\r\n            </ng-container>\r\n            </ng-container>\r\n            <tfoot class=\"tfoot\">\r\n              <tr>\r\n                <td>Grand total</td>\r\n                <td>{{Confidence.sumBldgRating}}%</td>\r\n                <td>{{Confidence.sumOccRating}}%</td>\r\n              </tr>\r\n          </table>\r\n\r\n        </div>\r\n      </div>\r\n \r\n\r\n    </div>\r\n    <div style=\"padding-top: 8px;\"></div>\r\n    \r\n</div>\r\n","import { Component, OnInit, AfterViewInit, ViewChild, TemplateRef, OnDestroy, NgZone } from '@angular/core';\r\nimport { LocationBl } from '../../../Bl/location-bl';\r\nimport { ConversionService } from '../../../Services/conversion.service';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { LocationDto } from '../../../Models/Dtos/location-dto';\r\nimport { GridOptions } from \"ag-grid-community\";\r\nimport { OccupancyTypeDto } from '../../../Models/Dtos/occupancy-type-dto';\r\nimport { OccupancyLkpDto } from '../../../Models/Dtos/occupancy-lkp-dto';\r\nimport { FieldTypes } from '../../../Models/Enums/field-types';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { LookupBl} from '../../../Bl/lookup-bl';\r\nimport { AssumptionsDto } from '../../../models/Dtos/assumptions-dto';\r\nimport { StateDto} from '../../../models/Dtos/state-dto';\r\nimport { BuildingClassLkpDto } from '../../../Models/Dtos/bdlg-class-dto';\r\nimport { MessageService } from '../../../Services/message-service';\r\nimport { CountryDto } from '../../../Models/Dtos/country-dto';\r\nimport { Router } from '@angular/router';\r\nimport { ConversionDto } from '../../../Models/Dtos/conversion-dto';\r\nimport { ManagerBl } from '../../../Bl/manager-bl';\r\nimport { CheckBoxCellComponent } from '../../../AgGrid/checkbox-cell-component';\r\nimport { MediatorService } from '../../../Services/mediator.service';\r\nimport { SprinklerDto } from '../../../Models/Dtos/sprinkler-dto';\r\nimport { SummaryDto, UnknownDto } from '../../../Models/Dtos/summary-dto';\r\nimport { Subscription, timer } from 'rxjs';\r\n\r\nimport { FilterDto } from '../../../Models/Dtos/filter-dto';\r\nimport { ConfidenceDto } from '../../../models/Dtos/confidence-dto';\r\nimport { NotificationMessage } from 'src/app/Models/notification-message';\r\nimport { MessageType } from '@microsoft/signalr';\r\nimport { SignalrMessageType } from 'src/app/Models/Enums/message-type';\r\n\r\n@Component({\r\n  selector: 'app-locations',\r\n  templateUrl: './locations.component.html',\r\n  styleUrls: ['./locations.component.css']\r\n})\r\nexport class LocationsComponent implements OnInit, AfterViewInit, OnDestroy {\r\n\r\n  @ViewChild('state',{static: true}) stateElement : TemplateRef<any>;\r\n  @ViewChild('txt',{static: true}) txtElement : TemplateRef<any>;\r\n  @ViewChild('occ',{static: true}) occElement : TemplateRef<any>;\r\n  @ViewChild('occInput',{static: true}) occInputElement : TemplateRef<any>;\r\n  @ViewChild('building',{static: true}) buildingElement : TemplateRef<any>;\r\n  @ViewChild('buildingInput',{static: true}) buildingInputElement : TemplateRef<any>;\r\n  @ViewChild('country',{static: true}) countryElement : TemplateRef<any>;\r\n  @ViewChild('locName',{static: true}) locNameElement : TemplateRef<any>;\r\n  @ViewChild('county',{static: true}) countyElement : TemplateRef<any>;\r\n  @ViewChild('sprinkler',{static: true}) sprinklerElement : TemplateRef<any>;\r\n  @ViewChild('load',{static: true}) loadElement : TemplateRef<any>;\r\n  private _gridApi;\r\n  private _gridColumnApi;\r\n\r\n  public NoRowsTemplate =\r\n  \"<span style='font-weight:bold; color:#17a2b8; font-size:12px'>No Locations Records Returned</span>\";\r\n\r\n  private _selectedRowData : LocationDto;\r\n  public HasLoaded : boolean = false;\r\n  public HasCompleted : boolean = false;\r\n  public Options:GridOptions;\r\n  public LocOptions:GridOptions;\r\n  public Locations : LocationDto[];\r\n  public CommonOccupancies : OccupancyTypeDto[];\r\n  public Occupancies : OccupancyLkpDto[] = [];\r\n  public OccupancyCopies : OccupancyLkpDto[] = []; \r\n  public BuildingClassCopies : BuildingClassLkpDto[] = []; \r\n  public BuildingClass : BuildingClassLkpDto[] = [];\r\n  public Assumptions : AssumptionsDto[];\r\n  public SelectedRow : number;\r\n  public RowsLoaded : boolean;\r\n  public States :StateDto[];\r\n  public Countries : CountryDto[];\r\n  public Sprinklers : SprinklerDto[];\r\n  public SelectedStateId : number;\r\n  public SelectedCountryId : number;\r\n  public SameValCtr : number;\r\n  public Apply : boolean;\r\n  public SelectedTxt : string;\r\n  public TotalTiv : number;\r\n  public ModalTitle : string;\r\n  public SelectedOccupancyTypeId : number;\r\n  public IsUnknown : boolean = false;\r\n  public SelectedBuildingId : number;\r\n  private _selectedCol : FieldTypes;\r\n  public LocsWithNoOccupancyCtr : number;\r\n  public RowSelection : string = 'single';\r\n  public HasReconciled : boolean;\r\n  public ReconcileComplete : boolean;\r\n  public SelectedSprinklerId : number;\r\n  private _reconciled : LocationDto[] = [];\r\n  public FieldInput : string;\r\n  public Confidence : ConfidenceDto;\r\n\r\n  public SummaryBtn : string = \"Summary\";\r\n  public SummaryDto : SummaryDto;\r\n\r\n  private _progSub : Subscription;\r\n\r\n  public ProgressTxt : string;\r\n  public ProgressPercent : string = '0';\r\n  public ParsingStarted : boolean = false;\r\n  public ParsingHeader : string;\r\n  public CountryTxt : string;\r\n\r\n  public ColumnDefs = [\r\n    {headerName: '', field: 'reconciled', width:20, cellRendererFramework: CheckBoxCellComponent,\r\n    headerClass:'ag-custom-header',pinned: 'left', filter:true },\r\n   \r\n    {headerName: '#', field: 'uniqueId', width:30, headerClass:'ag-custom-header',pinned: 'left'},\r\n    {headerName: 'LocName', field: 'locName' , width:130,headerClass:'ag-custom-header',resizable: true,filter:true},\r\n    {headerName: 'Street', filter:true, field: 'address.streetName', width:130, headerClass:'ag-custom-header', resizable: true},\r\n    {headerName : 'StateCode', filter:true, field:'address.stateCode.code', width:100,headerClass:'ag-custom-header', resizable: true,editable: false },\r\n    {headerName : 'State', filter:true, colId: 'state', field:'address.state', width:100,headerClass:'ag-custom-header', resizable: true},\r\n    {headerName : 'County',filter:true,  field:'address.county', width:100,headerClass:'ag-custom-header', resizable: true},\r\n    {headerName : 'Country',filter:true,  field:'address.country', width:100,headerClass:'ag-custom-header', resizable: true},\r\n    {headerName : 'Building Input', filter:true, field:'buildingOrig', width:250,headerClass:'ag-custom-header', resizable: true},\r\n    \r\n    {headerName : 'Building Class', filter:true,  field:'buildingClass', width:250, headerClass:'ag-custom-header', resizable: true, valueGetter: function(params) {\r\n      return params.data.bldgClass.scheme + \" - \" + params.data.bldgClass.code + \" - \" + params.data.bldgClass.name;}},\r\n      {headerName : 'Building Rating',filter: 'agNumberColumnFilter', field:'buildingScore', width:230,headerClass:'ag-custom-header' , resizable: true},\r\n    \r\n      \r\n      {headerName : 'Occupancy Input',filter:true,  field:'occupancyOrig', width:250,headerClass:'ag-custom-header' , resizable: true},\r\n     \r\n      {headerName : 'Occupancy', filter:true,  field:'bldgClass',headerClass:'ag-custom-header', width:250,resizable: true, valueGetter: function(params) {\r\n    \r\n      return params.data.occupancyType.scheme + \" - \" + params.data.occupancyType.code + \" - \" + params.data.occupancyType.name;}},\r\n      {headerName : 'Occupancy Rating',filter: 'agNumberColumnFilter', field:'occupancyScore', width:230,headerClass:'ag-custom-header' , resizable: true},\r\n    \r\n      {headerName : 'Sprinkler Input',filter:true,  field:'sprinklerInput', width:50,headerClass:'ag-custom-header', resizable: true},\r\n      {headerName : 'Sprinkler',filter:true,  field:'sprinkler.value', width:50,headerClass:'ag-custom-header', resizable: true},\r\n      {headerName : 'YearBuilt', field:'yearBuilt', width:100,headerClass:'ag-custom-header' , resizable: true},\r\n      {headerName : 'YearUpgrad', field:'yearUpgrade', width:100,headerClass:'ag-custom-header' , resizable: true},\r\n      {headerName : 'Building', field:'building', width:120,headerClass:'ag-custom-header', resizable: true },\r\n      {headerName : 'BI', field:'bi', width:120,headerClass:'ag-custom-header', resizable: true },\r\n      {headerName : 'Content', field:'content', width:120,headerClass:'ag-custom-header', resizable: true},\r\n      {headerName : 'Inventory', field:'inventory', width:120,headerClass:'ag-custom-header' , resizable: true},\r\n      {headerName : 'Tiv Rank', field:'tivRank', width:85,headerClass:'ag-custom-header' , resizable: true},\r\n      {headerName : 'Tiv', field:'totalTiv', width:200,headerClass:'ag-custom-header' , resizable: true},\r\n  \r\n];\r\n\r\n  constructor(private _locationBl : LocationBl, private _conversionService : ConversionService\r\n    ,private _toastr: ToastrService, private _lookupBl : LookupBl,\r\n    private _modalService: NgbModal, private _messagingService : MessageService,\r\n    private _router : Router, private _managerBl : ManagerBl, \r\n    private _mediatorSerice : MediatorService, private ngZone: NgZone) { }\r\n\r\n    ngOnDestroy()\r\n    {\r\n      if (this._progSub)\r\n        this._progSub.unsubscribe();\r\n    }\r\n    ngOnInit()\r\n    {\r\n     this.initGrid();\r\n     this.loadLookups();\r\n\r\n     var conversion = this._conversionService.Get();\r\n\r\n     if (conversion.hasLocations)\r\n     {\r\n      this.HasLoaded = true;\r\n     }\r\n \r\n     this._mediatorSerice.ConvFailed.subscribe(x=>\r\n      {\r\n          this._modalService.dismissAll();\r\n      });\r\n\r\n      this._mediatorSerice.Progressed.subscribe(x=>\r\n        {\r\n          this.ngZone.run( () => {\r\n            this.ParsingStarted = true;\r\n            this.ProgressPercent = x.progress;\r\n            this.ProgressTxt= x.progress + '%  - ' + x.complete;\r\n         });\r\n           \r\n           // this._modalService.dismissAll();\r\n        });\r\n     this._mediatorSerice.Checked.subscribe(x=>\r\n      {\r\n        this.Checked();\r\n      });\r\n\r\n     var sub = this._mediatorSerice.Complete.subscribe(x=>\r\n      {\r\n          this._modalService.dismissAll();\r\n\r\n          this._mediatorSerice.Publish(new NotificationMessage ({ \r\n            messageType  : SignalrMessageType.Success, \r\n            subject: \"Locations Mapped\", \r\n            Refresh : false, \r\n            body : \"The Conversion has been Mapped\" }));\r\n\r\n            var conv = this._conversionService.Get();\r\n            conv.hasLocations = true;\r\n            this._conversionService.Set(conv);\r\n            this.HasLoaded = true;\r\n          //await this.GetMapped();\r\n          //load conversion from here \r\n          sub.unsubscribe();\r\n    });\r\n\r\n  }  \r\n   \r\n    public async Refresh()\r\n    {\r\n      await this.GetMapped();\r\n    }\r\n\r\n   \r\n    private async loadLookups()\r\n    {\r\n      var lookupsResponse = await this._lookupBl.GetLocationLookups();\r\n\r\n      if (lookupsResponse.status == true)\r\n      {\r\n        this.States = lookupsResponse.states;\r\n        this.Countries = lookupsResponse.countries;\r\n        this.Sprinklers = lookupsResponse.sprinklers;\r\n        lookupsResponse.lstBuildingClass.forEach(bldg=>\r\n        {\r\n            var lkpType = new BuildingClassLkpDto({\r\n\r\n              \"id\": bldg.id,\r\n              \"code\": bldg.code,\r\n              \"name\": bldg.name + ' (' + bldg.scheme + ' ' + bldg.code +')',\r\n              \"scheme\": bldg.scheme\r\n             });\r\n\r\n             this.BuildingClass.push(lkpType);\r\n        });\r\n\r\n        lookupsResponse.occupancies.forEach(occ=>\r\n        {\r\n           var lkpType = new OccupancyLkpDto({\r\n\r\n            \"id\": occ.id,\r\n            \"code\": occ.code,\r\n            \"name\": occ.name + ' (' + occ.scheme + ' ' + occ.code +')',\r\n            \"scheme\": occ.scheme\r\n           });\r\n              \r\n           this.Occupancies.push(lkpType);\r\n        });\r\n      }\r\n    }\r\n\r\n    ViewAssumptions(content) {\r\n      this._modalService.open(content, { ariaLabelledBy: 'modal-basic-title'});\r\n    }\r\n\r\n    ViewSummary(content)\r\n    {\r\n      this._modalService.open(content, { ariaLabelledBy: 'modal-basic-title', windowClass: 'summaryLrg'}); \r\n    }\r\n\r\n    CustomName()\r\n    {\r\n      this._selectedCol = FieldTypes.CustomLocName;\r\n      this._modalService.open(this.locNameElement, { ariaLabelledBy: 'modal-basic-title'});\r\n    }\r\n\r\n    onCellClicked(params)\r\n    {\r\n      this.Apply = false;\r\n      this.SelectedStateId = null;\r\n\r\n      var colName = params.colDef.headerName;\r\n      var value = params.value;\r\n\r\n      this._selectedRowData = params.data;\r\n\r\n      if (colName == \"StateCode\")\r\n      {\r\n        this.LoadStateValues(value);\r\n        this._modalService.open(this.stateElement, { ariaLabelledBy: 'modal-basic-title'});\r\n      }\r\n\r\n      if (colName == \"State\")\r\n      {\r\n        this.loadState();\r\n        this._modalService.open(this.txtElement, { ariaLabelledBy: 'modal-basic-title'});\r\n      }\r\n\r\n      if (colName === \"Street\")\r\n      {\r\n        this.loadStreet();\r\n        this._modalService.open(this.txtElement, { ariaLabelledBy: 'modal-basic-title'});\r\n      }\r\n\r\n      if (colName === \"Occupancy\")\r\n      {\r\n        this.loadOccupancyValues();\r\n        this._modalService.open(this.occElement, { ariaLabelledBy: 'modal-basic-title'});\r\n        \r\n      }\r\n\r\n      if (colName === \"Occupancy Input\")\r\n      {\r\n        this.FieldInput = this._selectedRowData.occupancyOrig;\r\n        this.SameValCtr = 0;\r\n        this.SelectedTxt = \"\";\r\n        document.getElementById(\"occOptions\").style.width = \"380px\";\r\n        this.loadOccupancyValues();\r\n        \r\n        //this._modalService.open(this.occInputElement, { ariaLabelledBy: 'modal-basic-title'});\r\n      }\r\n\r\n      if (colName === \"Building Class\")\r\n      {\r\n        this.loadBuildingValues();\r\n        //this._modalService.open(this.occInputElement, { ariaLabelledBy: 'modal-basic-title'});\r\n     \r\n        this._modalService.open(this.buildingElement, { ariaLabelledBy: 'modal-basic-title'});\r\n      }\r\n\r\n      if (colName === \"Building Input\")\r\n      {\r\n        \r\n        this.SameValCtr = 0;\r\n        this.SelectedTxt = \"\";\r\n        document.getElementById(\"buildingOptions\").style.width = \"380px\";\r\n        this.loadBuildingValues();\r\n        //this._modalService.open(this.buildingInputElement, { ariaLabelledBy: 'modal-basic-title'});\r\n      }\r\n\r\n      if (colName === \"LocName\")\r\n      {\r\n        this.loadLocName();\r\n        this._modalService.open(this.txtElement, { ariaLabelledBy: 'modal-basic-title'});\r\n      }\r\n\r\n      if (colName === \"County\")\r\n      {\r\n        this.loadCounty();\r\n        this._modalService.open(this.txtElement, { ariaLabelledBy: 'modal-basic-title'});\r\n      }\r\n\r\n      if (colName === \"Country\")\r\n      {\r\n        this.loadCountries();\r\n        this._modalService.open(this.countryElement, { ariaLabelledBy: 'modal-basic-title'});\r\n      }\r\n\r\n      if (colName === \"Sprinkler\")\r\n      {\r\n        this.loadSprinkler();\r\n        this._modalService.open(this.sprinklerElement, { ariaLabelledBy: 'modal-basic-title'});\r\n      }\r\n    }\r\n\r\n    loadSprinkler()\r\n    {\r\n      if (this._selectedRowData.sprinkler)\r\n      {\r\n         // var find = this.Sprinklers.find(x=> x.sprinklerId == this._selectedRowData.sprinkler.sprinklerId);\r\n          this.SelectedSprinklerId = this._selectedRowData.sprinkler.Id;\r\n          this.SameValCtr = this.Locations.filter(x=> x.sprinklerInput == this._selectedRowData.sprinklerInput).length;\r\n          \r\n      }\r\n      this.FieldInput = this._selectedRowData.sprinklerInput;\r\n      this.ModalTitle = \"Sprinkler\";\r\n      this._selectedCol = FieldTypes.Sprinkler;\r\n    }\r\n\r\n    loadCountries()\r\n    {\r\n      if (this._selectedRowData.address.country)\r\n      {\r\n        if (this._selectedRowData.address.country.length > 1)\r\n        {\r\n          var find = this.Countries.find(x=> x.isoCode == this._selectedRowData.address.country);\r\n          this.SelectedCountryId = find.countryId;\r\n          this.SameValCtr = this.Locations.filter(x=> x.address.country == this._selectedRowData.address.country).length;\r\n       \r\n        }\r\n      }\r\n      this.ModalTitle = \"Country\";\r\n      this._selectedCol = FieldTypes.Country;\r\n    }\r\n\r\n    loadState()\r\n    {\r\n      if (this._selectedRowData.address.state)\r\n      {\r\n        if (this._selectedRowData.address.state.length > 1)\r\n        {\r\n          this.SelectedTxt = this._selectedRowData.address.state;\r\n          this.SameValCtr = this.Locations.filter(x=> x.address.state == this._selectedRowData.address.state).length;\r\n        }\r\n      }\r\n      this.ModalTitle = \"State\";\r\n      this._selectedCol = FieldTypes.State;\r\n    }\r\n\r\n    loadStreet()\r\n    {\r\n      this.SelectedTxt = this._selectedRowData.address.streetName;\r\n      this.SameValCtr = this.Locations.filter(x=> x.address.streetName == this._selectedRowData.address.streetName).length;\r\n      this.ModalTitle = \"Street Name\";\r\n      this._selectedCol = FieldTypes.Street;\r\n    }\r\n\r\n    loadLocName()\r\n    {\r\n      this.SelectedTxt = this._selectedRowData.locName;\r\n      this.SameValCtr = this.Locations.filter(x=> x.locName == this._selectedRowData.locName).length;\r\n      this.ModalTitle = \"Loc Name\";\r\n      this._selectedCol = FieldTypes.LocName;\r\n    }\r\n    \r\n    loadCounty()\r\n    {\r\n      this.SelectedTxt = this._selectedRowData.address.county;\r\n      this.SameValCtr = this.Locations.filter(x=> x.address.county == this.SelectedTxt).length;\r\n      this.ModalTitle = \"County\";\r\n      this._selectedCol = FieldTypes.County;\r\n    }\r\n\r\n    LoadStateValues(selectedState : string)\r\n    {\r\n      if (selectedState != null)\r\n      {\r\n       var selected = this.States.find(x=> x.code == selectedState);\r\n      \r\n       this.SelectedStateId = selected.id;\r\n\r\n       var filtered  = this.Locations.filter(x=> x.address.stateCode !== null && x.address.stateCode.id == this.SelectedStateId);\r\n\r\n       this.SameValCtr = filtered.length;\r\n     \r\n      }\r\n    }\r\n\r\n    loadOccupancyValues()\r\n    {\r\n      this.OccupancyCopies = [];\r\n      this.Occupancies.forEach(x=>\r\n      {\r\n        this.OccupancyCopies.push(x);\r\n      });\r\n\r\n      var selected = this.Occupancies.find(x=> x.id == this._selectedRowData.occupancyType.id);\r\n\r\n      this.SelectedOccupancyTypeId = this._selectedRowData.occupancyType.id;\r\n\r\n      this.SameValCtr = this.Locations.filter(x=> x.occupancyOrig == this._selectedRowData.occupancyOrig).length;\r\n\r\n      this.LocsWithNoOccupancyCtr = this.Locations.filter(x=> x.occupancyType.code == 0).length;\r\n      \r\n      this._selectedCol = FieldTypes.Occupancy;\r\n      this.FieldInput = this._selectedRowData.occupancyOrig;\r\n      if (selected.id == 1)\r\n      {\r\n        this.IsUnknown = true;\r\n      }\r\n    }\r\n\r\n    loadBuildingValues()\r\n    {\r\n      this.BuildingClassCopies = [];\r\n      this.BuildingClass.forEach(x=>\r\n      {\r\n        this.BuildingClassCopies.push(x);\r\n      });\r\n\r\n      var selected = this.BuildingClassCopies.find(x=> x.id == this._selectedRowData.bldgClass.id);\r\n      this.SelectedBuildingId = selected.id;\r\n\r\n      this.SameValCtr = this.Locations.filter(x=> x.buildingOrig == this._selectedRowData.buildingOrig).length;\r\n      \r\n      this.FieldInput = this._selectedRowData.buildingOrig;\r\n\r\n      this._selectedCol = FieldTypes.BuildingClass;\r\n    }\r\n\r\n    public CloseModal()\r\n    {\r\n      this.IsUnknown = false;\r\n      this._modalService.dismissAll();\r\n    }\r\n\r\n    public SetStateFilter(state : string)\r\n    {\r\n      var stateFilter = {\r\n        state: {\r\n          filterType: 'text',\r\n          type: 'equals',\r\n          filter: state,\r\n        }\r\n      }\r\n\r\n      this.Options.api.setFilterModel(stateFilter);     \r\n      document.getElementById(\"morph-tab\").className=\"nav-link\";\r\n      document.getElementById(\"morph\").className = \"tab-pane\";\r\n      document.getElementById(\"locations\").className = \"tab-pane\";\r\n      document.getElementById(\"locations-tab\").className=\"nav-link\";\r\n      document.getElementById(\"mapping-tab\").className=\"nav-link active\";\r\n      document.getElementById(\"mappings\").className = \"tab-pane active\";\r\n    }\r\n\r\n    saveFilterModel() {\r\n      var savedFilterModel = this._gridApi.getFilterModel();\r\n      var keys = Object.keys(savedFilterModel);      \r\n    }\r\n\r\n    public async ApplyBuildingInputValue()\r\n    {\r\n      this._selectedCol = FieldTypes.BuildingInput;\r\n      this.ApplyValue(true, false);\r\n    }\r\n\r\n    public async ApplyOccInputValue()\r\n    {\r\n      this._selectedCol = FieldTypes.OccupancyInput;\r\n      this.ApplyValue(true, false);\r\n    }\r\n\r\n    public async ApplyValue(forAllLocations : boolean, forUnknown : boolean = false)\r\n    {\r\n      if (this._selectedCol == FieldTypes.Street)\r\n      {\r\n        await this.applyStreetName(forAllLocations);\r\n      }\r\n\r\n      if (this._selectedCol == FieldTypes.Country)\r\n      {\r\n        await this.applyCountry(forAllLocations);\r\n      }\r\n\r\n      if (this._selectedCol == FieldTypes.State)\r\n        this.applyState(forAllLocations);\r\n      \r\n      if (this._selectedCol == FieldTypes.OccupancyInput)\r\n        this.applyOccInput();\r\n\r\n      if (this._selectedCol == FieldTypes.Occupancy)\r\n        this.applyOcc(forAllLocations,forUnknown);\r\n      \r\n      if (this._selectedCol == FieldTypes.BuildingInput)\r\n        this.applyBuildingInput();\r\n\r\n      if (this._selectedCol == FieldTypes.BuildingClass)\r\n        this.applyBuilding(forAllLocations);\r\n\r\n        if (this._selectedCol == FieldTypes.County)\r\n        this.applyCounty(forAllLocations);\r\n      \r\n      if (this._selectedCol == FieldTypes.LocName)\r\n        this.applyLocName(forAllLocations, false);\r\n\r\n      if (this._selectedCol == FieldTypes.CustomLocName)\r\n      {\r\n        this._selectedCol = FieldTypes.LocName;\r\n        this.applyLocName(true, true);\r\n      }\r\n\r\n      if (this._selectedCol == FieldTypes.Sprinkler)\r\n      {\r\n        this._selectedCol = FieldTypes.Sprinkler;\r\n        this.applySprinkler(forAllLocations, false);\r\n      }\r\n        \r\n      this._modalService.dismissAll();\r\n    }\r\n\r\n    private async applyState(forAllLocations : boolean)\r\n    {\r\n      var locs : LocationDto[] = [];\r\n      if (forAllLocations)\r\n      {\r\n        var filtered = this.Locations.filter(x=> x.address.state == this._selectedRowData.address.state);\r\n\r\n        filtered.forEach(x=> \r\n          {\r\n              locs.push(x);\r\n          });\r\n      }\r\n      else\r\n        locs.push(this._selectedRowData);\r\n\r\n        //var fieldType = this.FieldType(\"STATE\");\r\n        var fieldType = FieldTypes.State;\r\n        await this.applyCommon(locs, this.SelectedTxt, fieldType);\r\n    }\r\n\r\n    private async applyCountry(forAllLocation : boolean)\r\n    {\r\n      var locs : LocationDto[] = [];\r\n      \r\n      if (forAllLocation)\r\n      {\r\n        var find = this.Countries.find(x=> x.isoCode == this._selectedRowData.address.country);\r\n\r\n        var filtered = this.Locations.filter(x=> x.address.country == this._selectedRowData.address.country);\r\n      \r\n        var find = this.Countries.find(x=> x.countryId == this.SelectedCountryId);\r\n        filtered.forEach(x=> \r\n        {\r\n            x.address.country = find.isoCode;\r\n            locs.push(x);\r\n        });\r\n      }\r\n      else\r\n        locs.push(this._selectedRowData);\r\n        var find = this.Countries.find(x=> x.countryId == this.SelectedCountryId);\r\n\r\n        await this.applyCommon(locs, find.isoCode, FieldTypes.Country);\r\n    }\r\n\r\n    private async applyStreetName(forAllLocations : boolean)\r\n    {\r\n      var locs : LocationDto[] = [];\r\n\r\n      if (forAllLocations)\r\n      {\r\n        var filtered = this.Locations.filter(x=> x.address.streetName == this._selectedRowData.address.streetName);\r\n\r\n        filtered.forEach(x=> \r\n        {\r\n            locs.push(x);\r\n        });\r\n      }\r\n      else\r\n        locs.push(this._selectedRowData);\r\n      \r\n      //var fieldType = this.FieldType(\"STREET\");\r\n      var fieldType = FieldTypes.Street;\r\n      await this.applyCommon(locs, this.SelectedTxt, fieldType);\r\n    }\r\n\r\n    private async applyCounty(forAllLocations : boolean)\r\n    {\r\n      var locs : LocationDto[] = [];\r\n\r\n      if (forAllLocations)\r\n      {\r\n        var filtered = this.Locations.filter(x=> x.address.county == this._selectedRowData.address.county);\r\n\r\n        filtered.forEach(x=> \r\n        {\r\n            locs.push(x);\r\n        });\r\n      }\r\n      else\r\n        locs.push(this._selectedRowData);\r\n      \r\n      var fieldType = FieldTypes.County;\r\n\r\n      await this.applyCommon(locs, this.SelectedTxt, fieldType);\r\n    }\r\n\r\n    private async applyLocName(forAllLocations : boolean, applyToAll : boolean = false)\r\n    {\r\n      var locs : LocationDto[] = [];\r\n\r\n      if (forAllLocations ){\r\n\r\n        var filtered : LocationDto[];\r\n\r\n        if (applyToAll)\r\n          filtered = this.Locations;\r\n        else\r\n          filtered = this.Locations.filter(x=> x.locName == this._selectedRowData.locName);\r\n\r\n        filtered.forEach(x=> \r\n        {\r\n            locs.push(x);\r\n        });\r\n      }\r\n      else\r\n        locs.push(this._selectedRowData);\r\n\r\n        var fieldType = this._selectedCol;\r\n        await this.applyCommon(locs, this.SelectedTxt, fieldType);\r\n    }\r\n\r\n    public async ApplyStateCode(forAllLocations : boolean)\r\n    {\r\n      var locs : LocationDto[] = [];\r\n      \r\n      var stateCodeDto = this.States.find(x=> x.id == this.SelectedStateId);\r\n  \r\n      if (forAllLocations)\r\n      {\r\n        var filtered  = this.Locations.filter(x=> x.address.stateCode.id == this._selectedRowData.address.stateCode.id);\r\n\r\n        filtered.forEach(x=> \r\n        {\r\n            x.address.stateCode = stateCodeDto;\r\n            locs.push(x);\r\n        });\r\n      }\r\n      else{\r\n        this._selectedRowData.address.stateCode = stateCodeDto;\r\n        locs.push(this._selectedRowData);\r\n      }\r\n      var fieldType = FieldTypes.StCode;\r\n\r\n      await this.applyCommon(locs, stateCodeDto.code, fieldType);\r\n    }\r\n\r\n    private async applySprinkler(forAllLocations : boolean, applyToAll : boolean = false)\r\n    {\r\n      var locs : LocationDto[] = [];\r\n      //did i break this code\r\n      var sprinklerDto = this.Sprinklers.find(x=> x.Id == this.SelectedSprinklerId);\r\n  \r\n      if (forAllLocations)\r\n      {\r\n        var filtered  = this.Locations.filter(x=> x.sprinklerInput == this._selectedRowData.sprinklerInput);\r\n\r\n        filtered.forEach(x=> \r\n        {\r\n            x.sprinkler = sprinklerDto;\r\n            locs.push(x);\r\n        });\r\n      }\r\n      else{\r\n        this._selectedRowData.sprinkler = sprinklerDto;\r\n        locs.push(this._selectedRowData);\r\n      }\r\n      var fieldType = FieldTypes.Sprinkler;\r\n\r\n      await this.applyCommon(locs, sprinklerDto.Id.toString(), fieldType);\r\n    }\r\n\r\n    public Reconcile()\r\n    {\r\n      var alreadyReconciled = this.Locations.filter(x=> !this._reconciled.includes(x));\r\n      var locs = alreadyReconciled.filter(x=> x.reconciled == true);\r\n      this.applyCommon(locs, \"true\", FieldTypes.Reconcile, false);\r\n\r\n      var defaultFilter = {\r\n        reconciled: {\r\n          filterType: 'text',\r\n          type: 'equals',\r\n          filter: 'false',\r\n        }\r\n      };\r\n\r\n      this.Options.api.setFilterModel(null);\r\n      this.Options.api.setFilterModel(defaultFilter);\r\n\r\n      locs.forEach(x=>\r\n      {\r\n          this._reconciled.push(x);\r\n      });\r\n\r\n      this.HasReconciled = false;\r\n    }\r\n\r\n    private async applyCommon(locs : LocationDto[], val : string, fieldType : FieldTypes, addToLoadVals : boolean = false)\r\n    {\r\n\r\n      this._messagingService.LoadingMsg(true);\r\n      var conversion = this._conversionService.Get();\r\n\r\n      var response = await this._locationBl.UpdateLocations(conversion.convId, locs, val, fieldType, addToLoadVals, this.SummaryDto);\r\n\r\n      if (response.status)\r\n      {\r\n  \r\n        this.ReconcileComplete = response.reconciled;\r\n        debugger;\r\n        this.initSummary(response.summary);\r\n        this.agGrid_UpdateLocs(response.locations);\r\n      }\r\n\r\n      this._messagingService.LoadingMsg(false);\r\n        \r\n    }\r\n    \r\n   onBuildingTxtChanged()\r\n   {\r\n    this.Apply = false;\r\n\r\n    if (!this.SelectedTxt)\r\n    {\r\n      return;\r\n    }\r\n\r\n    this.SameValCtr = this.Locations.filter(x=> x.buildingOrig && x.buildingOrig.toLowerCase().includes(this.SelectedTxt)).length;\r\n    this.filterInput(2);\r\n    this.Apply = true;\r\n   }\r\n\r\n   onOccTxtChanged()\r\n   {\r\n    this.Apply = false;\r\n   \r\n    if (!this.SelectedTxt)\r\n    {\r\n      return;\r\n    }\r\n\r\n    this.SameValCtr = this.Locations.filter(x=> x.occupancyOrig && x.occupancyOrig.toLowerCase().includes(this.SelectedTxt)).length;\r\n    this.filterInput(1);\r\n    this.Apply = true;\r\n   } \r\n   onTxtChanged()\r\n   {\r\n     this.Apply = false;\r\n\r\n     if (this._selectedCol == FieldTypes.Street)\r\n     {\r\n      if (this._selectedRowData.address.streetName != this.SelectedTxt)\r\n        this.Apply = true;\r\n     }\r\n\r\n     if (this._selectedCol == FieldTypes.State)\r\n     {\r\n      if (this._selectedRowData.address.state != this.SelectedTxt)\r\n        this.Apply = true;\r\n     }\r\n\r\n     if (this._selectedCol == FieldTypes.LocName)\r\n     {\r\n      if (this._selectedRowData.locName != this.SelectedTxt)\r\n        this.Apply = true;\r\n     }\r\n\r\n     if (this._selectedCol == FieldTypes.County)\r\n     {\r\n      if (this._selectedRowData.address.county != this.SelectedTxt)\r\n        this.Apply = true;\r\n     }\r\n\r\n     if (this._selectedCol == FieldTypes.CustomLocName)\r\n      this.Apply = true;\r\n   }\r\n\r\n  onStateChange()\r\n  {\r\n    if (this._selectedRowData.address.stateCode == null && this.SelectedStateId)\r\n    {\r\n      this.Apply = true;\r\n      return;\r\n    }\r\n    if (this._selectedRowData.address.stateCode.id != this.SelectedStateId)\r\n      this.Apply = true;\r\n      else\r\n      this.Apply = false;\r\n  }\r\n\r\n    onCountryChange()\r\n    {\r\n      var country = this.Countries.find(x=> x.countryId == this.SelectedCountryId);\r\n\r\n      if (this._selectedRowData.address.country == null && this.SelectedCountryId)\r\n      {\r\n        this.Apply = true;\r\n        return;\r\n      }\r\n      if (this._selectedRowData.address.country != country.isoCode)\r\n        this.Apply = true;\r\n      else\r\n        this.Apply = false;\r\n    }\r\n\r\n    onSprinklerChange()\r\n    {\r\n      var sprinkler = this.Sprinklers.find(x=> x.Id == this.SelectedSprinklerId);\r\n\r\n      if (this.SelectedSprinklerId)\r\n      {\r\n        this.Apply = true;\r\n        return;\r\n      }\r\n      if (this._selectedRowData.sprinkler.Id != sprinkler.Id)\r\n        this.Apply = true;\r\n      else\r\n        this.Apply = false;\r\n    }\r\n\r\n    onBuildingChange()\r\n    {\r\n      if (!this.SelectedBuildingId)\r\n      {\r\n        this.Apply = false;\r\n        return;\r\n      }\r\n\r\n      if (this._selectedRowData.bldgClass.id == this.SelectedBuildingId)\r\n        this.Apply = false;\r\n      else\r\n        this.Apply = true;\r\n    }\r\n\r\n    onOccChange()\r\n    {\r\n      if (!this.SelectedOccupancyTypeId)\r\n      {\r\n        this.Apply = false\r\n        return;\r\n      }\r\n      if (this._selectedRowData.occupancyType.id == this.SelectedOccupancyTypeId)\r\n        this.Apply = false;\r\n      else\r\n        this.Apply = true;\r\n    }\r\n\r\n    onUnknownChanged(txt : string, type : number)\r\n    {\r\n      if (txt)\r\n      {\r\n        this.SummaryDto.type = type;\r\n      }\r\n      else{\r\n        this.SummaryDto.type = 0;\r\n      }\r\n    }\r\n\r\n    onRatingChanged(txt : string, type : number)\r\n    {\r\n      if (txt)\r\n      {\r\n        if (type ==1){\r\n          this.SummaryDto.selectedOccupancyRating = txt;\r\n          \r\n          this.SummaryDto.ratingType = 1;\r\n        }\r\n          else{\r\n            this.SummaryDto.selectedBuildingRating = txt;\r\n            this.SummaryDto.ratingType = 2;\r\n          }\r\n      }\r\n      else{\r\n        this.SummaryDto.ratingType = 0;\r\n      }\r\n    }\r\n\r\n    onDisChanged(txt : string, type : number)\r\n    {\r\n      if (txt)\r\n      {\r\n        this.SummaryDto.distinctInputs.disType = type;\r\n      }\r\n      else{\r\n        this.SummaryDto.distinctInputs.disType = 0;\r\n      }\r\n    }\r\n\r\n    filterDisabled() : boolean\r\n    {\r\n        return this.SummaryDto.type == 0;\r\n    }\r\n\r\n    distinctFilterDisabled() : boolean\r\n    {\r\n        return this.SummaryDto.distinctInputs.disType == 0;\r\n    }\r\n\r\n    ratingFilterDisabled() : boolean\r\n    {\r\n        return this.SummaryDto.ratingType == 0;\r\n    }\r\n\r\n    ratingFilter()\r\n    {\r\n      var selected : FilterDto;\r\n      var ratingFilter : any;\r\n  \r\n      switch (this.SummaryDto.ratingType)\r\n      {\r\n        case 1 :\r\n          var t = this.SummaryDto.selectedOccupancyRating;\r\n          var rating: number = +t;\r\n          rating = rating / 100;\r\n       \r\n          ratingFilter = {\r\n            occupancyScore: {\r\n              filterType : 'number',\r\n              type: 'lessThanOrEqual',\r\n              filter: rating\r\n            }\r\n          };\r\n          break;\r\n        case 2 :\r\n          var t = this.SummaryDto.selectedBuildingRating;\r\n          var rating: number = +t;\r\n          rating = rating / 100;\r\n          ratingFilter = {\r\n            buildingScore: {\r\n              filterType: 'number',\r\n              type: 'lessThanOrEqual',\r\n              filter: rating\r\n            }\r\n          };\r\n          break;\r\n      }\r\n\r\n      this.Options.api.setFilterModel(null);\r\n      this.Options.api.setFilterModel(ratingFilter);\r\n      this.CloseModal();\r\n    }\r\n\r\n    distinctFilter()\r\n    {\r\n \r\n      var selected : FilterDto;\r\n      var unknownFilter : any;\r\n      switch (this.SummaryDto.distinctInputs.disType)\r\n      {\r\n        case 1 :\r\n          selected = this.SummaryDto.distinctInputs.occupancy.find(x=> x.text == this.SummaryDto.distinctInputs.selectedDisOccupancy);\r\n          unknownFilter = {\r\n            occupancyOrig: {\r\n              filterType: 'text',\r\n              type: 'contains',\r\n              filter: selected.text\r\n            }\r\n          };\r\n          break;\r\n        case 2 :\r\n          selected = this.SummaryDto.distinctInputs.building.find(x=> x.text == this.SummaryDto.distinctInputs.selectedDisBuilding);\r\n          unknownFilter = {\r\n            buildingOrig: {\r\n              filterType: 'text',\r\n              type: 'contains',\r\n              filter: selected.text\r\n            }\r\n          };\r\n          break;\r\n        case 3 :\r\n          selected = this.SummaryDto.distinctInputs.sprinkler.find(x=> x.text == this.SummaryDto.distinctInputs.selectedDisSprinkler);\r\n          unknownFilter = {\r\n            sprinklerInput: {\r\n              filterType: 'text',\r\n              type: 'contains',\r\n              filter: selected.text\r\n            }\r\n\r\n          };\r\n          break;\r\n      }\r\n      this.Options.api.setFilterModel(null);\r\n      this.Options.api.setFilterModel(unknownFilter);\r\n      this.CloseModal();\r\n    }\r\n\r\n    filter()\r\n    {\r\n      var selected : UnknownDto;\r\n\r\n      var unknownFilter : any;\r\n      switch (this.SummaryDto.type)\r\n      {\r\n        case 1 :\r\n          selected = this.SummaryDto.occupancy.find(x=> x.text == this.SummaryDto.selectedOccupancy);\r\n          unknownFilter = {\r\n            occupancyOrig: {\r\n              filterType: 'text',\r\n              type: 'contains',\r\n              filter: selected.text,\r\n            }\r\n          };\r\n          break;\r\n        case 2 :\r\n          selected = this.SummaryDto.buildingClass.find(x=> x.text == this.SummaryDto.selectedBuilding);\r\n          unknownFilter = {\r\n            buildingOrig: {\r\n              filterType: 'text',\r\n              type: 'contains',\r\n              filter: selected.text,\r\n            }\r\n          };\r\n          break;\r\n        case 3 :\r\n          selected = this.SummaryDto.sprinkler.find(x=> x.text == this.SummaryDto.selectedSprinkler);\r\n          unknownFilter = {\r\n            sprinklerInput: {\r\n              filterType: 'text',\r\n              type: 'contains',\r\n              filter: selected.text,\r\n            }\r\n\r\n          };\r\n          break;\r\n      }\r\n      this.Options.api.setFilterModel(null);\r\n      this.Options.api.setFilterModel(unknownFilter);\r\n      this.CloseModal();\r\n      \r\n      \r\n    }\r\n\r\n    filterInput(type : number)\r\n    {\r\n\r\n      var origFilter : any;\r\n      switch (type)\r\n      {\r\n        case 1 :\r\n          origFilter = {\r\n            occupancyOrig: {\r\n              filterType: 'text',\r\n              type: 'contains',\r\n              filter: this.SelectedTxt,\r\n            }\r\n          };\r\n          break;\r\n        case 2 :\r\n          origFilter = {\r\n            buildingOrig: {\r\n              filterType: 'text',\r\n              type: 'contains',\r\n              filter: this.SelectedTxt,\r\n            }\r\n          };\r\n          break;\r\n      }\r\n      this.Options.api.setFilterModel(null);\r\n      this.Options.api.setFilterModel(origFilter);\r\n      //this.CloseModal();\r\n    }\r\n\r\n    onFirstDataRendered()\r\n    {\r\n      this._reconciled = this.Locations.filter(x=> x.reconciled);\r\n\r\n     this.resetFilters();\r\n    }\r\n\r\n    resetFilters()\r\n    {\r\n      var defaultFilter = {\r\n        reconciled: {\r\n          filterType: 'text',\r\n          type: 'equals',\r\n          filter: 'false',\r\n        }\r\n      };\r\n\r\n      this.Options.api.setFilterModel(null);\r\n      this.Options.api.setFilterModel(defaultFilter);\r\n    }\r\n\r\n    onGridReady(params) {\r\n      \r\n      this._gridApi = params.api;\r\n      this._gridColumnApi = params.columnApi;\r\n\r\n      //params.api.setDomLayout('autoHeight');\r\n      this.resizeColumns();\r\n    }\r\n\r\n  \r\n\r\nprivate initGrid()\r\n{\r\n  this.Options = <GridOptions>{\r\n  \r\n    getRowStyle: (params) => {\r\n      if (params.node.rowIndex % 2 === 0) {\r\n        return {background: '#e7e7e7'};\r\n      }\r\n    },\r\n    pagination: true,\r\n    paginationPageSize: 50,\r\n    cacheBlockSize: 50\r\n  };\r\n}\r\n\r\nprivate resizeColumns()\r\n{\r\n  if (this._gridApi == null)\r\n  {\r\n    return;\r\n  }\r\n  var allColumnIds = [];\r\n  this._gridColumnApi.getAllColumns().forEach(function(column) {\r\n    allColumnIds.push(column.colId);\r\n  });\r\n  this._gridColumnApi.autoSizeColumns(allColumnIds, false);\r\n}\r\n \r\n  async Export()\r\n  {\r\n    this._messagingService.LoadingMsg(true);\r\n    this.ParsingHeader = \"Exporting Conversion\";\r\n    this.ParsingStarted = true;\r\n    this.ProgressPercent = \"0%\";\r\n    this.ProgressTxt= \"0% Exported\";\r\n\r\n    this._modalService.open(this.loadElement, { ariaLabelledBy: 'modal-basic-title', backdrop: 'static', keyboard: false});\r\n    //in here we must open the popup\r\n    let progressTimer = timer(6000, 6000);\r\n\r\n   \r\n\r\n    var conversion = this._conversionService.Get();\r\n\r\n    var exportResponse = await this._locationBl.Export(conversion.convId);\r\n\r\n    if (exportResponse.status)\r\n      this.Download(conversion);\r\n\r\n   \r\n    this._modalService.dismissAll();\r\n\r\n    this._messagingService.LoadingMsg(false);\r\n  }\r\n\r\n  private Download(conversion : ConversionDto)\r\n  {\r\n      this._managerBl.Download(conversion);\r\n  }\r\n\r\n  SetClickedRow = function(index){\r\n    this.SelectedRow = index;\r\n  }\r\n\r\n\r\n  async GetMapped()\r\n  {\r\n\r\n    this._messagingService.LoadingMsg(true);\r\n\r\n    var conversion = this._conversionService.Get();\r\n\r\n    this.ParsingHeader = \"Retrieving Locations\";\r\n    this.ParsingStarted = true;\r\n    this.ProgressPercent = \"0%\";\r\n    this.ProgressTxt= \"0% of Locations Mapped\";\r\n\r\n    this._modalService.open(this.loadElement, { ariaLabelledBy: 'modal-basic-title', backdrop: 'static', keyboard: false});\r\n    this.HasLoaded = false;\r\n\r\n    var getMappedConversionResponse = await this._locationBl.GetMapped(conversion.convId);\r\n\r\n    if (!getMappedConversionResponse.status) //error occured\r\n    {\r\n      this._messagingService.LoadingMsg(false);\r\n      this._modalService.dismissAll();\r\n      return;\r\n    }\r\n\r\n    this.HasCompleted = true;\r\n    this._messagingService.LoadingMsg(false);\r\n\r\n    //retrieved successfully\r\n    this.CountryTxt = getMappedConversionResponse.country;\r\n    conversion.assumptions = getMappedConversionResponse.assumptions;\r\n    this.Assumptions = getMappedConversionResponse.assumptions;\r\n    this.Confidence = getMappedConversionResponse.confidence;\r\n    conversion.hasLocations = true;\r\n    this._conversionService.Set(conversion);\r\n  \r\n    this.Locations = [];\r\n    this.Locations = await this._locationBl.Get2(conversion.convId, getMappedConversionResponse.rowCount);\r\n\r\n \r\n    this.TotalTiv = 0;\r\n    this.Locations.forEach(tp=>\r\n    {\r\n      this.TotalTiv += tp.totalTiv;\r\n    })\r\n\r\n    this.TotalTiv = Math.round(this.TotalTiv);\r\n\r\n    var summaryResponse = this._managerBl.GetSummary(conversion.convId).then(x=>\r\n    {\r\n     this.initSummary(x.summary);\r\n     this.HasLoaded = true;\r\n    });\r\n  \r\n    this._modalService.dismissAll();\r\n  }\r\n  async Load()\r\n  {\r\n    var conversion = this._conversionService.Get();\r\n\r\n    var hasLocations = conversion.hasLocations;\r\n\r\n    if (hasLocations)\r\n    {\r\n      await this.GetMapped();\r\n      return;\r\n    }\r\n\r\n    this._messagingService.LoadingMsg(true);\r\n    this.ParsingHeader = \"Mapping Locations\";\r\n    this.ParsingStarted = true;\r\n    this.ProgressPercent = \"0%\";\r\n    this.ProgressTxt= \"0% of Locations mapped\";\r\n    this._modalService.open(this.loadElement, { ariaLabelledBy: 'modal-basic-title', backdrop: 'static', keyboard: false});\r\n    //in here we must open the popup\r\n    this.HasLoaded = false;\r\n    //let progressTimer = timer(5000, 5000);\r\n\r\n    //this._progSub = progressTimer.subscribe(() => {\r\n      ////call api to\r\n     // var obs = this._locationBl.GetProgress(conversion.convId, 1);\r\n\r\n     // obs.subscribe(x => {\r\n      //  this.ParsingStarted = true;\r\n     //   this.ParsingHeader = x.title;\r\n     //   this.ProgressPercent = x.percentageText;\r\n     //  this.ProgressTxt = x.percentageText + '%  - ' + x.completeText;\r\n     // });\r\n\r\n    //});\r\n\r\n \r\n    var mapLocationsResponse = await this._locationBl.MapLocations(conversion.convId);\r\n\r\n    if (!mapLocationsResponse.status)\r\n    {\r\n      this._messagingService.LoadingMsg(false);\r\n      this._modalService.dismissAll();\r\n      return;\r\n    }\r\n   \r\n    //this.CountryTxt = mapLocationsResponse.country;\r\n  \r\n    //var tempLocs: LocationDto[] = [];\r\n    //conversion.assumptions = mapLocationsResponse.assumptions;\r\n    //this.Assumptions = conversion.assumptions;\r\n    //this.CommonOccupancies = mapLocationsResponse.commonOccupancies;\r\n    //this.Confidence = mapLocationsResponse.confidence;\r\n\r\n//    this._conversionService.Set(conversion);\r\n  //  this.Locations = [];\r\n\r\n    //this.Locations = await this._locationBl.Get2(conversion.convId, mapLocationsResponse.rowCount);\r\n\r\n    //this.TotalTiv = 0;\r\n    //this.Locations.forEach(tp=>\r\n    //{\r\n     // this.TotalTiv += tp.totalTiv;\r\n    //})\r\n\r\n    //this.TotalTiv = Math.round(this.TotalTiv);\r\n\r\n  //ignore this stuff it was alreadyu commented out\r\n   //// var t = this._locationBl.Get(conversion.convId, mapLocationsResponse.rowCount).subscribe(locationVals=>\r\n    //  {\r\n      //  locationVals.forEach(async locArr=>\r\n      //    {\r\n        //    locArr.forEach(x=>\r\n        //    {\r\n         //     tempLocs.push(x);            \r\n         //   });\r\n\r\n          //  this.Locations = tempLocs;\r\n         //   this.TotalTiv = 0;\r\n          //  tempLocs.forEach(tp=>\r\n          //  {\r\n          //    this.TotalTiv += tp.totalTiv;\r\n          //  })\r\n\r\n          //  this.TotalTiv = Math.round(this.TotalTiv);\r\n\r\n            \r\n         // });\r\n\r\n\r\n         //we will need this summary part\r\n  //  var summaryResponse = this._managerBl.GetSummary(conversion.convId).then(x=>\r\n   // {\r\n     // this.initSummary(x.summary);\r\n      //this.HasLoaded = true;\r\n           \r\n    //});\r\n    //this._progSub.unsubscribe();\r\n    //this._modalService.dismissAll();\r\n          \r\n    //this._locationBl.DeleteProgress(conversion.convId, 1);\r\n  this._messagingService.LoadingMsg(false);\r\n  } \r\n\r\n  private initSummary(summaryDto : SummaryDto)\r\n  {\r\n    var summaryCtr = summaryDto.count;\r\n\r\n    this.SummaryBtn = \"Filters - \" + summaryCtr.toString();\r\n    this.SummaryDto = summaryDto;\r\n  }\r\n\r\n  private async applyBuilding(forAllLocations : boolean)\r\n  {\r\n    var addToLoadVals : boolean = true;\r\n    var fieldType = FieldTypes.BuildingClass;\r\n\r\n    var locs : LocationDto[];\r\n\r\n    if (forAllLocations)\r\n        locs = this.Locations.filter(x=> x.buildingOrig == this._selectedRowData.buildingOrig);\r\n    else\r\n      locs = this.Locations.filter(x=> x.locId == this._selectedRowData.locId);\r\n    \r\n    var fieldType = this._selectedCol;\r\n\r\n    await this.applyCommon(locs, this.SelectedBuildingId.toString(), fieldType, addToLoadVals);\r\n  }\r\n\r\n  private async applyBuildingInput()\r\n  {\r\n    var addToLoadVals : boolean = false;\r\n    var locs : LocationDto[];\r\n    locs = this.Locations.filter(x=> x.buildingOrig && x.buildingOrig.toLowerCase().includes(this.SelectedTxt));\r\n    \r\n    addToLoadVals = true;\r\n\r\n    var fieldType = FieldTypes.BuildingClass;\r\n\r\n    await this.applyCommon(locs, this.SelectedBuildingId.toString(), fieldType, addToLoadVals);\r\n\r\n    this.resetFilters();\r\n  }\r\n\r\n  public ModalBuildingClose()\r\n  {\r\n    this.resetFilters();\r\n    this.CloseModal();\r\n  }\r\n\r\n  public ModalOccupancyClose()\r\n  {\r\n    this.resetFilters();\r\n    this.CloseModal();\r\n  }\r\n  private async applyOccInput()\r\n  {\r\n    var addToLoadVals : boolean = false;\r\n    var fieldType = FieldTypes.OccupancyInput;\r\n\r\n    var locs : LocationDto[];\r\n\r\n    locs = this.Locations.filter(x=> x.occupancyOrig && x.occupancyOrig.toLowerCase().includes(this.SelectedTxt));\r\n    \r\n    addToLoadVals = true;\r\n\r\n    var fieldType = FieldTypes.Occupancy;\r\n\r\n    await this.applyCommon(locs, this.SelectedOccupancyTypeId.toString(), fieldType, addToLoadVals);\r\n\r\n    this.resetFilters();\r\n  }\r\n\r\n  private async applyOcc(forAllLocations : boolean, forUnknown : boolean)\r\n  {\r\n    var addToLoadVals : boolean = false;\r\n    var fieldType = FieldTypes.Occupancy;\r\n\r\n    debugger;\r\n    var locs : LocationDto[];\r\n    if (forUnknown == true && forAllLocations == false)\r\n    {\r\n      locs = this.Locations.filter(x=> x.occupancyType.code == 0);\r\n\r\n      if (locs.length == 0)\r\n        this._toastr.show(\"There are 0 locations with an unknown occupancy\", \"Common Occupancy Not applied to any Location records\", { positionClass: 'toast-top-full-width',titleClass: \"custom-title-blue\"});\r\n    }\r\n\r\n    if (forUnknown == false && forAllLocations == true)\r\n    {\r\n      locs = this.Locations.filter(x=> x.occupancyOrig == this._selectedRowData.occupancyOrig);\r\n      addToLoadVals = true;\r\n    }\r\n\r\n    if (forUnknown == false && forAllLocations == false)\r\n    {\r\n      locs = this.Locations.filter(x=> x.locId == this._selectedRowData.locId);\r\n      addToLoadVals = true;\r\n    }\r\n      \r\n\r\n    var fieldType = this._selectedCol;\r\n\r\n    await this.applyCommon(locs, this.SelectedOccupancyTypeId.toString(), fieldType, addToLoadVals);\r\n    this.IsUnknown = false;\r\n  }\r\n\r\n  agGrid_UpdateLocs(locations : LocationDto[])\r\n  {\r\n   \r\n      locations.forEach(loc=>\r\n        {\r\n          var rowNode = this._gridApi.getRowNode(loc.uniqueId - 1)\r\n\r\n          rowNode.setData(loc);\r\n          this._gridApi.flashCells({\r\n            rowNodes: [rowNode]\r\n          });\r\n        });\r\n  }\r\n\r\n  private Checked()\r\n  {\r\n    var alreadyReconciled = this.Locations.filter(x=> !this._reconciled.includes(x));\r\n    var locs = alreadyReconciled.filter(x=> x.reconciled == true);\r\n\r\n    if (locs.length > 0)\r\n    {\r\n      this.HasReconciled = true;\r\n      return;\r\n    }\r\n    this.HasReconciled = false;\r\n\r\n  }\r\n\r\n  private onSelectionChanged(params)\r\n  {\r\n  \r\n    this.HasReconciled = false;\r\n    var ctr = 0;\r\n    this.Locations.forEach(loc=>\r\n      {\r\n        var rowNode = this._gridApi.getRowNode(loc.uniqueId - 1)\r\n        \r\n        if (rowNode.data.reconciled == true)\r\n        {\r\n          ctr++;\r\n        }\r\n      });\r\n\r\n      if (ctr > 0)\r\n      {\r\n        this.HasReconciled = true;\r\n      }\r\n  }\r\n\r\n\r\n  async ngAfterViewInit() {\r\n\r\n    var conversion = this._conversionService.Get();\r\n    if (conversion.convId === -99)\r\n      this._router.navigate(['/manager']);\r\n  }\r\n\r\n  CloseOccupancy()\r\n  {\r\n    document.getElementById(\"occOptions\").style.width = \"0\";\r\n  }\r\n  CloseBuilding()\r\n  {\r\n    document.getElementById(\"buildingOptions\").style.width = \"0\";\r\n  }\r\n\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false,\r\n  apiUrl: 'http://localhost:13200/',\r\n  encryptKey: \"253D3FB468A0E24677C28A624BE0F939\",\r\n  iv : \"0000000000000000000000000000000\",\r\n  defaultPwd : 'pa55W0rd',\r\n  signalrUrl: 'http://172.107.203.118:86/morph'\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n","/* (ignored) */","/* (ignored) */","/* (ignored) */","/* (ignored) */"]}