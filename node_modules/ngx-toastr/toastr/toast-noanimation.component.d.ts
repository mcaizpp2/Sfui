import { ModuleWithProviders } from '@angular/compiler/src/core';
import { ApplicationRef, OnDestroy } from '@angular/core';
import { GlobalConfig, IndividualConfig, ToastPackage } from './toastr-config';
import { ToastrService } from './toastr.service';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '@angular/common';
export declare class ToastNoAnimation implements OnDestroy {
    protected toastrService: ToastrService;
    toastPackage: ToastPackage;
    protected appRef: ApplicationRef;
    message?: string | null;
    title?: string;
    options: IndividualConfig;
    duplicatesCount: number;
    originalTimeout: number;
    /** width of progress bar */
    width: number;
    /** a combination of toast type and options.toastClass */
    toastClasses: string;
    /** hides component when waiting to be displayed */
    readonly displayStyle: string;
    /** controls animation */
    state: string;
    private timeout;
    private intervalId;
    private hideTime;
    private sub;
    private sub1;
    private sub2;
    private sub3;
    constructor(toastrService: ToastrService, toastPackage: ToastPackage, appRef: ApplicationRef);
    ngOnDestroy(): void;
    /**
     * activates toast and sets timeout
     */
    activateToast(): void;
    /**
     * updates progress bar width
     */
    updateProgress(): void;
    resetTimeout(): void;
    /**
     * tells toastrService to remove this toast after animation time
     */
    remove(): void;
    tapToast(): void;
    stickAround(): void;
    delayedHideToast(): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<ToastNoAnimation, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<ToastNoAnimation, "[toast-component]", never, {}, {}, never, never>;
}
export declare const DefaultNoAnimationsGlobalConfig: GlobalConfig;
export declare class ToastNoAnimationModule {
    static forRoot(config?: Partial<GlobalConfig>): (ModuleWithProviders)&{ngModule:ToastNoAnimationModule};
    static ɵmod: ɵngcc0.ɵɵNgModuleDefWithMeta<ToastNoAnimationModule, [typeof ToastNoAnimation], [typeof ɵngcc1.CommonModule], [typeof ToastNoAnimation]>;
    static ɵinj: ɵngcc0.ɵɵInjectorDef<ToastNoAnimationModule>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidG9hc3Qtbm9hbmltYXRpb24uY29tcG9uZW50LmQudHMiLCJzb3VyY2VzIjpbInRvYXN0LW5vYW5pbWF0aW9uLmNvbXBvbmVudC5kLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBOzs7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQUNBO0FBQ0E7QUFDQTtBQUNBLG9EQUFvRCx1REFBbUI7OztBQUN2RSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE1vZHVsZVdpdGhQcm92aWRlcnMgfSBmcm9tICdAYW5ndWxhci9jb21waWxlci9zcmMvY29yZSc7XG5pbXBvcnQgeyBBcHBsaWNhdGlvblJlZiwgT25EZXN0cm95IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBHbG9iYWxDb25maWcsIEluZGl2aWR1YWxDb25maWcsIFRvYXN0UGFja2FnZSB9IGZyb20gJy4vdG9hc3RyLWNvbmZpZyc7XG5pbXBvcnQgeyBUb2FzdHJTZXJ2aWNlIH0gZnJvbSAnLi90b2FzdHIuc2VydmljZSc7XG5leHBvcnQgZGVjbGFyZSBjbGFzcyBUb2FzdE5vQW5pbWF0aW9uIGltcGxlbWVudHMgT25EZXN0cm95IHtcbiAgICBwcm90ZWN0ZWQgdG9hc3RyU2VydmljZTogVG9hc3RyU2VydmljZTtcbiAgICB0b2FzdFBhY2thZ2U6IFRvYXN0UGFja2FnZTtcbiAgICBwcm90ZWN0ZWQgYXBwUmVmOiBBcHBsaWNhdGlvblJlZjtcbiAgICBtZXNzYWdlPzogc3RyaW5nIHwgbnVsbDtcbiAgICB0aXRsZT86IHN0cmluZztcbiAgICBvcHRpb25zOiBJbmRpdmlkdWFsQ29uZmlnO1xuICAgIGR1cGxpY2F0ZXNDb3VudDogbnVtYmVyO1xuICAgIG9yaWdpbmFsVGltZW91dDogbnVtYmVyO1xuICAgIC8qKiB3aWR0aCBvZiBwcm9ncmVzcyBiYXIgKi9cbiAgICB3aWR0aDogbnVtYmVyO1xuICAgIC8qKiBhIGNvbWJpbmF0aW9uIG9mIHRvYXN0IHR5cGUgYW5kIG9wdGlvbnMudG9hc3RDbGFzcyAqL1xuICAgIHRvYXN0Q2xhc3Nlczogc3RyaW5nO1xuICAgIC8qKiBoaWRlcyBjb21wb25lbnQgd2hlbiB3YWl0aW5nIHRvIGJlIGRpc3BsYXllZCAqL1xuICAgIHJlYWRvbmx5IGRpc3BsYXlTdHlsZTogc3RyaW5nO1xuICAgIC8qKiBjb250cm9scyBhbmltYXRpb24gKi9cbiAgICBzdGF0ZTogc3RyaW5nO1xuICAgIHByaXZhdGUgdGltZW91dDtcbiAgICBwcml2YXRlIGludGVydmFsSWQ7XG4gICAgcHJpdmF0ZSBoaWRlVGltZTtcbiAgICBwcml2YXRlIHN1YjtcbiAgICBwcml2YXRlIHN1YjE7XG4gICAgcHJpdmF0ZSBzdWIyO1xuICAgIHByaXZhdGUgc3ViMztcbiAgICBjb25zdHJ1Y3Rvcih0b2FzdHJTZXJ2aWNlOiBUb2FzdHJTZXJ2aWNlLCB0b2FzdFBhY2thZ2U6IFRvYXN0UGFja2FnZSwgYXBwUmVmOiBBcHBsaWNhdGlvblJlZik7XG4gICAgbmdPbkRlc3Ryb3koKTogdm9pZDtcbiAgICAvKipcbiAgICAgKiBhY3RpdmF0ZXMgdG9hc3QgYW5kIHNldHMgdGltZW91dFxuICAgICAqL1xuICAgIGFjdGl2YXRlVG9hc3QoKTogdm9pZDtcbiAgICAvKipcbiAgICAgKiB1cGRhdGVzIHByb2dyZXNzIGJhciB3aWR0aFxuICAgICAqL1xuICAgIHVwZGF0ZVByb2dyZXNzKCk6IHZvaWQ7XG4gICAgcmVzZXRUaW1lb3V0KCk6IHZvaWQ7XG4gICAgLyoqXG4gICAgICogdGVsbHMgdG9hc3RyU2VydmljZSB0byByZW1vdmUgdGhpcyB0b2FzdCBhZnRlciBhbmltYXRpb24gdGltZVxuICAgICAqL1xuICAgIHJlbW92ZSgpOiB2b2lkO1xuICAgIHRhcFRvYXN0KCk6IHZvaWQ7XG4gICAgc3RpY2tBcm91bmQoKTogdm9pZDtcbiAgICBkZWxheWVkSGlkZVRvYXN0KCk6IHZvaWQ7XG59XG5leHBvcnQgZGVjbGFyZSBjb25zdCBEZWZhdWx0Tm9BbmltYXRpb25zR2xvYmFsQ29uZmlnOiBHbG9iYWxDb25maWc7XG5leHBvcnQgZGVjbGFyZSBjbGFzcyBUb2FzdE5vQW5pbWF0aW9uTW9kdWxlIHtcbiAgICBzdGF0aWMgZm9yUm9vdChjb25maWc/OiBQYXJ0aWFsPEdsb2JhbENvbmZpZz4pOiBNb2R1bGVXaXRoUHJvdmlkZXJzO1xufVxuIl19