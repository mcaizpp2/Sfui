import { EventEmitter } from "@angular/core";
import { ControlValueAccessor } from "@angular/forms";
import { ListItem, IDropdownSettings } from "./multiselect.model";
import { ListFilterPipe } from "./list-filter.pipe";
import * as ɵngcc0 from '@angular/core';
export declare const DROPDOWN_CONTROL_VALUE_ACCESSOR: any;
export declare class MultiSelectComponent implements ControlValueAccessor {
    private listFilterPipe;
    _settings: IDropdownSettings;
    _data: Array<ListItem>;
    selectedItems: Array<ListItem>;
    isDropdownOpen: boolean;
    _placeholder: string;
    private _sourceDataType;
    private _sourceDataFields;
    filter: ListItem;
    defaultSettings: IDropdownSettings;
    placeholder: string;
    disabled: boolean;
    settings: IDropdownSettings;
    data: Array<any>;
    onFilterChange: EventEmitter<ListItem>;
    onDropDownClose: EventEmitter<ListItem>;
    onSelect: EventEmitter<ListItem>;
    onDeSelect: EventEmitter<ListItem>;
    onSelectAll: EventEmitter<Array<ListItem>>;
    onDeSelectAll: EventEmitter<Array<ListItem>>;
    private onTouchedCallback;
    private onChangeCallback;
    onFilterTextChange($event: any): void;
    constructor(listFilterPipe: ListFilterPipe);
    onItemClick($event: any, item: ListItem): boolean;
    writeValue(value: any): void;
    registerOnChange(fn: any): void;
    registerOnTouched(fn: any): void;
    onTouched(): void;
    trackByFn(index: any, item: any): any;
    isSelected(clickedItem: ListItem): boolean;
    isLimitSelectionReached(): boolean;
    isAllItemsSelected(): boolean;
    showButton(): boolean;
    itemShowRemaining(): number;
    addSelected(item: ListItem): void;
    removeSelected(itemSel: ListItem): void;
    emittedValue(val: any): any;
    objectify(val: ListItem): {};
    toggleDropdown(evt: any): void;
    closeDropdown(): void;
    toggleSelectAll(): boolean;
    getFields(inputData: any): any[];
    static ɵfac: ɵngcc0.ɵɵFactoryDef<MultiSelectComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<MultiSelectComponent, "ng-multiselect-dropdown", never, { "disabled": "disabled"; "placeholder": "placeholder"; "settings": "settings"; "data": "data"; }, { "onFilterChange": "onFilterChange"; "onDropDownClose": "onDropDownClose"; "onSelect": "onSelect"; "onDeSelect": "onDeSelect"; "onSelectAll": "onSelectAll"; "onDeSelectAll": "onDeSelectAll"; }, never, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibXVsdGlzZWxlY3QuY29tcG9uZW50LmQudHMiLCJzb3VyY2VzIjpbIm11bHRpc2VsZWN0LmNvbXBvbmVudC5kLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBOztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FBQ0EiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBFdmVudEVtaXR0ZXIgfSBmcm9tIFwiQGFuZ3VsYXIvY29yZVwiO1xuaW1wb3J0IHsgQ29udHJvbFZhbHVlQWNjZXNzb3IgfSBmcm9tIFwiQGFuZ3VsYXIvZm9ybXNcIjtcbmltcG9ydCB7IExpc3RJdGVtLCBJRHJvcGRvd25TZXR0aW5ncyB9IGZyb20gXCIuL211bHRpc2VsZWN0Lm1vZGVsXCI7XG5pbXBvcnQgeyBMaXN0RmlsdGVyUGlwZSB9IGZyb20gXCIuL2xpc3QtZmlsdGVyLnBpcGVcIjtcbmV4cG9ydCBkZWNsYXJlIGNvbnN0IERST1BET1dOX0NPTlRST0xfVkFMVUVfQUNDRVNTT1I6IGFueTtcbmV4cG9ydCBkZWNsYXJlIGNsYXNzIE11bHRpU2VsZWN0Q29tcG9uZW50IGltcGxlbWVudHMgQ29udHJvbFZhbHVlQWNjZXNzb3Ige1xuICAgIHByaXZhdGUgbGlzdEZpbHRlclBpcGU7XG4gICAgX3NldHRpbmdzOiBJRHJvcGRvd25TZXR0aW5ncztcbiAgICBfZGF0YTogQXJyYXk8TGlzdEl0ZW0+O1xuICAgIHNlbGVjdGVkSXRlbXM6IEFycmF5PExpc3RJdGVtPjtcbiAgICBpc0Ryb3Bkb3duT3BlbjogYm9vbGVhbjtcbiAgICBfcGxhY2Vob2xkZXI6IHN0cmluZztcbiAgICBwcml2YXRlIF9zb3VyY2VEYXRhVHlwZTtcbiAgICBwcml2YXRlIF9zb3VyY2VEYXRhRmllbGRzO1xuICAgIGZpbHRlcjogTGlzdEl0ZW07XG4gICAgZGVmYXVsdFNldHRpbmdzOiBJRHJvcGRvd25TZXR0aW5ncztcbiAgICBwbGFjZWhvbGRlcjogc3RyaW5nO1xuICAgIGRpc2FibGVkOiBib29sZWFuO1xuICAgIHNldHRpbmdzOiBJRHJvcGRvd25TZXR0aW5ncztcbiAgICBkYXRhOiBBcnJheTxhbnk+O1xuICAgIG9uRmlsdGVyQ2hhbmdlOiBFdmVudEVtaXR0ZXI8TGlzdEl0ZW0+O1xuICAgIG9uRHJvcERvd25DbG9zZTogRXZlbnRFbWl0dGVyPExpc3RJdGVtPjtcbiAgICBvblNlbGVjdDogRXZlbnRFbWl0dGVyPExpc3RJdGVtPjtcbiAgICBvbkRlU2VsZWN0OiBFdmVudEVtaXR0ZXI8TGlzdEl0ZW0+O1xuICAgIG9uU2VsZWN0QWxsOiBFdmVudEVtaXR0ZXI8QXJyYXk8TGlzdEl0ZW0+PjtcbiAgICBvbkRlU2VsZWN0QWxsOiBFdmVudEVtaXR0ZXI8QXJyYXk8TGlzdEl0ZW0+PjtcbiAgICBwcml2YXRlIG9uVG91Y2hlZENhbGxiYWNrO1xuICAgIHByaXZhdGUgb25DaGFuZ2VDYWxsYmFjaztcbiAgICBvbkZpbHRlclRleHRDaGFuZ2UoJGV2ZW50OiBhbnkpOiB2b2lkO1xuICAgIGNvbnN0cnVjdG9yKGxpc3RGaWx0ZXJQaXBlOiBMaXN0RmlsdGVyUGlwZSk7XG4gICAgb25JdGVtQ2xpY2soJGV2ZW50OiBhbnksIGl0ZW06IExpc3RJdGVtKTogYm9vbGVhbjtcbiAgICB3cml0ZVZhbHVlKHZhbHVlOiBhbnkpOiB2b2lkO1xuICAgIHJlZ2lzdGVyT25DaGFuZ2UoZm46IGFueSk6IHZvaWQ7XG4gICAgcmVnaXN0ZXJPblRvdWNoZWQoZm46IGFueSk6IHZvaWQ7XG4gICAgb25Ub3VjaGVkKCk6IHZvaWQ7XG4gICAgdHJhY2tCeUZuKGluZGV4OiBhbnksIGl0ZW06IGFueSk6IGFueTtcbiAgICBpc1NlbGVjdGVkKGNsaWNrZWRJdGVtOiBMaXN0SXRlbSk6IGJvb2xlYW47XG4gICAgaXNMaW1pdFNlbGVjdGlvblJlYWNoZWQoKTogYm9vbGVhbjtcbiAgICBpc0FsbEl0ZW1zU2VsZWN0ZWQoKTogYm9vbGVhbjtcbiAgICBzaG93QnV0dG9uKCk6IGJvb2xlYW47XG4gICAgaXRlbVNob3dSZW1haW5pbmcoKTogbnVtYmVyO1xuICAgIGFkZFNlbGVjdGVkKGl0ZW06IExpc3RJdGVtKTogdm9pZDtcbiAgICByZW1vdmVTZWxlY3RlZChpdGVtU2VsOiBMaXN0SXRlbSk6IHZvaWQ7XG4gICAgZW1pdHRlZFZhbHVlKHZhbDogYW55KTogYW55O1xuICAgIG9iamVjdGlmeSh2YWw6IExpc3RJdGVtKToge307XG4gICAgdG9nZ2xlRHJvcGRvd24oZXZ0OiBhbnkpOiB2b2lkO1xuICAgIGNsb3NlRHJvcGRvd24oKTogdm9pZDtcbiAgICB0b2dnbGVTZWxlY3RBbGwoKTogYm9vbGVhbjtcbiAgICBnZXRGaWVsZHMoaW5wdXREYXRhOiBhbnkpOiBhbnlbXTtcbn1cbiJdfQ==